framework,Id,PostTypeId,AcceptedAnswerId,positionOfAnswer,answerCreationDate,delayBetweenQuestionCreationAndAnswerCreation,ParentId,CreationDate,DeletionDate,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditorDisplayName,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,ClosedDate,CommunityOwnedDate
Spring,18888714,1,18889923,67,9/19/2013 8:38:42,1,,9/19/2013 7:32:46,,1,1579,"<p>I try to run a basic Spring MVC application, like the one <a href=""https://github.com/geowarin/spring-mvc-examples/tree/master/mvc-base"" rel=""nofollow"">here</a> (or also the Spring MVC tutorial <a href=""https://github.com/spring-guides/tut-web/tree/master/4/complete"" rel=""nofollow"">here</a>).</p>

<p>I just open the project in IntelliJ, import it on a Tomcat 7 instance, and start the Tomcat server. But when I try to reach the <code>http://localhost:8080</code>, I get a 404 error.</p>

<p>The project I downloaded from GitHub provides 2 ways to start the application, with <code>mvn jetty:run</code> or <code>mvn tomcat7:run</code>. When I run any of these commands (outside IntelliJ), the application starts succesfully, and the web page is displayed correctly on the <code>http://localthost:8080</code> URL, which led me think that the problem comes from IntelliJ.</p>

<p>Adding some debug information, it appears that when run under IntelliJ, the <code>WebInitializer</code> class is loaded, but not the <code>WebConfig</code> class, even if the method <code>WebInitializer.getServletConfigClasses()</code> is called.</p>

<p>With <code>mvn jetty:run</code> or <code>mvn tomcat7:run</code>, both classes are correctly instantiated.</p>

<p>Unfortunately, I have no error at all in any logs provided by Tomcat / IntelliJ, so I'm a bit lost.</p>

<p>What I am doing wrong, or what I've missed in the configuration of my project in IntelliJ?</p>

<p>Thanks</p>

<p>Technical info: Java 7, Tomcat 7, IntelliJ Ultimate 12.1.4, Spring 3.2.2.RELEASE</p>
",26457,,,,,2013-09-19 8:38:42,Spring MVC application deployed on Tomcat does not run on IntelliJ,<java><spring-mvc><intellij-idea><tomcat7>,1,0,,,
Spring,19482372,1,19527771,68,10/22/2013 20:33:40,48,,10/20/2013 20:18:23,,1,4863,"<p>The test method below appear in a <a href=""https://github.com/spring-guides/tut-web/blob/master/5/complete/src/test/java/com/yummynoodlebar/web/controller/CheckoutIntegrationTest.java"" rel=""nofollow"">spring-guide tutorial</a>.
Is there a less convoluted syntax to write this test or how can I break it apart into smaller chunks?</p>

<pre><code>verify(orderService).createOrder(
      org.mockito.Matchers.&lt;CreateOrderEvent&gt;argThat(
        allOf( org.hamcrest.Matchers.&lt;CreateOrderEvent&gt;
            hasProperty(""details"",
                hasProperty(""dateTimeOfSubmission"", notNullValue())),

        org.hamcrest.Matchers.&lt;CreateOrderEvent&gt;hasProperty(""details"",
                hasProperty(""name"", equalTo(CUSTOMER_NAME))),

        org.hamcrest.Matchers.&lt;CreateOrderEvent&gt;hasProperty(""details"",
                hasProperty(""address1"", equalTo(ADDRESS1))),
        org.hamcrest.Matchers.&lt;CreateOrderEvent&gt;hasProperty(""details"",
                hasProperty(""postcode"", equalTo(POST_CODE)))
    )));
</code></pre>
",617552,,,,,2013-10-22 20:33:40,How do I simplify mockito/hamcrest argument matchers in test method?,<java><spring><unit-testing><mockito><hamcrest>,2,0,,,
Spring,20101448,1,20102983,69,11/20/2013 17:38:22,1,,11/20/2013 16:29:30,,1,2420,"<p>I am utterly confused by something I expected to work just out of the box. So either I am doing something totally wrong or this is just a misunderstanding.</p>

<p>I am trying to have a getter/setter annotation in a JPA Entity class. I sticked to an example I found on the JPA wiki (s. <a href=""http://en.wikibooks.org/wiki/Java_Persistence/Basic_Attributes#Conversion"" rel=""nofollow"">http://en.wikibooks.org/wiki/Java_Persistence/Basic_Attributes#Conversion</a>). The example looks as follows:</p>

<pre><code>    @Entity
    public class Employee {
        ...
        private boolean isActive;
        ...
        @Transient
        public boolean getIsActive() {
            return isActive;
        }
        public void setIsActive(boolean isActive) {
            this.isActive = isActive;
        }
        @Basic
        private String getIsActiveValue() {
            if (isActive) {
                return ""T"";
            } else {
                return ""F"";
            }
        }
        private void setIsActiveValue(String isActive) {
            this.isActive = ""T"".equals(isActive);
        }
    }
</code></pre>

<p>I took the clearest and cleanest spring-data-jpa example I could find: <a href=""http://spring.io/guides/gs/accessing-data-jpa/"" rel=""nofollow"">http://spring.io/guides/gs/accessing-data-jpa/</a>. </p>

<p>I checked it out from git and changed their example entity class (s. <a href=""https://github.com/spring-guides/gs-accessing-data-jpa/blob/master/complete/src/main/java/hello/Customer.java"" rel=""nofollow"">https://github.com/spring-guides/gs-accessing-data-jpa/blob/master/complete/src/main/java/hello/Customer.java</a>) to look as follows:</p>

<pre><code>@Entity
public class Customer {

    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    private long id;
    private String firstName;
    private String lastName;

    protected Customer() {}

    public Customer(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }

    @Override
    public String toString() {
        return String.format(
                ""Customer[id=%d, firstName='%s', lastName='%s']"",
                id, firstName, lastName);
    }

    @Transient
    private boolean isActive;

    @Transient
    public boolean getIsActive() {
        return isActive;
    }
    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    @Column
    private String getIsActiveValue() {
        if (isActive) {
            return ""T"";
        } else {
            return ""F"";
        }
    }
    private void setIsActiveValue(String isActive) {
        this.isActive = ""T"".equals(isActive);
    }

}
</code></pre>

<p>Now nothing changes. The respective String-Field does not get created. The line from the log creating the database table still looks as follows:</p>

<pre><code>17:11:10.540 [main] DEBUG o.h.tool.hbm2ddl.SchemaUpdate - create table Customer (id bigint generated by default as identity, firstName varchar(255), lastName varchar(255), primary key (id))
</code></pre>

<p>I have absolutely no idea on what could be the reason for this. I could find not documentation that spring-data-jpa would not allow for annotations on getters. </p>

<p>Any help would be very, very appreciated!</p>
",2678817,,,,,2013-11-20 23:34:11,@Column or @Basic JPA annotations ignored in spring-data-jpa schema creation,<java><spring><jpa><spring-data><spring-data-jpa>,2,0,,,
Spring,20168563,1,20187597,70,11/25/2013 8:16:19,34,,11/23/2013 22:15:02,,5,7231,"<p>I'm using spring-boot (I'm following <a href=""http://spring.io/guides/gs/rest-service/"" rel=""noreferrer"">this tutorial</a>), the current code is <a href=""https://github.com/spring-guides/gs-rest-service/tree/master/complete"" rel=""noreferrer"">here</a>.</p>

<p>My application is configured via <code>@EnableAutoConfiguration</code>, so I don't have <code>web.xml</code>, or other configuration files.
The application has a default handler for <code>/**</code>, files from <code>projectRoot/src/main/webapp/</code> are served, but unfortunately with <code>Content-Type: text/html;charset=ISO-8859-1</code>. I'd like to serve (<code>html</code> files) with <code>UTF-8</code> charset.</p>

<p>The static files are served by spring too, as far as I know: after launching the application, the following line apprears in the log: <code>Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</code> (github.com/spring-projects/spring-boot/blob/master/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java#L182, sorry, I cannot post more than 2 links)</p>

<p>Putting <code>&lt;meta charset=""utf-8"" /&gt;</code> or <code>&lt;meta http-equiv=""Content-Type: text/html;charset=utf-8"" /&gt;</code> into the served <code>html</code> file has no effect.</p>

<p>How can I serve <code>*.html</code> files with <code>UTF-8</code> charset?</p>

<p>The debug log is the following:</p>

<pre><code>  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::             (v0.5.0.M6)

2013-11-24 00:48:41.327  INFO 15786 --- [           main] hello.Application                        : Starting Application on ubuntu with PID 15786 (/home/lennon/bme/szoftarch/szoftarch-2013-osz/build/libs/gs-rest-service-0.1.0.jar started by lennon)
2013-11-24 00:48:41.331 DEBUG 15786 --- [           main] o.s.boot.SpringApplication               : Loading source class hello.Application
2013-11-24 00:48:41.380  INFO 15786 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7455ffcd: startup date [Sun Nov 24 00:48:41 CET 2013]; root of context hierarchy
2013-11-24 00:48:41.385 DEBUG 15786 --- [           main] ationConfigEmbeddedWebApplicationContext : Bean factory for org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7455ffcd: org.springframework.beans.factory.support.DefaultListableBeanFactory@54cb8484: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,application]; root of factory hierarchy
2013-11-24 00:48:42.179 DEBUG 15786 --- [           main] ationConfigEmbeddedWebApplicationContext : Using MessageSource [org.springframework.context.support.ResourceBundleMessageSource: basenames=[messages]]
2013-11-24 00:48:42.182 DEBUG 15786 --- [           main] ationConfigEmbeddedWebApplicationContext : Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5d36368]
2013-11-24 00:48:42.518 DEBUG 15786 --- [           main] .t.TomcatEmbeddedServletContainerFactory : Code archive: /home/lennon/bme/szoftarch/szoftarch-2013-osz/build/libs/gs-rest-service-0.1.0.jar
2013-11-24 00:48:42.518 DEBUG 15786 --- [           main] .t.TomcatEmbeddedServletContainerFactory : Code archive: /home/lennon/bme/szoftarch/szoftarch-2013-osz/build/libs/gs-rest-service-0.1.0.jar
2013-11-24 00:48:42.518 DEBUG 15786 --- [           main] .t.TomcatEmbeddedServletContainerFactory : Document root: /home/lennon/bme/szoftarch/szoftarch-2013-osz/src/main/webapp
2013-11-24 00:48:42.904  INFO 15786 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2013-11-24 00:48:42.905  INFO 15786 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/7.0.42
2013-11-24 00:48:43.006  INFO 15786 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2013-11-24 00:48:43.007  INFO 15786 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1630 ms
2013-11-24 00:48:43.259  INFO 15786 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2013-11-24 00:48:43.260  INFO 15786 --- [ost-startStop-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2013-11-24 00:48:43.428  INFO 15786 --- [ost-startStop-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2013-11-24 00:48:43.717  INFO 15786 --- [ost-startStop-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped ""{[/greeting],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}"" onto public hello.Greeting hello.GreetingController.greeting(java.lang.String)
2013-11-24 00:48:43.725  INFO 15786 --- [ost-startStop-1] o.s.w.s.c.a.WebMvcConfigurerAdapter      : Adding welcome page: jndi:/localhost/index.html
2013-11-24 00:48:43.732  INFO 15786 --- [ost-startStop-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2013-11-24 00:48:43.811  INFO 15786 --- [ost-startStop-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2013-11-24 00:48:43.812  INFO 15786 --- [ost-startStop-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2013-11-24 00:48:44.489  INFO 15786 --- [ost-startStop-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1229 ms
2013-11-24 00:48:44.641 DEBUG 15786 --- [           main] ationConfigEmbeddedWebApplicationContext : Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@10d6fc05]
2013-11-24 00:48:44.644 DEBUG 15786 --- [           main] nitializer$AutoConfigurationReportLogger : 


=========================
AUTO-CONFIGURATION REPORT
=========================


Positive matches:
-----------------

   MessageSourceAutoConfiguration
      - @ConditionalOnMissingBean (types: org.springframework.context.MessageSource; SearchStrategy: all) found no beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) found no beans (OnBeanCondition)

   DispatcherServletAutoConfiguration
      - found web application StandardServletEnvironment (OnWebApplicationCondition)
      - @ConditionalOnClass classes found: org.springframework.web.servlet.DispatcherServlet (OnClassCondition)
      - found web application StandardServletEnvironment (OnWebApplicationCondition)
      - @ConditionalOnClass classes found: org.springframework.web.servlet.DispatcherServlet (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.context.embedded.EmbeddedServletContainerFactory; SearchStrategy: all) found the following [tomcatEmbeddedServletContainerFactory] (OnBeanCondition)

   DispatcherServletAutoConfiguration#dispatcherServlet
      - no DispatcherServlet found (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   EmbeddedServletContainerAutoConfiguration
      - found web application StandardServletEnvironment (OnWebApplicationCondition)
      - found web application StandardServletEnvironment (OnWebApplicationCondition)

   EmbeddedServletContainerAutoConfiguration.EmbeddedTomcat
      - @ConditionalOnClass classes found: javax.servlet.Servlet,org.apache.catalina.startup.Tomcat (OnClassCondition)
      - @ConditionalOnClass classes found: javax.servlet.Servlet,org.apache.catalina.startup.Tomcat (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.context.embedded.EmbeddedServletContainerFactory; SearchStrategy: current) found no beans (OnBeanCondition)

   ServerPropertiesAutoConfiguration#serverProperties
      - @ConditionalOnMissingBean (types: org.springframework.boot.context.embedded.properties.ServerProperties; SearchStrategy: all) found no beans (OnBeanCondition)

   WebMvcAutoConfiguration
      - found web application StandardServletEnvironment (OnWebApplicationCondition)
      - @ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.servlet.DispatcherServlet,org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter (OnClassCondition)
      - found web application StandardServletEnvironment (OnWebApplicationCondition)
      - @ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.servlet.DispatcherServlet,org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found no beans (OnBeanCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.HiddenHttpMethodFilter; SearchStrategy: all) found no beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) found no beans (OnBeanCondition)


Negative matches:
-----------------

   RabbitAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.amqp.rabbit.core.RabbitTemplate,com.rabbitmq.client.Channel (OnClassCondition)

   AopAutoConfiguration
      - required @ConditionalOnClass classes not found: org.aspectj.lang.annotation.Aspect,org.aspectj.lang.reflect.Advice (OnClassCondition)

   BatchAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.batch.core.launch.JobLauncher (OnClassCondition)

   JpaRepositoriesAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.data.jpa.repository.JpaRepository (OnClassCondition)

   MongoRepositoriesAutoConfiguration
      - required @ConditionalOnClass classes not found: com.mongodb.Mongo,org.springframework.data.mongodb.repository.MongoRepository (OnClassCondition)

   DataSourceAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager (OnClassCondition)

   JmsTemplateAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.jms.core.JmsTemplate,javax.jms.ConnectionFactory (OnClassCondition)

   DeviceResolverAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.mobile.device.DeviceResolverHandlerInterceptor,org.springframework.mobile.device.DeviceHandlerMethodArgumentResolver (OnClassCondition)

   HibernateJpaAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,org.springframework.transaction.annotation.EnableTransactionManagement,javax.persistence.EntityManager,org.hibernate.ejb.HibernateEntityManager (OnClassCondition)

   ReactorAutoConfiguration
      - required @ConditionalOnClass classes not found: reactor.spring.context.config.EnableReactor (OnClassCondition)

   ThymeleafAutoConfiguration
      - required @ConditionalOnClass classes not found: org.thymeleaf.spring3.SpringTemplateEngine (OnClassCondition)

   EmbeddedServletContainerAutoConfiguration.EmbeddedJetty
      - required @ConditionalOnClass classes not found: org.eclipse.jetty.server.Server,org.eclipse.jetty.util.Loader (OnClassCondition)

   MultipartAutoConfiguration
      - @ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.multipart.support.StandardServletMultipartResolver (OnClassCondition)
      - @ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.multipart.support.StandardServletMultipartResolver (OnClassCondition)
      - @ConditionalOnBean (types: javax.servlet.MultipartConfigElement; SearchStrategy: all) found no beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver
      - @ConditionalOnBean (types: org.springframework.web.servlet.View; SearchStrategy: all) found no beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver
      - @ConditionalOnBean (types: org.springframework.web.servlet.View; SearchStrategy: all) found no beans (OnBeanCondition)

   WebSocketAutoConfiguration
      - required @ConditionalOnClass classes not found: org.springframework.web.socket.WebSocketHandler (OnClassCondition)

2013-11-24 00:48:44.650  INFO 15786 --- [           main] hello.Application                        : Started Application in 4.125 seconds
</code></pre>
",2288351,,2288351,,2013-11-23 23:54:35,2013-11-25 8:16:19,Spring-boot UTF-8 resources,<java><spring><utf-8><spring-boot>,2,5,2,,
Spring,21305874,1,21846758,71,2/18/2014 7:19:17,620,,1/23/2014 10:45:45,,1,1083,"<p>I tried to make STOMP connection to RabbitMQ using Spring 4.0 WebSocketMessageBrokerConfigurer class, but failed ?</p>

<p>Snap of code is here. </p>

<pre><code>@Configuration
@EnableWebSocketMessageBroker
public class WebSocketConfig implements WebSocketMessageBrokerConfigurer {

    @Override
    public void configureMessageBroker(MessageBrokerRegistry config) {
        StompBrokerRelayRegistration StompBrokerRelayRegistration = config.enableStompBrokerRelay(""/"");
        StompBrokerRelayRegistration.setApplicationLogin(""guest"");
        StompBrokerRelayRegistration.setApplicationPasscode(""guest"");
        StompBrokerRelayRegistration.setAutoStartup(true);
        StompBrokerRelayRegistration.setRelayHost(""localhost"");
        StompBrokerRelayRegistration.setRelayPort(15674);
</code></pre>

<p>Note that</p>

<ul>
<li>I am using spring boot to run application. In fact I am changing the existing spring example ""<a href=""https://github.com/spring-guides/gs-messaging-stomp-websocket"" rel=""nofollow"">gs-messaging-stomp-websocket</a>"". and changing class <a href=""https://github.com/spring-guides/gs-messaging-stomp-websocket/blob/master/complete/src/main/java/hello/WebSocketConfig.java"" rel=""nofollow"">WebSocketConfig</a>.</li>
<li>Rabbitmq is locally installed with STOMP plugin enabled.</li>
<li>Added all the maven dependency like spring-rabbitmq.</li>
</ul>

<p>Do I need to do any thing else ? </p>

<p>Thanks,
Rafiq</p>
",838659,,838659,,2014-01-29 3:37:46,2014-03-21 5:38:01,Fail to connect to Rabbitmq using Spring 4.0 webstocket stomp api,<rabbitmq><spring-4><spring-messaging><spring-websocket>,1,0,,,
Spring,22600920,1,22604552,72,3/24/2014 8:42:38,4,,3/24/2014 4:09:14,,1,303,"<p>I've been trying to get this simple example running (with java 1.7) <a href=""https://github.com/spring-guides/gs-accessing-neo4j-data-rest/tree/master/complete"" rel=""nofollow"">https://github.com/spring-guides/gs-accessing-neo4j-data-rest/tree/master/complete</a></p>

<p>I keep getting the following error when attempting to start the application via the main method in the Application class.</p>

<p>I'uploaded the entire log to this gist: <a href=""http://bit.ly/1hU7Vpu"" rel=""nofollow"">http://bit.ly/1hU7Vpu</a></p>

<p>Here's the summary of the error.</p>

<pre><code>WARN 6470 --- [           main] o.s.boot.SpringApplication               : Error handling failed (Error creating bean with name 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration': Initialization of bean failed; nested exception is java.lang.NoSuchMethodError: org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration.setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V)
Exception in thread ""main"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityFetchHandler' defined in class hello.Application: Instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public org.springframework.data.neo4j.support.mapping.Neo4jEntityFetchHandler org.springframework.data.neo4j.config.Neo4jConfiguration.entityFetchHandler() throws java.lang.Exception] threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'nodeStateTransmitter' defined in class hello.Application: Initialization of bean failed; nested exception is java.lang.reflect.MalformedParameterizedTypeException
</code></pre>
",2091827,,592228,,2014-03-24 8:43:12,2014-03-24 13:28:49,Spring Neo4J REST error - nodeStateTransmitter,<java><spring><rest><neo4j><spring-boot>,1,0,1,,
Spring,22935840,1,22935912,73,4/8/2014 11:40:53,0,,4/8/2014 11:37:56,,2,4169,"<p>I am going through this guide:</p>

<p><a href=""https://spring.io/guides/gs/rest-service/"" rel=""nofollow"">https://spring.io/guides/gs/rest-service/</a></p>

<p>I use Maven for building, so I've fetched the pom.xml linked in the official Spring guide:</p>

<p><a href=""https://github.com/spring-guides/gs-rest-service/blob/master/initial/pom.xml"" rel=""nofollow"">https://github.com/spring-guides/gs-rest-service/blob/master/initial/pom.xml</a></p>

<pre><code>    &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;

    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;org.springframework&lt;/groupId&gt;
    &lt;artifactId&gt;gs-rest-service&lt;/artifactId&gt;
    &lt;version&gt;0.1.0&lt;/version&gt;

    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;1.0.1.RELEASE&lt;/version&gt;
    &lt;/parent&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;properties&gt;
        &lt;start-class&gt;hello.Application&lt;/start-class&gt;
    &lt;/properties&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
                &lt;version&gt;2.3.2&lt;/version&gt;
            &lt;/plugin&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-build&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

    &lt;repositories&gt;
        &lt;repository&gt;
            &lt;id&gt;spring-snapshots&lt;/id&gt;
            &lt;url&gt;http://repo.spring.io/libs-snapshot&lt;/url&gt;
            &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
        &lt;/repository&gt;
        &lt;repository&gt;
            &lt;id&gt;spring-repo&lt;/id&gt;
            &lt;name&gt;Spring Repository&lt;/name&gt;
            &lt;url&gt;http://repo.spring.io/release&lt;/url&gt;
        &lt;/repository&gt;
    &lt;/repositories&gt;
    &lt;pluginRepositories&gt;
        &lt;pluginRepository&gt;
            &lt;id&gt;spring-snapshots&lt;/id&gt;
            &lt;url&gt;http://repo.spring.io/libs-snapshot&lt;/url&gt;
            &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
        &lt;/pluginRepository&gt;
    &lt;/pluginRepositories&gt;
&lt;/project&gt;
</code></pre>

<p>I get the following error when running <em>mvn install</em></p>

<blockquote>
  <p>[ERROR] Error resolving version for plugin
  org.springframework.boot:spring-boot-maven-build' from the
  repositories [local (C:\Users\Laszlo_Szucs.m2\repository),
  spring-snapshots (repo.spring.io/libs-snapshot), central
  repo.maven.apache.org/maven2)]: Plugin not found in any plugin
  repository -> [Help 1]</p>
</blockquote>

<p><strong>How do I know which version to provide in the pom.xml for this?</strong></p>
",2427686,,2427686,,2014-04-08 12:15:57,2017-10-06 7:00:46,Cannot build Spring 4 project with Maven,<java><spring><maven><pom.xml>,3,1,,,
Spring,23366226,1,23366746,74,4/29/2014 13:55:21,0,,4/29/2014 13:34:32,,28,23955,"<p>I'm having trouble with my first steps using Spring-Boot with JPA. I've started with a pretty minimalistic <a href=""https://github.com/spring-guides/gs-accessing-data-jpa.git"">example from Git</a> using Gradle. </p>

<p>Now simply moving <code>Customer</code> to another package, let's say to <code>hello2</code> results in an exception <code>Caused by: java.lang.IllegalArgumentException: Not an managed type: class hello2.Customer</code>. I tried to add </p>

<p><code>@ComponentScan(basePackageClasses= {Customer.class}) // AND OR
@EnableJpaRepositories(basePackageClasses= {Customer.class})</code></p>

<p>to <code>Application</code>, but without success. </p>

<p>What am I doing wrong?</p>
",294068,,,,,2017-11-24 7:18:08,Spring Boot w/ JPA: move @Entity to different package,<spring><jpa><spring-data><spring-data-jpa><spring-boot>,4,0,5,,
Spring,24025004,1,24040465,75,6/4/2014 14:38:56,17,,6/3/2014 21:12:20,,5,3165,"<p>I'm working with a Maven multi module with a war depending on an other war.</p>

<p>The Spring Boot webapp depends on a basic webapp that only serves html files.</p>

<p>When I run the Spring Boot app, I'm able to access services and html from the main webapp (the Spring Boot one) but I can't access the html files from the dependency war (404). But these html files are well packaged in the Spring Boot webapp war...</p>

<p>Here is a project that show the problem:<br>
<a href=""https://github.com/cthiebault/spring-boot-war-overlays"" rel=""noreferrer"">https://github.com/cthiebault/spring-boot-war-overlays</a></p>

<p>This project has 2 war modules:</p>

<ul>
<li><strong>dependency-webapp</strong>: basic webapp serving just html (/dependency/index.html)</li>
<li><strong>main-webapp</strong>: Spring Boot webapp (copied from Spring Guides <a href=""https://github.com/spring-guides/gs-serving-web-content"" rel=""noreferrer"">gs-serving-web-content</a>). This webapp has a dependency on <strong>dependency-webapp</strong>.</li>
</ul>

<p>Here is the main-webapp pom.xml:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;parent&gt;
    &lt;groupId&gt;spring-boot-overlays&lt;/groupId&gt;
    &lt;artifactId&gt;parent&lt;/artifactId&gt;
    &lt;version&gt;0.1.0-SNAPSHOT&lt;/version&gt;
  &lt;/parent&gt;

  &lt;artifactId&gt;main-webapp&lt;/artifactId&gt;
  &lt;packaging&gt;war&lt;/packaging&gt;

  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;spring-boot-overlays&lt;/groupId&gt;
      &lt;artifactId&gt;dependency-webapp&lt;/artifactId&gt;
      &lt;version&gt;0.1.0-SNAPSHOT&lt;/version&gt;
      &lt;type&gt;war&lt;/type&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

  &lt;build&gt;
    &lt;plugins&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
      &lt;/plugin&gt;
      &lt;plugin&gt;
        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
        &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
        &lt;configuration&gt;
          &lt;overlays&gt;
            &lt;overlay&gt;
              &lt;groupId&gt;spring-boot-overlays&lt;/groupId&gt;
              &lt;artifactId&gt;dependency-webapp&lt;/artifactId&gt;
            &lt;/overlay&gt;
          &lt;/overlays&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;

  &lt;properties&gt;
    &lt;start-class&gt;hello.Application&lt;/start-class&gt;
  &lt;/properties&gt;

&lt;/project&gt;
</code></pre>

<p>Run the webapp: </p>

<pre><code>mvn install
cd main-webapp
mvn spring-boot:run
</code></pre>

<h3>EDIT 1: Here are the logs when I try to access html pages:</h3>

<p><code>http://localhost:8080/index.html</code> <strong>--> OK</strong></p>

<pre><code>o.s.web.servlet.DispatcherServlet        : DispatcherServlet with name 'dispatcherServlet' processing GET request for [/index.html]
s.w.s.m.m.a.RequestMappingHandlerMapping : Looking up handler method for path /index.html
s.w.s.m.m.a.RequestMappingHandlerMapping : Did not find handler method for [/index.html]
o.s.w.s.handler.SimpleUrlHandlerMapping  : Matching patterns for request [/index.html] are [/**]
o.s.w.s.handler.SimpleUrlHandlerMapping  : URI Template variables for request [/index.html] are {}
o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapping [/index.html] to HandlerExecutionChain with handler [org.springframework.web.servlet.resource.ResourceHttpRequestHandler@25595861] and 1 interceptor
o.s.web.servlet.DispatcherServlet        : Last-Modified value for [/index.html] is: -1
o.s.w.s.r.ResourceHttpRequestHandler     : Trying relative path [index.html] against base location: ServletContext resource [/]
o.s.w.s.r.ResourceHttpRequestHandler     : Found matching resource: ServletContext resource [/index.html]
o.s.w.s.r.ResourceHttpRequestHandler     : Determined media type 'text/html' for ServletContext resource [/index.html]
o.s.w.s.r.ResourceHttpRequestHandler     : Resource not modified - returning 304
o.s.web.servlet.DispatcherServlet        : Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
o.s.web.servlet.DispatcherServlet        : Successfully completed request
</code></pre>

<p><code>http://localhost:8080/dependency/index.html</code> <strong>--> ERROR 404</strong></p>

<pre><code>o.s.web.servlet.DispatcherServlet        : DispatcherServlet with name 'dispatcherServlet' processing GET request for [/dependency/index.html]
s.w.s.m.m.a.RequestMappingHandlerMapping : Looking up handler method for path /dependency/index.html
s.w.s.m.m.a.RequestMappingHandlerMapping : Did not find handler method for [/dependency/index.html]
o.s.w.s.handler.SimpleUrlHandlerMapping  : Matching patterns for request [/dependency/index.html] are [/**]
o.s.w.s.handler.SimpleUrlHandlerMapping  : URI Template variables for request [/dependency/index.html] are {}
o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapping [/dependency/index.html] to HandlerExecutionChain with handler [org.springframework.web.servlet.resource.ResourceHttpRequestHandler@25595861] and 1 interceptor
o.s.web.servlet.DispatcherServlet        : Last-Modified value for [/dependency/index.html] is: -1
o.s.w.s.r.ResourceHttpRequestHandler     : Trying relative path [dependency/index.html] against base location: ServletContext resource [/]
o.s.w.s.r.ResourceHttpRequestHandler     : Trying relative path [dependency/index.html] against base location: class path resource [META-INF/resources/]
o.s.w.s.r.ResourceHttpRequestHandler     : Trying relative path [dependency/index.html] against base location: class path resource [resources/]
o.s.w.s.r.ResourceHttpRequestHandler     : Trying relative path [dependency/index.html] against base location: class path resource [static/]
o.s.w.s.r.ResourceHttpRequestHandler     : Trying relative path [dependency/index.html] against base location: class path resource [public/]
o.s.w.s.r.ResourceHttpRequestHandler     : No matching resource found - returning 404
o.s.web.servlet.DispatcherServlet        : Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
o.s.web.servlet.DispatcherServlet        : Successfully completed request
</code></pre>

<p>Any idea of what's wrong?</p>
",386713,,386713,,2014-06-04 13:08:34,2014-06-04 14:38:56,Spring Boot & Maven war overlay,<maven><spring-boot><maven-war-plugin>,1,2,1,,
Spring,24539899,1,24546786,76,7/3/2014 6:49:16,10,,7/2/2014 19:54:36,,1,5245,"<p>I'm following <a href=""https://spring.io/guides/tutorials/rest/"" rel=""nofollow"">this</a> Spring tutorial and I'm stuck on the first step.</p>

<p>I cloned the tutorial repository and tried to run my first Gradle tasks:</p>

<pre><code>$ git clone https://github.com/spring-guides/tut-rest.git
$ cd tut-rest/initial
$ ./gradlew clean test --stacktrace
</code></pre>

<p>This is the error that I got:</p>

<pre><code>org.gradle.api.GradleScriptException: A problem occurred evaluating root project 'initial'.
at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:54)
at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:187)
at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:39)
at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)
at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:34)
at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:55)
at org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:470)
at org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:79)
at org.gradle.configuration.DefaultBuildConfigurer.configure(DefaultBuildConfigurer.java:31)
at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:128)
at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:105)
at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:85)
at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:81)
at org.gradle.launcher.cli.ExecuteBuildAction.run(ExecuteBuildAction.java:33)
at org.gradle.launcher.cli.ExecuteBuildAction.run(ExecuteBuildAction.java:24)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:39)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:29)
at org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:50)
at org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:171)
at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:237)
at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:210)
at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:35)
at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24)
at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:206)
at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169)
at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33)
at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22)
at org.gradle.launcher.Main.doAction(Main.java:33)
at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45)
at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:54)
at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:35)
at org.gradle.launcher.GradleMain.main(GradleMain.java:23)
at org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:33)
at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:130)
at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:48)

Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to org.gradle.api.artifacts.Configuration
at org.gradle.api.artifacts.Configuration$Namer.determineName(Configuration.java:87)
at org.gradle.api.internal.DefaultNamedDomainObjectCollection.add(DefaultNamedDomainObjectCollection.java:70)
at java_util_Set$add.call(Unknown Source)
at org.springframework.build.gradle.propdep.PropDepsPlugin.addConfiguration(PropDepsPlugin.groovy:54)
at org.springframework.build.gradle.propdep.PropDepsPlugin.this$2$addConfiguration(PropDepsPlugin.groovy)
at org.springframework.build.gradle.propdep.PropDepsPlugin$this$2$addConfiguration.callCurrent(Unknown Source)
at org.springframework.build.gradle.propdep.PropDepsPlugin.apply(PropDepsPlugin.groovy:41)
at org.springframework.build.gradle.propdep.PropDepsPlugin.apply(PropDepsPlugin.groovy)
at org.gradle.api.internal.plugins.DefaultPluginContainer.providePlugin(DefaultPluginContainer.java:110)
at org.gradle.api.internal.plugins.DefaultPluginContainer.addPluginInternal(DefaultPluginContainer.java:69)
at org.gradle.api.internal.plugins.DefaultPluginContainer.apply(DefaultPluginContainer.java:35)
at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.applyPlugin(DefaultObjectConfigurationAction.java:117)
at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.access$200(DefaultObjectConfigurationAction.java:36)
at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction$3.run(DefaultObjectConfigurationAction.java:85)
at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.execute(DefaultObjectConfigurationAction.java:130)
at org.gradle.api.internal.project.AbstractPluginAware.apply(AbstractPluginAware.java:41)
at org.gradle.api.Project$apply$0.call(Unknown Source)
at org.gradle.api.internal.project.ProjectScript.apply(ProjectScript.groovy:34)
at org.gradle.api.Script$apply$0.callCurrent(Unknown Source)
at build_2adlb8a21ubaha3t8bdi7pcekq.run(/home/b/Repos/tut-rest/initial/build.gradle:6)
at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:52)
... 34 more
</code></pre>

<p>All I changed in the codebase is that I updated Gradle wrapper from version 1.6 to version 2.0, because using 1.6 was giving me some warning, but I was getting the same casting error before the upgrade.</p>

<p>How do I solve this error?</p>
",3799139,,,,,2014-07-20 10:36:41,Gradle error: java.lang.String cannot be cast to org.gradle.api.artifacts.Configuration,<java><spring><gradle>,2,2,,,
Spring,25571843,1,25574250,77,8/29/2014 18:34:16,2,,8/29/2014 15:51:55,,7,4574,"<p>I'm having problems accessing the sample springBoot application after I deploy it to Weblogic12C. It works fine using the springBoot-embedded Tomcat server.</p>

<h1>Install and test using SpringBoot-embedded Tomcat: all is well</h1>

<p>Steps to reproduce: get the springBoot ""getting started"" application code following the steps: <a href=""https://spring.io/guides/gs/spring-boot/"" rel=""nofollow noreferrer"">https://spring.io/guides/gs/spring-boot/</a></p>

<ul>
<li>git clone <a href=""https://github.com/spring-guides/gs-spring-boot.git"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-spring-boot.git</a></li>
<li>cd gs-spring-boot/complete/ (we'll be using the gr-spring-boot/complete dir so that you don't have to go through the ""getting started"" page above (all changes done for you in ""complete"").  </li>
<li>open the file gs-spring-boot/complete/build.gradle and add "" apply plugin: 'war' "" below the other ""apply plugin"" entries </li>
</ul>

<p>At this point, you can validate that all is well by running the gradle ""bootRun"" tasks which starts the app in the embedded Tomcat server. Once tomcat started, browse to localhost:8080/ and see that you get ""Greetings from Spring Boot!""</p>

<h1>Now let's install this on Weblogic 12C</h1>

<ul>
<li>run ""gradle war"" (again, work from gs-spring-boot/complete/)
you will now have a war file under gs-spring-boot\complete\build\libs\complete.war

<ul>
<li>go to your weblogic12C console. I didn't make changes to my WL12C so the console is located at localhost:7001/console NOTE: I downloaded the WL12C developer version one week ago from the Oracle site. I didn't make any changes to it, as downloaded. The dev version of WL12C download requires that we point it to our already installed JDK. My WL12C uses java version:

<blockquote>
  <blockquote>
    <p>java version ""1.7.0_45""
    Java(TM) SE Runtime Environment (build 1.7.0_45-b18)
    Java HotSpot(TM) Server VM (build 24.45-b08, mixed mode)</p>
  </blockquote>
</blockquote></li>
<li>when in the console, deploy the war file:</li>
<li>click on ""deployments""</li>
<li>click on ""install""</li>
<li>browse to you ""gs-spring-boot \ complete \ build \ libs"" dir </li>
<li>select the radio button next to complete.war and hit next</li>
<li>select ""install as application"" and hit next</li>
<li>leave all options as is [DD only, use the defaults, use same accessibility] and hit next</li>
<li>click finish</li>
</ul></li>
</ul>

<p>At this point, you will see that the application deployed fine:
- click on ""deployments"" again and see that your ""complete"" springBoot app is listed and ACTIVE
- click on ""complete"" and notice on this page: ""Context Root:   /complete"". NOTE: weblogic docs say that if there is no context-root defined in weblogic.xml, then it uses the name of the war file (minus the .war)</p>

<h1>Now, the problem: getting a 403:</h1>

<p>if you try to access the springBoot app at localhost:7001/complete you get a 403!!!</p>

<pre><code>Error 403--Forbidden
From RFC 2068 Hypertext Transfer Protocol -- HTTP/1.1:
10.4.4 403 Forbidden
The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.
</code></pre>

<p>Ok, so let's make one final change (I'm fishing here, maybe weblogic really wants a weblogic.xml):</p>

<ul>
<li>create the dir: gs-spring-boot\complete\src\main\webapp\WEB-INF\</li>
<li>create this file: gs-spring-boot\complete\src\main\webapp\WEB-INF\weblogic.xml</li>
<li><p>edit weblogic.xml to contain:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;wls:weblogic-web-app xmlns:wls=""http://xmlns.oracle.com/weblogic/weblogic-web-app"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd http://xmlns.oracle.com/weblogic/weblogic-web-app http://xmlns.oracle.com/weblogic/weblogic-web-app/1.4/weblogic-web-app.xsd""&gt;
    &lt;wls:weblogic-version&gt;12.1.1&lt;/wls:weblogic-version&gt;
    &lt;wls:context-root&gt;testApp&lt;/wls:context-root&gt;
&lt;/wls:weblogic-web-app&gt;
</code></pre></li>
<li><p>now go back to your weblogic console (localhost:7001/console)</p></li>
<li>go to ""web applications"" and select the checkbox next to ""complete"" then hit ""delete""</li>
<li>restart your weblogic12C server (just to be paranoid)</li>
<li>run the ""gradle clean"" then ""gradle war"" task again to generate a new war file</li>
<li>open the war file (using winzip or whatever) and confirm that the war file now has WEB-INF/weblogic.xml</li>
<li>go to the console the deploy the new war file (use same steps as above)</li>
<li>confirm that the app is now deployed and has a contextRoot of /testApp (as defined in weblogic.xml)</li>
<li>browse to localhost:7001/testApp/</li>
</ul>

<p>The 403 is still there. So:</p>

<ul>
<li>weblogic DOES know about this application (returns 403). Because if it didn't know about the application, it would return 404 (try it by going to localhost:7001/doesNotExist and you'll get 404)</li>
<li>but it looks like WL12C doesn't route requests to spring. In the past, we'd define a bunch of things in web.xml but nowadays, with javaConfig and SpringBoot, this should all be done automagically...

<ul>
<li>note: because SpringBoot uses JavaConfig (Servlet3), we can't use anything lower that weblogic12C (which is the latest)</li>
</ul></li>
</ul>

<h1>Another thing I tried: change RequestMapping</h1>

<p>In the sample code above, open the file gs-spring-boot\complete\src\main\java\hello\HelloController.java and replace:</p>

<pre><code>@RequestMapping(""/"")
</code></pre>

<p>with this:</p>

<pre><code>@RequestMapping(""pierre.htm"")
</code></pre>

<p>Now, if you browse to (remember weblogic.xml define context-root as /testApp):</p>

<ul>
<li>localhost:7001/testApp/pierre.htm you'll get a 404 </li>
<li>localhost:7001/testApp/           you'll get 403</li>
</ul>

<p>And if you try on tomcat with ""gradle bootrun"", you can get to it fine: localhost:8080/pierre.htm (you get ""greetings from SpringBoot!"").</p>

<p>So this yields the following hints:</p>

<ul>
<li>Weblogic does know about /testApp</li>
<li>Weblogic has no idea what /testApp/pierre.htm is. It's like it was never configured as a RequestMapping. </li>
<li>there is some ""Spring wiring"" missing for it to work on weblogic.... </li>
</ul>

<p>This is where I'm stuck... Can anyone think what JavaConfig ""wiring"" I'm missing to make it work on Weblogic? Any help greatly appreciated. Thanks!!</p>

<h1>Solution</h1>

<p>If anyone comes here, to make it simpler than read all the comments, below, here's how to make it work:</p>

<ul>
<li>start with the SpringBoot sample app and git the ""complete"" solution from here: spring.io/guides/gs/convert-jar-to-war/</li>
<li><p>update the class WebInitializer so that it implements WebApplicationInitializer. So change it from this:</p>

<pre><code>    public class WebInitializer extends SpringBootServletInitializer {
</code></pre></li>
</ul>

<p>To this:</p>

<pre><code>        public class WebInitializer extends SpringBootServletInitializer implements WebApplicationInitializer {
</code></pre>

<ul>
<li><p>create a new file src/main/webapp/WEB-INF/weblogic.xml and put this contents in it:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;wls:weblogic-web-app xmlns:wls=""http://xmlns.oracle.com/weblogic/weblogic-web-app"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd http://xmlns.oracle.com/weblogic/weblogic-web-app http://xmlns.oracle.com/weblogic/weblogic-web-app/1.4/weblogic-web-app.xsd""&gt;
    &lt;wls:weblogic-version&gt;12.1.1&lt;/wls:weblogic-version&gt;
    &lt;wls:context-root&gt;helloApp&lt;/wls:context-root&gt;
    &lt;wls:container-descriptor&gt;
        &lt;wls:prefer-application-packages&gt;
            &lt;wls:package-name&gt;org.slf4j.*&lt;/wls:package-name&gt;
        &lt;/wls:prefer-application-packages&gt;
    &lt;/wls:container-descriptor&gt;
&lt;/wls:weblogic-web-app&gt;
</code></pre>

<ul>
<li>gradle war</li>
<li>deploy to Weblogic12C</li>
<li>it should work now :) Thanks so much to both Dave Syer and Evgeni!</li>
</ul></li>
</ul>

<h1>Previous Solution (kept here for posterity)</h1>

<ul>
<li><p>start with the SpringBoot sample app and git the ""complete"" solution from here: spring.io/guides/gs/convert-jar-to-war/</p>

<ul>
<li>in the sample app's package ""hello"", add a new public class HelloWebXml implements WebApplicationInitializer </li>
<li><p>take all the code from org.springframework.boot.context.web.SpringBootServletInitializer and copy it into HelloWebXml but change these lines:</p>

<p>protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
    return application;
}</p></li>
</ul></li>
</ul>

<p>To this:</p>

<pre><code>    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
      return application.sources(Application.class);
    }
</code></pre>

<ul>
<li>copy the class org.springframework.boot.context.web.ErrorPageFilter into package ""hello"" in the sample app</li>
<li><p>create a new file src/main/webapp/WEB-INF/weblogic.xml and put this contents in it:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;wls:weblogic-web-app xmlns:wls=""http://xmlns.oracle.com/weblogic/weblogic-web-app"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd http://xmlns.oracle.com/weblogic/weblogic-web-app http://xmlns.oracle.com/weblogic/weblogic-web-app/1.4/weblogic-web-app.xsd""&gt;
    &lt;wls:weblogic-version&gt;12.1.1&lt;/wls:weblogic-version&gt;
    &lt;wls:context-root&gt;helloApp&lt;/wls:context-root&gt;
    &lt;wls:container-descriptor&gt;
        &lt;wls:prefer-application-packages&gt;
            &lt;wls:package-name&gt;org.slf4j.*&lt;/wls:package-name&gt;
        &lt;/wls:prefer-application-packages&gt;
    &lt;/wls:container-descriptor&gt;
&lt;/wls:weblogic-web-app&gt;
</code></pre>

<ul>
<li>gradle war</li>
<li>deploy to Weblogic12C</li>
<li>it should work now :) Thanks so much to both Dave Syer and Evgeni!</li>
</ul></li>
</ul>

<p>NOTE: There is a similar questions here:
<a href=""https://stackoverflow.com/questions/24835051/deploy-spring-boot-app-in-weblogic"">Deploy Spring Boot app in Weblogic</a>
...but that other question is about the deployment and it's a little vague (deployment itself works fine for me)</p>
",3930172,,-1,,2017-05-23 10:29:47,2017-07-13 12:11:00,Problems accessing fresh deploy of SpringBoot sample app on Weblogic12C,<java><spring><spring-boot><weblogic12c>,3,2,5,,
Spring,27105619,1,27106014,78,11/24/2014 13:29:32,0,,11/24/2014 13:08:11,,1,1121,"<p>I am following the link
<a href=""https://github.com/spring-guides/gs-serving-web-content"" rel=""nofollow"">https://github.com/spring-guides/gs-serving-web-content</a></p>

<p>After check out the files, import gs-serving-web-content/complete  into IDEA, and run it. It runs successfully, but if I use http as following to access it then it failed.</p>

<pre><code>http://127.0.0.1:8080/greating
</code></pre>

<p>The message is as below:</p>

<pre><code>com.intellij.rt.execution.application.AppMain hello.Application

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.1.9.RELEASE)

2014-11-24 21:07:15.891  INFO 8060 --- [           main] hello.Application                        : Starting Application on SomeHost with PID 8060 (/home/oracle/spring/gs-serving-web-content/complete/build/classes/main started by oracle in /home/oracle/spring/gs-serving-web-content/complete)
2014-11-24 21:07:15.933  INFO 8060 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11c20519: startup date [Mon Nov 24 21:07:15 CST 2014]; root of context hierarchy
2014-11-24 21:07:16.864  INFO 8060 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'beanNameViewResolver': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration; factoryMethodName=beanNameViewResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter; factoryMethodName=beanNameViewResolver; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class]]
2014-11-24 21:07:17.878  INFO 8060 --- [           main] .t.TomcatEmbeddedServletContainerFactory : Server initialized with port: 8080
2014-11-24 21:07:18.132  INFO 8060 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2014-11-24 21:07:18.133  INFO 8060 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/7.0.56
2014-11-24 21:07:18.271  INFO 8060 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2014-11-24 21:07:18.272  INFO 8060 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2341 ms
2014-11-24 21:07:19.000  INFO 8060 --- [ost-startStop-1] o.s.b.c.e.ServletRegistrationBean        : Mapping servlet: 'dispatcherServlet' to [/]
2014-11-24 21:07:19.004  INFO 8060 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2014-11-24 21:07:19.389  INFO 8060 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-11-24 21:07:19.596  INFO 8060 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped ""{[/greeting],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}"" onto public java.lang.String hello.GreetingController.greeting(java.lang.String,org.springframework.ui.Model)
2014-11-24 21:07:19.600  INFO 8060 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped ""{[/error],methods=[],params=[],headers=[],consumes=[],produces=[text/html],custom=[]}"" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest)
2014-11-24 21:07:19.601  INFO 8060 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped ""{[/error],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}"" onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2014-11-24 21:07:19.623  INFO 8060 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-11-24 21:07:19.624  INFO 8060 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-11-24 21:07:20.117  INFO 8060 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2014-11-24 21:07:20.201  INFO 8060 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080/http
2014-11-24 21:07:20.204  INFO 8060 --- [           main] hello.Application                        : Started Application in 4.892 seconds (JVM running for 5.351)
2014-11-24 21:07:26.582 ERROR 8060 --- [nio-8080-exec-1] o.a.coyote.http11.Http11NioProtocol      : Error reading request, ignored

java.lang.NoClassDefFoundError: org/apache/tomcat/util/log/UserDataHelper
    at org.apache.tomcat.util.http.Cookies.&lt;clinit&gt;(Cookies.java:42)
    at org.apache.coyote.Request.&lt;init&gt;(Request.java:131)
    at org.apache.coyote.AbstractProcessor.&lt;init&gt;(AbstractProcessor.java:61)
    at org.apache.coyote.http11.AbstractHttp11Processor.&lt;init&gt;(AbstractHttp11Processor.java:272)
    at org.apache.coyote.http11.Http11NioProcessor.&lt;init&gt;(Http11NioProcessor.java:69)
    at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.createProcessor(Http11NioProtocol.java:260)
    at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.createProcessor(Http11NioProtocol.java:139)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:586)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ClassNotFoundException: org.apache.tomcat.util.log.UserDataHelper
    at java.net.URLClassLoader$1.run(URLClassLoader.java:369)
    at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    ... 14 common frames omitted
Caused by: java.util.zip.ZipException: invalid LOC header (bad signature)
    at java.util.zip.ZipFile.read(Native Method)
    at java.util.zip.ZipFile.access$1400(ZipFile.java:61)
    at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:717)
    at java.util.zip.ZipFile$ZipFileInflaterInputStream.fill(ZipFile.java:420)
    at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158)
    at sun.misc.Resource.getBytes(Resource.java:124)
    at java.net.URLClassLoader.defineClass(URLClassLoader.java:450)
    at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
    at java.net.URLClassLoader$1.run(URLClassLoader.java:367)
    ... 20 common frames omitted

2014-11-24 21:07:26.583 ERROR 8060 --- [nio-8080-exec-1] org.apache.tomcat.util.net.NioEndpoint   : 

java.lang.NullPointerException: null
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:722)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:745)

2014-11-24 21:07:26.585 ERROR 8060 --- [nio-8080-exec-2] o.a.coyote.http11.Http11NioProtocol      : Error reading request, ignored

java.lang.NoClassDefFoundError: Could not initialize class org.apache.tomcat.util.http.Cookies
    at org.apache.coyote.Request.&lt;init&gt;(Request.java:131)
    at org.apache.coyote.AbstractProcessor.&lt;init&gt;(AbstractProcessor.java:61)
    at org.apache.coyote.http11.AbstractHttp11Processor.&lt;init&gt;(AbstractHttp11Processor.java:272)
    at org.apache.coyote.http11.Http11NioProcessor.&lt;init&gt;(Http11NioProcessor.java:69)
    at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.createProcessor(Http11NioProtocol.java:260)
    at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.createProcessor(Http11NioProtocol.java:139)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:586)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:745)

2014-11-24 21:07:26.586 ERROR 8060 --- [nio-8080-exec-2] org.apache.tomcat.util.net.NioEndpoint   : 

java.lang.NullPointerException: null
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:722)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:745)

2014-11-24 21:07:26.588 ERROR 8060 --- [nio-8080-exec-3] o.a.coyote.http11.Http11NioProtocol      : Error reading request, ignored

java.lang.NoClassDefFoundError: Could not initialize class org.apache.tomcat.util.http.Cookies
    at org.apache.coyote.Request.&lt;init&gt;(Request.java:131)
    at org.apache.coyote.AbstractProcessor.&lt;init&gt;(AbstractProcessor.java:61)
    at org.apache.coyote.http11.AbstractHttp11Processor.&lt;init&gt;(AbstractHttp11Processor.java:272)
    at org.apache.coyote.http11.Http11NioProcessor.&lt;init&gt;(Http11NioProcessor.java:69)
    at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.createProcessor(Http11NioProtocol.java:260)
    at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.createProcessor(Http11NioProtocol.java:139)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:586)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:745)

2014-11-24 21:07:26.589 ERROR 8060 --- [nio-8080-exec-3] org.apache.tomcat.util.net.NioEndpoint   : 

java.lang.NullPointerException: null
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:722)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:745)
</code></pre>
",266185,,,,,2014-11-24 13:29:32,spring boot mvc: failed after following the sample,<spring><spring-mvc>,1,1,,,
Spring,27171629,1,27387192,79,12/9/2014 19:27:07,294,,11/27/2014 13:15:15,,1,1627,"<p>I need to get the access token from Spring Social API in order to do operations Which the API doesn't provide. </p>

<p>for example <strong>push message to the client notification icon</strong>.</p>

<p>I followed spring social facebook via Spring offical doc: </p>

<p><a href=""https://github.com/spring-guides/gs-accessing-facebook"" rel=""nofollow"">https://github.com/spring-guides/gs-accessing-facebook</a></p>

<p>How to use the API in order to get the access token string?</p>

<p>thanks.</p>
",260511,,,,,2014-12-09 19:27:07,Get access token using spring social facebook api,<java><facebook><spring><spring-social><spring-social-facebook>,1,0,,,
Spring,28702698,1,28721027,80,2/25/2015 14:04:54,20,,2/24/2015 17:45:29,,2,3201,"<p>Getting startup issues for this <a href=""https://spring.io/guides/gs/accessing-data-gorm-mongodb/"" rel=""nofollow"">springboot project using MongoDB/GORM/Groovy</a> on <code>Java 1.7.0_55</code>, gradle <code>1.11</code>, and <code>spring-boot-gradle-plugin:1.2.1.RELEASE</code>.</p>

<p>I'm running the project <em>as-is</em> with the exception of the following change to <code>application.yml</code> for my remote mongodb:</p>

<pre><code>spring:
    mongodb:
        host: ""10.160.8.1""
        databaseName: ""citydb""
</code></pre>

<p>**On startup, I'm seeing this bean initialization error with <code>mappingMongoConverter</code> </p>

<pre><code>Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.class]:
Unsatisfied dependency expressed through constructor argument with index 1 of type [org.springframework.data.mongodb.core.convert.MongoConverter]: : Error creating bean with name 'mappingMongoConverter' defined in class path resource [org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.class]:
Unsatisfied dependency expressed through constructor argument with index 1 of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext]: : No qualifying bean of type [org.springframework.data.mongodb.core.mapping.MongoMapping
Context] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.data.mongodb.core.mapping.MongoMappingCo
ntext] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingMongoConverter' defined in class path resource [org
/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.class]: Unsatisfied dependency expressed through constructor argument with index 1 of typ
e [org.springframework.data.mongodb.core.mapping.MongoMappingContext]: : No qualifying bean of type [org.springframework.data.mongodb.core.mapping.MongoMappin
gContext] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}; nested excepti
on is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.data.mongodb.core.mapping.MongoMappingC
ontext] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}
</code></pre>

<p><strong>I think this is the main issue:</strong></p>

<pre><code>Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mappingMongoConverter' defined in class path resou
rce [org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.class]: Unsatisfied dependency expressed through constructor argument with index
1 of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext]: : No qualifying bean of type [org.springframework.data.mongodb.core.mapping.Mon
goMappingContext] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}; nested
 exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.data.mongodb.core.mapping.Mongo
MappingContext] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}
        at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
        at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:464)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:
1111)
</code></pre>

<p>Could this be a GORM dependency issue? I'm using the latest, <code>org.grails:gorm-mongodb-spring-boot:1.1.0.RELEASE</code></p>

<p>Tracked as issue on github: <a href=""https://github.com/spring-guides/gs-accessing-data-gorm-mongodb/issues/6"" rel=""nofollow"">https://github.com/spring-guides/gs-accessing-data-gorm-mongodb/issues/6</a></p>
",791406,,791406,,2015-02-25 14:01:06,2018-02-21 18:58:43,springboot initialization error on startup with mongodb on gorm/groovy,<spring><mongodb><groovy><gorm><spring-boot>,1,0,2,,
Spring,29299181,1,29300885,81,3/27/2015 12:38:51,1,,3/27/2015 11:02:30,,2,2111,"<p>I created a new project in Eclipse from these helpful spring examples (Import Getting Started Content). It is called ""gs-accessing-data-rest-complete""</p>

<p>Reference and full Code can be found: <a href=""https://github.com/spring-guides/gs-accessing-data-rest/tree/master/complete/src/main/java/hello"" rel=""nofollow"">spring-guides/gs-accessing-data-rest</a></p>

<p>When leaving the example unchanged, except using <strong>WAR</strong> instead of <strong>JAR</strong> packaging, everything works well. When calling <code>$ curl http://localhost:8080/</code>, I'll get an exposure of usable resources.</p>

<pre><code>$ curl http://localhost:8080/
{
  ""_links"" : {
    ""people"" : {
      ""href"" : ""http://localhost:8080/name{?page,size,sort}"",
      ""templated"" : true
    },
""profile"" : {
  ""href"" : ""http://localhost:8080/alps""
    }
  }
</code></pre>

<p>But when moving the <code>PersonRepository</code> into another package, e.g. <code>myRepos</code> via Eclipse's Refactor-->Move command, a resource is not accessible anymore.</p>

<p>The response from curl is then:</p>

<pre><code>$ curl http://localhost:8080/
{
  ""_links"" : {
    ""profile"" : {
      ""href"" : ""http://localhost:8080/alps""
    }
  }
}
</code></pre>

<p>As far as I understood, Spring scans for Repositories automatically. Because the main class uses <a href=""http://docs.spring.io/spring-boot/docs/1.2.2.RELEASE/reference/htmlsingle/#using-boot-using-springbootapplication-annotation"" rel=""nofollow""><code>@SpringBootApplication</code></a> annotation, everything should be found by spring itself. </p>

<p>What am I missing? Do I have to add some special XML configuration file or add another Configuration Class somewhere? Or do I have to update application.properties in order to sth.? </p>

<p>Perhaps somebody has some useful experiences, she or he might share with me. Thank you.</p>
",674442,,18122,,2015-03-28 11:41:01,2015-03-28 11:41:01,Why are my Spring Data repositories not found if moved into another package of a Spring Boot application?,<spring-boot><spring-data>,1,0,,,
Spring,29831953,1,29836337,82,4/23/2015 23:48:22,4,,4/23/2015 18:50:19,,7,19117,"<p>This is an extension to my previous question <a href=""https://stackoverflow.com/questions/29782148/why-do-i-need-main-method-if-i-develop-web-app-as-war-using-spring-boot"">here</a> at SO. As per this post, main method is NOT required to generate a <code>deployable war</code></p>

<p>I am trying to generate a <code>deployable war</code> for this simple application of <a href=""https://spring.io/guides/gs/uploading-files/"" rel=""nofollow noreferrer"">uploading files</a>. The source code can be for this example application can be found <a href=""https://github.com/spring-guides/gs-uploading-files/tree/master/complete"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Following the instructions from spring boot for jar to war conversion, I changed my <code>pom.xml</code> to reflect the following. (Just added <code>tomcat</code> dependency with scope <code>provided</code>).</p>

<p>Reference: <a href=""http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#build-tool-plugins-maven-packaging"" rel=""nofollow noreferrer"">http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#build-tool-plugins-maven-packaging</a></p>

<pre><code>      &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;org.springframework&lt;/groupId&gt;
    &lt;artifactId&gt;gs-uploading-files&lt;/artifactId&gt;
    &lt;version&gt;0.1.0&lt;/version&gt;
    &lt;packaging&gt;war&lt;/packaging&gt;

    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;1.2.3.RELEASE&lt;/version&gt;
    &lt;/parent&gt;


    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;
            &lt;scope&gt;provided&lt;/scope&gt;
        &lt;/dependency&gt;

    &lt;/dependencies&gt;

    &lt;properties&gt;
        &lt;java.version&gt;1.7&lt;/java.version&gt;
    &lt;/properties&gt;

    &lt;repositories&gt;
        &lt;repository&gt;
            &lt;id&gt;spring-releases&lt;/id&gt;
            &lt;name&gt;Spring Releases&lt;/name&gt;
            &lt;url&gt;https://repo.spring.io/libs-release&lt;/url&gt;
        &lt;/repository&gt;
    &lt;/repositories&gt;
    &lt;pluginRepositories&gt;
        &lt;pluginRepository&gt;
            &lt;id&gt;spring-releases&lt;/id&gt;
            &lt;name&gt;Spring Releases&lt;/name&gt;
            &lt;url&gt;https://repo.spring.io/libs-release&lt;/url&gt;
        &lt;/pluginRepository&gt;
    &lt;/pluginRepositories&gt;
&lt;/project&gt;
</code></pre>

<p>Then I changed <code>Application.java</code> as follows</p>

<p>Reference: <a href=""http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file"" rel=""nofollow noreferrer"">http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file</a></p>

<pre><code>@SpringBootApplication
public class Application extends SpringBootServletInitializer{

    @Override
    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
        return application.sources(Application.class);
    }

    /*public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    } */
} 
</code></pre>

<p>I tried two scenarios. both fail with the following error (<code>Unable to find main class</code>).</p>

<ol>
<li>No main method (NOTE I have commented out main method above)</li>
<li>No application.Java file (commented out everything from this file - not shown here)</li>
</ol>

<p>Error:</p>

<pre><code>[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 9.218s
[INFO] Finished at: Thu Apr 23 11:46:24 PDT 2015
[INFO] Final Memory: 22M/222M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:1.2.3.RELEASE:repackage (default) on project gs-uploading-files: Execution default of goal org.springframework.boot:spring-boot-maven-plugin:1.2.3.RELEASE:repackage failed: Unable to find main class -&gt; [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
</code></pre>

<p><strong>PS: when I have main method intact, the build is successful</strong></p>
",1988876,,-1,,2017-05-23 12:17:02,2016-04-14 1:34:00,maven build failing when generating war package for spring boot application?,<spring><maven><tomcat><spring-boot>,2,5,6,,
Spring,29831374,1,29842701,83,4/24/2015 8:44:26,14,,4/23/2015 18:17:40,,1,700,"<p>I'm using spring-boot and spring-boot-yarn to submit yarn applications to a cluster.</p>

<p>My use-case is close to the one described in this tutorial <a href=""https://github.com/spring-guides/gs-yarn-basic"" rel=""nofollow"">https://github.com/spring-guides/gs-yarn-basic</a>.</p>

<p>The only difference is that my 'client' is supposed to be a web application and submit the yarn jobs when web requests are made.</p>

<p>The problem I have is that web requests to the 'client' web-application provide parameters I need to pass down to the yarn job.</p>

<p>In the above tutorial parameters are passed as command line arguments to to the appmaster / container specified in application.yml. In my case this approach does not work since I have a different set of parameters for each yarn job.</p>

<p>Is there a way to pass dynamic parameters to yarn jobs without hard-coding them in application.yml?</p>
",4825538,,4825538,,2015-04-23 18:31:08,2015-04-24 8:44:26,how to pass parameters from web requests to spring boot yarn application,<hadoop><spring-boot><yarn><spring-data-hadoop>,1,0,,,
Spring,31730050,1,31760587,84,8/1/2015 9:59:49,40,,7/30/2015 17:10:01,,5,1038,"<p>We've noticed in our that SOAP web-services seem to run faster when run as</p>

<pre><code>spring-boot:run
</code></pre>

<p>as opposed to packaging up the JAR as we do for deployment and running</p>

<pre><code>java -jar mySpringApp.jar
</code></pre>

<p>The speed up is in the order of 2-3x so obviously we would like this for our live environment.</p>

<p>To validate that this wasn't something in our app I've tried this with the sample app from the <a href=""https://spring.io/guides/gs/producing-web-service/"" rel=""noreferrer"">spring guide</a></p>

<p>git source <a href=""https://github.com/spring-guides/gs-soap-service.git"" rel=""noreferrer"">https://github.com/spring-guides/gs-soap-service.git</a></p>

<p>Testing this with JMeter shows the same sort of speed up.  I've tested this on both Windows 7 Java 1.8.0_31 and Ubuntu 14.04 platforms with 1.8.0_45-b14.</p>

<p>This only seems to be the case for soap services, simple html doesn't show any significant difference in performance.  Any idea what could be causing this?</p>
",3702362,,3702362,,2015-07-31 8:21:54,2015-08-01 9:59:49,spring-boot-starter-ws performance when run as jar,<spring><maven><soap><spring-boot><spring-ws>,1,4,2,,
Spring,34525587,1,34560982,85,1/1/2016 23:11:40,62,,12/30/2015 8:21:10,,7,4791,"<p>I must prepare a webservice to accept anan already defined wsdl structure. I followed the tutorial <a href=""https://spring.io/guides/gs/producing-web-service/"" rel=""noreferrer"">found here</a>, with source code for the test project <a href=""https://github.com/spring-guides/gs-producing-web-service/archive/master.zip"" rel=""noreferrer"">downloadable here</a>.</p>

<p>For xsd like this:</p>

<pre><code>&lt;xs:element name=""getCountryRequest""&gt;
    &lt;xs:complexType&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name=""name"" type=""xs:string""/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
&lt;/xs:element&gt;
</code></pre>

<p>Wsdl operation for request returned by application is OK, looks like this:</p>

<pre><code>&lt;wsdl:binding name=""CountriesPortSoap11"" type=""tns:CountriesPort""&gt;
    &lt;soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/&gt;
    &lt;wsdl:operation name=""getCountry""&gt;
        &lt;soap:operation soapAction=""""/&gt;
        &lt;wsdl:input name=""getCountryRequest""&gt;
            &lt;soap:body use=""literal""/&gt;
        &lt;/wsdl:input&gt;
        &lt;wsdl:output name=""getCountryResponse""&gt;
            &lt;soap:body use=""literal""/&gt;
        &lt;/wsdl:output&gt;
    &lt;/wsdl:operation&gt;
&lt;/wsdl:binding&gt;
</code></pre>

<p>But when I change the xsd to (no 'Request' in element name):</p>

<pre><code>&lt;xs:element name=""getCountry""&gt;
    &lt;xs:complexType&gt;
        &lt;xs:sequence&gt;
            &lt;xs:element name=""name"" type=""xs:string""/&gt;
        &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
&lt;/xs:element&gt;
</code></pre>

<p>the wsdl is invalid, and has no <code>&lt;input&gt;</code> specified:</p>

<pre><code>&lt;wsdl:binding name=""CountriesPortSoap11"" type=""tns:CountriesPort""&gt;
    &lt;soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/&gt;
    &lt;wsdl:operation name=""getCountry""&gt;
        &lt;soap:operation soapAction=""""/&gt;
        &lt;wsdl:output name=""getCountryResponse""&gt;
            &lt;soap:body use=""literal""/&gt;
        &lt;/wsdl:output&gt;
    &lt;/wsdl:operation&gt;
&lt;/wsdl:binding&gt;
</code></pre>

<p>How can I fix that? How can I make a <code>Request</code>-less element appear properly as soap operation input in wsdl?</p>
",1961634,,1961634,,2015-12-30 8:28:23,2016-11-25 8:22:56,Invalid wsdl generated by spring-ws when the request element doesn't end with 'Request',<java><web-services><wsdl><cxf><spring-ws>,3,1,1,,
Spring,34512248,1,34576917,86,1/3/2016 13:14:56,119,,12/29/2015 13:37:15,,7,1291,"<p>I'm trying to use Facebook sign in as described in 
<a href=""https://github.com/spring-guides/gs-accessing-facebook"" rel=""noreferrer"">https://github.com/spring-guides/gs-accessing-facebook</a></p>

<p>When I'm trying to create JdbcUsersConnectionRepository, I need spring security in class path.
And when I add spring security I receive</p>

<pre><code>""java.lang.IllegalStateException: Unable to get a ConnectionRepository: no user signed in""
</code></pre>

<p>when trying to receive Connection</p>

<pre><code>Connection&lt;Facebook&gt; connection = connectionRepository.findPrimaryConnection(Facebook.class);
</code></pre>

<p>or checking</p>

<pre><code>if (!facebook.isAuthorized())
</code></pre>

<p>All this happens only when spring security is in the class path</p>
",20391,,,,,2016-10-31 12:55:47,"Spring Social: ""Unable to get a ConnectionRepository: no user signed in""",<spring><facebook><spring-security><spring-social><spring-social-facebook>,2,0,,,
Spring,34606760,1,34619077,87,1/5/2016 18:45:43,10,,1/5/2016 8:01:04,,8,14125,"<p>Given a Spring Boot + Thymeleaf web application (this is nearly identical to the Spring project's <a href=""https://github.com/spring-guides/gs-securing-web/tree/master/initial"" rel=""noreferrer"">gs-consuming-rest ""initial"" code tree</a>):</p>

<pre class=""lang-none prettyprint-override""><code>├── pom.xml
└── src
    ├── main
    │   ├── java
    │   │   └── hello
    │   │       ├── Application.java
    │   │       ├── Config.java
    │   │       └── Controller.java
    │   └── resources
    │       └── templates
    │           └── index.html
    └── test
        └── java
            └── hello
                └── ControllerTest.java
</code></pre>

<p>...the user is greeted just fine with ""Hello World!"" at <code>http://localhost:8080/</code>, but the wiring of Spring's ""context"" does not seem to apply within the integration test (<code>ControllerTest.java</code>):</p>

<pre class=""lang-none prettyprint-override""><code>java.lang.AssertionError: Status 
Expected :200
Actual   :404
</code></pre>

<p>What is wrong with the <strong>project layout</strong>, and/or the <strong>configuration annotations</strong> in the test?</p>

<p><em><code>src/main/webapp/</code> is intentionally missing, along with things like <code>web.xml</code> and <code>WEB-INF/</code>.  The goal here is to use minimal configuration, with an integration test to test-drive the development of the view and controller of the application.</em></p>

<p>Gory details below.  Sorry in advance for the ""wall of text.""</p>

<hr>

<h3>pom.xml</h3>

<pre class=""lang-xml prettyprint-override""><code>&lt;parent&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
    &lt;version&gt;1.3.1.RELEASE&lt;/version&gt;
&lt;/parent&gt;

&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>

<h3>Application.java</h3>

<pre class=""lang-java prettyprint-override""><code>package hello;

// ...

@SpringBootApplication
public class Application {

  public static void main(String[] args) throws Throwable {
    SpringApplication.run(Application.class, args);
  }
}
</code></pre>

<h3>Controller.java</h3>

<pre class=""lang-java prettyprint-override""><code>package hello;

@org.springframework.stereotype.Controller
public class Controller {
}
</code></pre>

<h3>Config.java</h3>

<pre class=""lang-java prettyprint-override""><code>package hello;

// ...

@Configuration
public class Config extends WebMvcConfigurerAdapter {

  @Override
  public void addViewControllers(ViewControllerRegistry registry) {
    registry.addViewController(""/"").setViewName(""index"");
  }
}
</code></pre>

<h3>ControllerTest.java</h3>

<pre class=""lang-java prettyprint-override""><code>package hello;

// ...

@RunWith(SpringJUnit4ClassRunner.class)
@WebAppConfiguration
@ContextConfiguration(classes = Config.class)
public class ControllerTest {

  @Autowired
  private WebApplicationContext wac;

  private MockMvc mockMvc;

  @Before
  public void setup() {
    mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
  }

  @Test
  public void test() throws Exception {
    this.mockMvc
        .perform(get(""/""))
        .andExpect(status().isOk());
  }
}
</code></pre>

<h3>index.html</h3>

<pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Hello World!&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;Hello world!&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
",1265245,,1265245,,2016-01-07 19:18:48,2017-09-21 19:24:50,@WebAppConfiguration and @ContextConfiguration for Spring Boot + Thymeleaf,<java><spring><spring-boot><integration-testing><thymeleaf>,2,2,2,,
Spring,35076591,1,35076775,88,1/29/2016 4:15:41,0,,1/29/2016 3:55:30,,2,3977,"<p>I'm completely new to Spring &amp; not very experienced in Java admittedly. I am trying to go through the <a href=""http://spring.io/guides/tutorials/bookmarks/"" rel=""nofollow"">Building REST services with Spring</a> tutorial on the spring.io website. I came across the following code segment and I'm confused as to what it actually does.</p>

<pre><code>@Configuration
@ComponentScan
@EnableAutoConfiguration
public class Application {

    @Bean
    CommandLineRunner init(AccountRepository accountRepository,
            BookmarkRepository bookmarkRepository) {
        return (evt) -&gt; Arrays.asList(
                ""jhoeller,dsyer,pwebb,ogierke,rwinch,mfisher,mpollack,jlong"".split("",""))
                .forEach(
                        a -&gt; {
                            Account account = accountRepository.save(new Account(a,
                                    ""password""));
                            bookmarkRepository.save(new Bookmark(account,
                                    ""http://bookmark.com/1/"" + a, ""A description""));
                            bookmarkRepository.save(new Bookmark(account,
                                    ""http://bookmark.com/2/"" + a, ""A description""));
                        });
    }

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }
}
</code></pre>

<p>I looked up CommandLineRunner on Spring Boot docs, and it says it's an interface that gets implemented if you want to execute some code when the application starts. But to my limited knowledge, CommandLineRunner is not getting implemented by anything in the above code segment. Also, I have no clue where the init() method came from or what it really is.</p>

<p>Additionally, I downloaded the complete code from their <a href=""https://github.com/spring-guides/tut-bookmarks.git"" rel=""nofollow"">github repo</a> but I'm not quite sure how to actually run it. I read earlier today that <code>SpringApplication.run()</code> makes it so that you don't have to deploy anything to an external service like Tomcat. But when I tried <code>java -jar ./jarFileName</code> for the Application class (seemed like a natural choice since it had main() ), it gave an error.</p>

<p>Any help would be appreciated.</p>
",1993941,,,,,2016-01-29 4:15:41,What does CommandLineRunner do in this case?,<java><spring><spring-boot>,1,0,1,,
Spring,35584271,1,35585108,89,2/23/2016 18:14:22,0,,2/23/2016 17:30:51,,6,12422,"<p>I'm trying to use auditing to save <code>dateCreated</code> and <code>dateUpdated</code> in my objects, but since I set <code>ID</code> manually, there's some additional work.</p>

<p>Following Oliver Gierke's suggestion in <a href=""https://jira.spring.io/browse/DATAMONGO-946"" rel=""noreferrer"">DATAMONGO-946</a>
I'm trying to figure out how to correctly implement it.</p>

<p>As original poster in Jira task above, I've downloaded example from here <a href=""https://github.com/spring-guides/gs-accessing-data-mongodb.git"" rel=""noreferrer"">https://github.com/spring-guides/gs-accessing-data-mongodb.git</a> and modified it a bit:</p>

<pre><code>package hello;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.domain.Persistable;

import java.util.Date;

public class Customer implements Persistable&lt;String&gt; {
    @Id
    private String id;
    @CreatedDate
    private Date createdDate;
    @LastModifiedDate
    private Date lastModifiedDate;
    private String firstName;
    private String lastName;
    private boolean persisted;

    public Customer() {
    }

    public Customer(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public void setPersisted(boolean persisted) {
        this.persisted = persisted;
    }

    @Override
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Override
    public boolean isNew() {
        return !persisted;
    }

    @Override
    public String toString() {
        return String.format(
                ""Customer[id=%s, createdDate=%s, lastModifiedDate=%s, firstName='%s', lastName='%s']"",
                id, createdDate, lastModifiedDate, firstName, lastName);
    }
}
</code></pre>

<p>and</p>

<pre><code>package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.data.mongodb.config.EnableMongoAuditing;

@SpringBootApplication
@EnableMongoAuditing
public class Application implements CommandLineRunner {

    @Autowired
    private CustomerRepository repository;

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @Override
    public void run(String... args) throws Exception {

        repository.deleteAll();

        // create a customer
        Customer c = new Customer(""Alice"", ""Smith"");
        c.setId(""test_id"");

        // save a customer
        repository.save(c);

        // fetch all customers
        System.out.println(""Customers found with findAll():"");
        System.out.println(""-------------------------------"");
        for (Customer customer : repository.findAll()) {
            System.out.println(customer);
        }
        System.out.println();

        // create another customer with same id
        c = new Customer(""Bob"", ""Smith"");
        c.setId(""test_id"");
        c.setPersisted(true);
        repository.save(c);

        // fetch all customers
        System.out.println(""Customers found with findAll():"");
        System.out.println(""-------------------------------"");
        for (Customer customer : repository.findAll()) {
            System.out.println(customer);
        }
        System.out.println();
    }
}
</code></pre>

<p>and a result of execution is this:</p>

<pre><code>Customers found with findAll():
-------------------------------
Customer[id=test_id, createdDate=Wed Feb 24 00:43:47 WITA 2016, lastModifiedDate=Wed Feb 24 00:43:47 WITA 2016, firstName='Alice', lastName='Smith']

Customers found with findAll():
-------------------------------
Customer[id=test_id, createdDate=null, lastModifiedDate=Wed Feb 24 00:43:47 WITA 2016, firstName='Bob', lastName='Smith']
</code></pre>

<p><code>createdDate</code> becomes <code>null</code> after object update.</p>

<p>What am I missing here? And how to correctly implement <code>Persistable</code> to make auditing work properly?</p>
",1757278,,,,,2018-12-09 20:05:25,"Spring Data MongoDB Annotation @CreatedDate isn't working, when ID is assigned manually",<java><spring><mongodb><spring-data><spring-data-mongodb>,1,0,3,,
Spring,35195982,1,35603281,90,2/24/2016 13:16:00,484,,2/4/2016 8:28:51,,1,1196,"<p>I have used <a href=""https://spring.io/guides/gs/scheduling-tasks/"" rel=""nofollow"">this tutorial</a> and <a href=""https://github.com/spring-guides/gs-scheduling-tasks.git"" rel=""nofollow"">it's github project</a> as a base for this SSCCE.</p>

<p>For unknown reason, methods marked as <code>@Async</code> ran from a <code>@Scheduled</code> method always execute synchronously.</p>

<p>I am looking for a fix or workaround to make the code from <code>performTask()</code> run asynchonously.</p>

<p>The classes below:</p>

<p>Application.java</p>

<pre><code>@SpringBootApplication
@EnableScheduling
@EnableAsync
public class Application implements AsyncConfigurer{

    public static void main(String[] args) throws Exception {
        SpringApplication.run(Application.class);
    }

    @Override
    @Bean(name=""asyncExecutor"")
    public Executor getAsyncExecutor() {
        ThreadPoolTaskExecutor exec = new ThreadPoolTaskExecutor();
        exec.setMaxPoolSize(Runtime.getRuntime().availableProcessors()*2);
        exec.setThreadGroupName(""MyCustomExecutor"");
        exec.setWaitForTasksToCompleteOnShutdown(true);
        exec.setBeanName(""asyncExecutor"");
        exec.initialize();
        return exec;
    }

    @Override
    public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {
        return new SimpleAsyncUncaughtExceptionHandler();
    }
}
</code></pre>

<p>MyAsyncService.java</p>

<pre><code>@Service
public class MyAsyncService {

    static AtomicInteger taskNoCounter = new AtomicInteger();

    public MyAsyncService() {
    }

    @Async(""asyncExecutor"")
    public void performTask() {
        int delayMs = (int) (System.currentTimeMillis()%1000+1000);
        int taskNo = taskNoCounter.incrementAndGet();
        String taskInfo = ""MyAsyncTask [taskNo="" + taskNo + "", delayMs="" + delayMs + "", threadId=""+Thread.currentThread().getId()+""]"";
        System.out.println(""+ start "" +taskInfo);
        try {
            Thread.sleep(delayMs);
        } catch (InterruptedException e) {
            // empty on purpose
        }
        System.out.println(""- end   "" +taskInfo);
    }

}
</code></pre>

<p>ScheduledTasks.java</p>

<pre><code>@Component
public class ScheduledTasks {

    @Autowired
    MyAsyncService service;

    @Scheduled(fixedRate = 1000)
    public void reportCurrentTime() {
        for (int i=0; i&lt;20; i++) {
            service.performTask();
        }

    }
}
</code></pre>

<p>Produce the following synchronouse result:</p>

<pre><code>+ start MyAsyncTask [taskNo=1, delayMs=1874, threadId=16]
- end   MyAsyncTask [taskNo=1, delayMs=1874, threadId=16]
+ start MyAsyncTask [taskNo=2, delayMs=1749, threadId=16]
- end   MyAsyncTask [taskNo=2, delayMs=1749, threadId=16]
+ start MyAsyncTask [taskNo=3, delayMs=1498, threadId=16]
- end   MyAsyncTask [taskNo=3, delayMs=1498, threadId=16]
+ start MyAsyncTask [taskNo=4, delayMs=1997, threadId=16]
- end   MyAsyncTask [taskNo=4, delayMs=1997, threadId=16]
+ start MyAsyncTask [taskNo=5, delayMs=1994, threadId=16]
</code></pre>
",1961634,,,,,2016-02-24 13:16:00,Spring-boot @Async not running with @Scheduled,<java><spring><spring-boot><spring-scheduled><spring-async>,1,3,1,,
Spring,35709341,1,35709541,91,2/29/2016 21:00:28,0,,2/29/2016 20:49:05,,2,1549,"<p>As someone who is new to Java and Spring, I've been working through their REST API tutorials. A general workflow is introduced where you embed Jetty/Tomcat and then run an executable Jar file. This workflow appears to change when the <a href=""https://spring.io/guides/tutorials/bookmarks/"" rel=""nofollow"">Building REST Services with Spring</a> tutorial is introduced. Their <a href=""https://github.com/spring-guides/tut-bookmarks"" rel=""nofollow"">bookmarks demo project</a> uses a multi-module maven configuration. There doesn't appear to be a main manifest attribute defined anywhere. </p>

<p>The Maven configuration currently generates a separate jar for each module. </p>

<p>The ideal goal would be to take the bookmarks demo project, add <a href=""http://swagger.io/"" rel=""nofollow"">Swagger</a> to it, and loop in <a href=""https://www.docker.com/"" rel=""nofollow"">Docker</a>. The realistic goal is to get the project running using Jetty or Tomcat. </p>

<p>Do you know how I could deploy the <a href=""https://github.com/spring-guides/tut-bookmarks"" rel=""nofollow"">Spring Bookmarks Demo</a> using Jetty or Tomcat? Thank you for your time.</p>
",1965146,,1965146,,2016-02-29 21:41:23,2016-02-29 21:41:23,"How do you deploy the ""Building REST Services with Spring"" tutorial?",<java><spring><rest><maven><spring-boot>,2,0,,,
Spring,36433556,1,36433803,92,4/5/2016 18:04:49,0,,4/5/2016 17:52:21,,1,43,"<p>I am learning basic Spring by following this <a href=""https://spring.io/guides/gs/rest-service/"" rel=""nofollow noreferrer"">tutorial</a>. 
I run this command to clone the demo basic project:</p>

<pre><code>git clone https://github.com/spring-guides/gs-rest-service.git
</code></pre>

<p>Then I use intelliJ to import the cloned Gradle project. 
However, it always downloading things from Internet, and sometime pop up alert says xxx is not found. </p>

<p><a href=""https://i.stack.imgur.com/tcKav.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tcKav.png"" alt=""enter image description here""></a></p>

<p>My question is what is it doing exactly? who and where I tell the code to download things?</p>

<p>It is really confusing to me because I couldn't figure out what is going on.  </p>
",887103,,,,,2016-04-05 18:04:49,Why my gradle project always downloading 200MB data from Internet?,<spring><gradle>,1,0,,,
Spring,36581834,1,36586730,93,4/13/2016 1:01:59,6,,4/12/2016 19:00:42,,1,602,"<p>I have been doing a line by line study of the code in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow"">this spring cloud app on github</a> after downloading and installing it on my devbox.  When you type <code>http://localhost:8080</code> in your web browser, the content from the <code>ui</code> app loads, and is able to interact with the content from the <code>authserver</code> and <code>resource</code> apps.  </p>

<p><code>Port 9999</code> is defined for the <code>authserver</code> app, both in the <code>ui</code> app's <code>zuul route</code> definitions, and also in the <code>authserver</code> app's <code>application.properties</code>.  </p>

<p>Similarly, <code>port 9000</code> is defined for the <code>resource</code> app, both in the <code>ui</code> app's route definitions, and also in the <code>resource</code> app's <code>application.properties</code>.  </p>

<p>But I cannot find any reference to <code>port 8080</code>, even after reviewing every line of code in the three apps and also doing a <code>Ctrl-H</code> to do full text search of the entire eclipse workspace for the word <code>8080</code>.  </p>

<p><strong>So how does the <code>ui</code> app know to serve its client content on <code>port 8080</code>?</strong></p>
",807797,,,,,2016-04-13 6:35:42,where is port 8080 defined in spring cloud app?,<spring><spring-boot><spring-cloud><netflix-zuul>,3,1,,,
Spring,36655518,1,36665463,94,4/16/2016 14:34:42,18,,4/15/2016 19:36:19,,1,861,"<p>I am studying Spring OAuth2 by decomposing the set of <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow noreferrer"">three interconnected sample apps at this GitHub link</a>.  The apps work as intended on my devbox, but the <code>authserver</code> app produces an unwanted confirmation page that asks the user to confirm that they authorize the client at <code>localhost:8080/login</code> to receive their protected information. A screen shot of the confirmation page is as follows:  </p>

<p><img src=""https://s22.postimg.org/mwyq9xelt/Authorization_View.gif"" />  </p>

<p><strong>What specific changes need to be made to the <code>authserver</code> app's code to remove the confirmation step?</strong>  </p>

<p>I understand that the confirmation page could be useful in certain use cases.  But the confirmation page is not appropriate for the use case that I have in mind, so how can I disable this step?  </p>

<hr>

<p><strong>FIRST ATTEMPT:</strong>  </p>

<hr>

<p>I have located the view code for the authorization page in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/authserver/src/main/resources/templates/authorize.ftl"" rel=""nofollow noreferrer""><code>authorize.ftl</code>, which you can read by clicking on this link</a>.  But when I do <code>Ctrl-H</code> in an eclipse workspace and search for ""authorize.ftl"", no results show up.  Similarly, I reviewed the <a href=""http://projects.spring.io/spring-security-oauth/docs/oauth2.html#customizing-the-ui"" rel=""nofollow noreferrer"">Spring OAuth2 Developer Guide</a>.  Some mention in the guide is made of creating a separate <code>@RequestMappig(""/oauth/authorize"")</code>, but it did not seem clear how to disable this confirmation step.  </p>

<p>The code for the template <code>login</code> view is in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/authserver/src/main/resources/templates/login.ftl"" rel=""nofollow noreferrer""><code>login.ftl</code>, which you can read at this link</a>.  </p>

<p><strong>Is the solution to simply move the <code>login.ftl</code> code into a new <code>login.html</code> file, and then manage that view with <code>@RequestMappig(""/oauth/authorize"")</code>?</strong>   </p>

<p>If I interpret the working from the Developer Guide link above correctly, it seems to say that  </p>

<p>1.) an <code>@RequestMappig(""/oauth/authorize"")</code> method linked to GET would serve up the login view, then another <code>@RequestMappig(""/oauth/authorize"")</code>,  </p>

<p>2.) then another <code>@RequestMappig(""/oauth/authorize"")</code> method linked to POST would take the information from the view and bypass the confirmation step.  </p>

<p><strong>But what would this look like in code?</strong>  Here is a starting point, if I understand correctly:  </p>

<pre><code>`@RequestMappig(""/oauth/authorize"", method = RequestMethod.GET)`
public @ResponseBody SomeType method1Name(){
    SomeType st = new SomeType();
    //do some stuff to st
    return st;
}

`@RequestMappig(""/oauth/authorize"", method = RequestMethod.POST)`
public @ResponseBody SomeType method2Name(){
    SomeType st = new SomeType();
    //do other stuff to st
    return st;
}
</code></pre>

<p>What do I put in the methods?  And then were do I put the view code?  </p>

<p>The Developer Guide says to start with <a href=""https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/endpoint/WhitelabelApprovalEndpoint.java"" rel=""nofollow noreferrer""><code>WhiteLabelApprovalEndpoint,java</code>, which you can read on GitHub at this link</a>.</p>
",807797,,-1,,2017-02-08 15:09:36,2016-04-16 14:34:42,disable confirmation page in Spring OAuth2,<spring><spring-mvc><spring-security><spring-boot><spring-oauth2>,1,2,1,,
Spring,36683434,1,36703486,95,4/18/2016 20:16:25,20,,4/17/2016 23:40:15,,4,10867,"<p><strong>How do I trigger auto-logout of <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow noreferrer"">this sample Spring Boot OAuth2 app</a>?</strong>  </p>

<p>I tried adding the following code from <a href=""https://stackoverflow.com/questions/21987589/spring-security-how-to-log-out-user-revoke-oauth2-token#32320860"">an answer to this other posting</a> into a new controller class in the <code>demo</code> package of the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver"" rel=""nofollow noreferrer""><code>authserver</code> app</a>:  </p>

<pre><code>package demo;

import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.oauth2.common.OAuth2AccessToken;
import org.springframework.security.oauth2.provider.token.TokenStore;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.http.HttpStatus;

@Controller
public class OAuthController {
    @Autowired
    private TokenStore tokenStore;

    @RequestMapping(value = ""/oauth/revoke-token"", method = RequestMethod.GET)
    @ResponseStatus(HttpStatus.OK)
    public void logout(HttpServletRequest request) {
        String authHeader = request.getHeader(""Authorization"");
        if (authHeader != null) {
            String tokenValue = authHeader.replace(""Bearer"", """").trim();
            OAuth2AccessToken accessToken = tokenStore.readAccessToken(tokenValue);
            tokenStore.removeAccessToken(accessToken);
        }
    }
}  
</code></pre>

<p>But when I try to launch the app, the debug log gives the following error indicating that it cannot <code>autowire</code> the token store:  </p>

<pre><code>Caused by: org.springframework.beans.factory.BeanCreationException:  
Could not autowire field:  
private org.springframework.security.oauth2.provider.token.TokenStore  
demo.OAuthController.tokenStore; nested exception is  
org.springframework.beans.factory.NoSuchBeanDefinitionException:  
No qualifying bean of type [org.springframework.security.oauth2.provider.token.TokenStore] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:573)
    at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
    ... 23 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException:  
No qualifying bean of type  
[org.springframework.security.oauth2.provider.token.TokenStore]  
found for dependency: expected at least 1 bean which qualifies as  
autowire candidate for this dependency. Dependency annotations:  
{@org.springframework.beans.factory.annotation.Autowired(required=true)}
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1373)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1119)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545        )
    ... 25 more
</code></pre>

<p>When the compilation error is resolved, I intend to trigger the logout process from the following code which will be added to the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/ui/src/main/resources/static/js/hello.js"" rel=""nofollow noreferrer""><code>hello.js</code> controller of the <code>ui</code> app</a> in the github link above:  </p>

<pre><code>self.logout = function() {
    $http.post('http://localhost:9000/oauth/revoke-token', {}).finally(function() {
        $rootScope.authenticated = false;
        $location.path(""/"");
    });
}
</code></pre>

<p><strong>The full code of the sample app is at the github link above, so what specific changes do I need to make in order to successfully <code>autowire</code> the <code>token store</code> and auto-logout the user globally?</strong>  </p>

<hr>

<p><strong>ONGOING EFFORTS:</strong>  </p>

<hr>

<p>Per @ManoJ's suggestion, I changed the new controller class to become the following:  </p>

<pre><code>package demo;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.oauth2.common.OAuth2AccessToken;
import org.springframework.security.oauth2.provider.token.TokenStore;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.http.HttpStatus;

@Controller
public class OAuthController {

    private TokenStore tokenStore;

    @Autowired
    public OAuthController(TokenStore tokenStore) {
        this.tokenStore = tokenStore;
    }

    @RequestMapping(value = ""/oauth/revoke-token"", method = RequestMethod.GET)
    @ResponseStatus(HttpStatus.OK)
    public void logout(HttpServletRequest request) {
        String authHeader = request.getHeader(""Authorization"");
        if (authHeader != null) {
            String tokenValue = authHeader.replace(""Bearer"", """").trim();
            OAuth2AccessToken accessToken = tokenStore.readAccessToken(tokenValue);
            tokenStore.removeAccessToken(accessToken);
        }
    }
}
</code></pre>

<p>However, I am still getting a very similar error message when I try to launch the app at the terminal with <code>mvn spring-boot:run</code>, as follows:  </p>

<pre><code>java.lang.reflect.InvocationTargetException
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:497)
    at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run(AbstractRunMojo.java:478)
    at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'OAuthController' defined in file [/home/user/spring_boot_apps/security_tut_remodel/tut-spring-security-and-angular-js/oauth2/authserver/target/classes/demo/OAuthController.class]: Unsatisfied dependency expressed through constructor argument with index 0 of type [org.springframework.security.oauth2.provider.token.TokenStore]: No qualifying bean of type [org.springframework.security.oauth2.provider.token.TokenStore] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.security.oauth2.provider.token.TokenStore] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}
    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
    at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:185)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1143)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1046)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:766)
    at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:361)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)
    at demo.AuthserverApplication.main(AuthserverApplication.java:88)
    ... 6 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.security.oauth2.provider.token.TokenStore] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1373)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1119)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:813)
    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
    ... 25 more
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
</code></pre>

<p><strong>Given that this class is the only addition to the sample app in the link in the first line of the <code>OP</code> above, all of the code for the entire app is available both online and on your own devbox with <code>git clone ...</code>.  So what else needs to change in order for autowire of the TokenStore to work properly?</strong></p>
",807797,,-1,,2017-05-23 11:54:22,2016-04-18 20:16:25,How to autowire this TokenStore,<spring><spring-security><spring-boot><autowired><spring-oauth2>,2,0,1,,
Spring,36899386,1,37018939,96,5/4/2016 5:10:27,153,,4/27/2016 19:38:36,,9,1266,"<p>Complete code for a Spring OAuth2 implementation of multi-factor authentication has been uploaded to <a href=""https://jumpshare.com/v/nal2OlUqVpMFzMgqeplw"" rel=""nofollow noreferrer"">a file sharing site that you can download by clicking on this link</a>. Instructions below explain how to use the link to recreate the current problem on any computer. <strong>A 500 point bounty is offered.</strong>  </p>

<p><hr/> 
<strong>THE CURRENT ERROR:</strong>  </p>

<hr/>  

<p>An error is being triggered when a user tries to authenticate using two factor authentication in <a href=""https://jumpshare.com/v/nal2OlUqVpMFzMgqeplw"" rel=""nofollow noreferrer"">the Spring Boot OAuth2 app from the link in the preceding paragraph</a>. The error is thrown at the point in the process when the app should serve up a second page asking the user for a pin code to confirm the user's identity.  </p>

<p><strong>Given that a null client is triggering this error, the problem seems to be how to connect a <code>ClientDetailsService</code> to a <code>Custom OAuth2RequestFactory</code> in Spring Boot OAuth2.</strong>  </p>

<p>The <a href=""https://jumpshare.com/v/8BMxbxWd2SsiVmS2Yl1I"" rel=""nofollow noreferrer"">entire debug log can be read at a file sharing site by clicking on this link</a>.  The complete stack trace in the logs contains only one reference to code that is actually in the app, and that line of code is:  </p>

<pre><code>AuthorizationRequest authorizationRequest =  
oAuth2RequestFactory.createAuthorizationRequest(paramsFromRequest(request));
</code></pre>

<p>The error thrown in the debug logs is:  </p>

<pre><code>org.springframework.security.oauth2.provider.NoSuchClientException:  
No client with requested id: null  
</code></pre>

<p><hr/>
<strong>CONTROL FLOW WHEN ERROR IS THROWN:</strong></p>

<hr/>  

<p>I created the following flowchart to illustrate the intended flow of multi-factor authentication requests in <a href=""https://stackoverflow.com/questions/30319666/two-factor-authentication-with-spring-security-oauth2#31425986"">@James' suggested implementation</a>:  </p>

<p><img src=""https://s32.postimg.org/5sahbqvrp/2_FA_OAuth_Flow.gif"">  </p>

<p>In the preceding flowchart, the current error is being thrown at some point between the <strong>Username &amp; Password View</strong> and the <strong>GET /secure/two_factor_authenticated</strong> steps.  </p>

<p><strong>The solution to this OP is limited in scope to the FIRST PASS that 1.) travels through the <code>/oauth/authorize</code> endpoint and then 2.) returns back to the <code>/oauth/authorize</code> endpoint via <code>TwoFactorAuthenticationController</code>.</strong>   </p>

<p>So we simply want to resolve the <code>NoSuchClientException</code> while also demonstrating that the client has been successfully granted <code>ROLE_TWO_FACTOR_AUTHENTICATED</code> in the <code>POST /secure/two_factor_authenticated</code>.  Given that the subsequent steps are boiler-plate, it is acceptable for the flow to demonstrably break in the <strong>SECOND PASS</strong> entry into <code>CustomOAuth2RequestFactory</code>, as long as the user enters the <strong>SECOND PASS</strong> with all the artifacts of successfully having completed the <strong>FIRST PASS</strong>.  The <strong>SECOND PASS</strong> can be a separate question as long as we successfully resolve the <strong>FIRST PASS</strong> here.  </p>

<p><hr/>
<strong>RELEVANT CODE EXCERPTS:</strong>  </p>

<hr/>  

<p>Here is the code for the <code>AuthorizationServerConfigurerAdapter</code>, where I attempt to set up the connection:  </p>

<pre><code>@Configuration
@EnableAuthorizationServer
protected static class OAuth2AuthorizationConfig extends AuthorizationServerConfigurerAdapter {

    @Autowired
    private AuthenticationManager authenticationManager;

    @Autowired//ADDED AS A TEST TO TRY TO HOOK UP THE CUSTOM REQUEST FACTORY
    private ClientDetailsService clientDetailsService;

    @Autowired//Added per: https://stackoverflow.com/questions/30319666/two-factor-authentication-with-spring-security-oauth2
    private CustomOAuth2RequestFactory customOAuth2RequestFactory;

    //THIS NEXT BEAN IS A TEST
    @Bean CustomOAuth2RequestFactory customOAuth2RequestFactory(){
        return new CustomOAuth2RequestFactory(clientDetailsService);
    }

    @Bean
    public JwtAccessTokenConverter jwtAccessTokenConverter() {
        JwtAccessTokenConverter converter = new JwtAccessTokenConverter();
        KeyPair keyPair = new KeyStoreKeyFactory(
                    new ClassPathResource(""keystore.jks""), ""foobar"".toCharArray()
                )
                .getKeyPair(""test"");
        converter.setKeyPair(keyPair);
        return converter;
    }

    @Override
    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {
        clients.inMemory()
                .withClient(""acme"")//API: http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/config/annotation/builders/ClientDetailsServiceBuilder.ClientBuilder.html
                    .secret(""acmesecret"")
                    .authorizedGrantTypes(""authorization_code"", ""refresh_token"", ""password"")
                    .scopes(""openid"");
    }

    @Override
    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {
        endpoints//API: http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerEndpointsConfigurer.html
            .authenticationManager(authenticationManager)
            .accessTokenConverter(jwtAccessTokenConverter())
            .requestFactory(customOAuth2RequestFactory);//Added per: https://stackoverflow.com/questions/30319666/two-factor-authentication-with-spring-security-oauth2
    }

    @Override
    public void configure(AuthorizationServerSecurityConfigurer oauthServer) throws Exception {
        oauthServer//API: http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/config/annotation/web/configurers/AuthorizationServerSecurityConfigurer.html
            .tokenKeyAccess(""permitAll()"")
            .checkTokenAccess(""isAuthenticated()"");
    }

}
</code></pre>

<p>Here is the code for the <code>TwoFactorAuthenticationFilter</code>, which contains the code above that is triggering the error:  </p>

<pre><code>package demo;

import java.io.IOException;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.oauth2.provider.AuthorizationRequest;
import org.springframework.security.oauth2.provider.ClientDetailsService;
import org.springframework.security.oauth2.provider.OAuth2RequestFactory;
import org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory;
import org.springframework.security.web.DefaultRedirectStrategy;
import org.springframework.security.web.RedirectStrategy;
import org.springframework.web.filter.OncePerRequestFilter;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

//This class is added per: https://stackoverflow.com/questions/30319666/two-factor-authentication-with-spring-security-oauth2
/**
 * Stores the oauth authorizationRequest in the session so that it can
 * later be picked by the {@link com.example.CustomOAuth2RequestFactory}
 * to continue with the authoriztion flow.
 */
public class TwoFactorAuthenticationFilter extends OncePerRequestFilter {

    private RedirectStrategy redirectStrategy = new DefaultRedirectStrategy();
    private OAuth2RequestFactory oAuth2RequestFactory;
    //These next two are added as a test to avoid the compilation errors that happened when they were not defined.
    public static final String ROLE_TWO_FACTOR_AUTHENTICATED = ""ROLE_TWO_FACTOR_AUTHENTICATED"";
    public static final String ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED = ""ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED"";

    @Autowired
    public void setClientDetailsService(ClientDetailsService clientDetailsService) {
        oAuth2RequestFactory = new DefaultOAuth2RequestFactory(clientDetailsService);
    }

    private boolean twoFactorAuthenticationEnabled(Collection&lt;? extends GrantedAuthority&gt; authorities) {
        return authorities.stream().anyMatch(
            authority -&gt; ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED.equals(authority.getAuthority())
    );
    }

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
            throws ServletException, IOException {
        // Check if the user hasn't done the two factor authentication.
        if (AuthenticationUtil.isAuthenticated() &amp;&amp; !AuthenticationUtil.hasAuthority(ROLE_TWO_FACTOR_AUTHENTICATED)) {
            AuthorizationRequest authorizationRequest = oAuth2RequestFactory.createAuthorizationRequest(paramsFromRequest(request));
            /* Check if the client's authorities (authorizationRequest.getAuthorities()) or the user's ones
               require two factor authenticatoin. */
            if (twoFactorAuthenticationEnabled(authorizationRequest.getAuthorities()) ||
                    twoFactorAuthenticationEnabled(SecurityContextHolder.getContext().getAuthentication().getAuthorities())) {
                // Save the authorizationRequest in the session. This allows the CustomOAuth2RequestFactory
                // to return this saved request to the AuthenticationEndpoint after the user successfully
                // did the two factor authentication.
               request.getSession().setAttribute(CustomOAuth2RequestFactory.SAVED_AUTHORIZATION_REQUEST_SESSION_ATTRIBUTE_NAME, authorizationRequest);

                // redirect the the page where the user needs to enter the two factor authentiation code
                redirectStrategy.sendRedirect(request, response,
                        ServletUriComponentsBuilder.fromCurrentContextPath()
                            .path(TwoFactorAuthenticationController.PATH)
                            .toUriString());
                return;
            }
        }

        filterChain.doFilter(request, response);
    }

    private Map&lt;String, String&gt; paramsFromRequest(HttpServletRequest request) {
        Map&lt;String, String&gt; params = new HashMap&lt;&gt;();
        for (Entry&lt;String, String[]&gt; entry : request.getParameterMap().entrySet()) {
            params.put(entry.getKey(), entry.getValue()[0]);
        }
        return params;
    }
} 
</code></pre>

<hr/>

<p><strong>RE-CREATING THE PROBLEM ON YOUR COMPUTER:</strong>  </p>

<hr/>  

<p>You can recreate the problem on any computer in only a few minutes by following these simple steps:  </p>

<p>1.) Download the <a href=""https://jumpshare.com/v/nal2OlUqVpMFzMgqeplw"" rel=""nofollow noreferrer"">zipped version of the app from a file sharing site by clicking on this link</a>.  </p>

<p>2.) Unzip the app by typing: <code>tar -zxvf oauth2.tar(1).gz</code>  </p>

<p>3.) launch the <code>authserver</code> app by navigating to <code>oauth2/authserver</code> and then typing <code>mvn spring-boot:run</code>.  </p>

<p>4.) launch the <code>resource</code> app by navigating to <code>oauth2/resource</code> and then typing <code>mvn spring-boot:run</code>  </p>

<p>5.) launch the <code>ui</code> app by navigating to <code>oauth2/ui</code> and then typing <code>mvn spring-boot:run</code>  </p>

<p>6.) Open a web browser and navigate to <code>http : // localhost : 8080</code>  </p>

<p>7.) Click <code>Login</code> and then enter <code>Frodo</code> as the user and <code>MyRing</code> as the password, and click to submit.  <strong>This will trigger the error shown above.</strong>  </p>

<p>You can view the complete source code by: </p>

<p>a.) importing the maven projects into your IDE, or by  </p>

<p>b.) navigating within the unzipped directories and opening with a text editor.  </p>

<p>Note:  The code in the file sharing link above is a combination of <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow noreferrer"">the Spring Boot OAuth2 GitHub sample at this link</a>, and the <a href=""https://stackoverflow.com/questions/30319666/two-factor-authentication-with-spring-security-oauth2#31425986"">suggestions for 2 Factor Authentication offered by @James at this link</a>.  The only changes to the Spring Boot GitHub sample have been in the <code>authserver</code> app, specifically in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver/src/main"" rel=""nofollow noreferrer""><code>authserver/src/main/java</code></a> and in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver/src/main"" rel=""nofollow noreferrer""><code>authserver/src/main/resources/templates</code></a>.  </p>

<p><hr/>
<strong>NARROWING THE PROBLEM:</strong><br>
<hr/><br>
Per @AbrahamGrief's suggestion, I added a <code>FilterConfigurationBean</code>, which resolved the <code>NoSuchClientException</code>.  But the OP asks how to complete the <strong>FIRST PASS</strong> through the control flow in the diagram for a <strong>500 point bounty</strong>.  </p>

<p>I then narrowed the problem by setting <code>ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED</code> in <code>Users.loadUserByUername()</code> as follows:  </p>

<pre><code>@Override
public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
    String password;
    List&lt;GrantedAuthority&gt; auth = AuthorityUtils.commaSeparatedStringToAuthorityList(""ROLE_USER"");
    if (username.equals(""Samwise"")) {//ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED will need to come from the resource, NOT the user
        auth = AuthorityUtils.commaSeparatedStringToAuthorityList(""ROLE_HOBBIT, ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED"");
        password = ""TheShire"";
    }
    else if (username.equals(""Frodo"")){//ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED will need to come from the resource, NOT the user
        auth = AuthorityUtils.commaSeparatedStringToAuthorityList(""ROLE_HOBBIT, ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED"");
        password = ""MyRing"";
    }
    else{throw new UsernameNotFoundException(""Username was not found. "");}
    return new org.springframework.security.core.userdetails.User(username, password, auth);
}
</code></pre>

<p>This eliminates the need to configure clients and resources, so that the current problem remains narrow.  However, the next roadblock is that Spring Security is rejecting the user's request for <code>/security/two_factor_authentication</code>.  <strong>What further changes need to be made to complete the FIRST PASS through the control flow, so that the <code>POST /secure/two_factor_authentication</code> can SYSO <code>ROLE_TWO_FACTOR_AUTHENTICATED</code>?</strong></p>
",807797,,-1,,2017-05-23 11:45:25,2016-05-04 20:54:53,null client in OAuth2 Multi-Factor Authentication,<spring><spring-mvc><spring-security><spring-boot><spring-security-oauth2>,1,0,7,,
Spring,37970709,1,37971596,97,6/22/2016 14:52:12,0,,6/22/2016 14:15:43,,16,15445,"<p>I'm trying to create OAuth2 Server Provider using this tutorial <a href=""https://spring.io/blog/2015/02/03/sso-with-oauth2-angular-js-and-spring-security-part-v"" rel=""noreferrer"">Spring OAuth2</a> . The main difference between example and my project - I do not use Spring Boot. I try to split this classes (<a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/authserver/src/main/java/demo/AuthserverApplication.java"" rel=""noreferrer"">GitHub example link</a>) I created 2 classes:</p>

<pre><code>@Configuration
@Order(-20)
@EnableResourceServer
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

  @Autowired
  private AuthenticationManager authenticationManager;

  @Override
  protected void configure(HttpSecurity http) throws Exception {
    http.formLogin().loginPage(""/login"").permitAll()
            .and()
            .requestMatchers().antMatchers(""/login"", ""/oauth/authorize"", ""/oauth/confirm_access"")
            .and()
            .authorizeRequests().anyRequest().authenticated();
  }

  @Override
  protected void configure(AuthenticationManagerBuilder auth) throws Exception {
    auth.parentAuthenticationManager(authenticationManager);
  }
</code></pre>

<p>}</p>

<p>Second class:</p>

<pre><code>@Configuration
@EnableAuthorizationServer
@EnableResourceServer
public class OAuth2AuthorizationConfiguration extends AuthorizationServerConfigurerAdapter {

  @Autowired
  private AuthenticationManager authenticationManager;

  @Bean
  public JwtAccessTokenConverter jwtAccessTokenConverter() {
    JwtAccessTokenConverter converter = new JwtAccessTokenConverter();
    KeyPair keyPair = new KeyStoreKeyFactory(
            new ClassPathResource(""keystore.jks""), ""foobar"".toCharArray())
            .getKeyPair(""test"");
    converter.setKeyPair(keyPair);
    return converter;
  }

  @Override
  public void configure(ClientDetailsServiceConfigurer clients) throws Exception {
    clients.inMemory()
            .withClient(""acme"")
            .secret(""acmesecret"")
            .authorizedGrantTypes(""authorization_code"", ""refresh_token"",
                    ""password"").scopes(""openid"").autoApprove(true).accessTokenValiditySeconds(30);
}

  @Override
  public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {
    endpoints.authenticationManager(authenticationManager).accessTokenConverter(
            jwtAccessTokenConverter());
  }

  @Override
  public void configure(AuthorizationServerSecurityConfigurer oauthServer) throws Exception {
    oauthServer.tokenKeyAccess(""permitAll()"").checkTokenAccess(
            ""isAuthenticated()"");
  }

}
</code></pre>

<p>But when I try to start this code, I get:</p>

<pre><code>SEVERE: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'OAuth2AuthorizationConfiguration': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private   org.springframework.security.authentication.AuthenticationManager com.example.configuration.security.OAuth2AuthorizationConfiguration.authenticationManager; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.security.authentication.AuthenticationManager] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
at   org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:292)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)
at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)
at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:5066)
at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5584)
at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:899)
at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:875)
at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:652)
at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1863)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)
at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:618)
at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:565)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)
at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:324)
at sun.rmi.transport.Transport$1.run(Transport.java:200)
at sun.rmi.transport.Transport$1.run(Transport.java:197)
at java.security.AccessController.doPrivileged(Native Method)
at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
at java.security.AccessController.doPrivileged(Native Method)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.security.authentication.AuthenticationManager com.example.configuration.security.OAuth2AuthorizationConfiguration.authenticationManager; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.security.authentication.AuthenticationManager] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:508)
at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
... 58 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.security.authentication.AuthenticationManager] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1103)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:963)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:858)
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:480)
... 60 more
</code></pre>

<p>I guess, the problem is in Spring Boot that I do not use in my app. 
I tried following solutions: <a href=""https://stackoverflow.com/questions/21633555/how-to-inject-authenticationmanager-using-java-configuration-in-a-custom-filter"">First</a>, <a href=""https://stackoverflow.com/questions/32081578/spring-security-nosuchbeandefinitionexception-no-qualifying-bean-of-type-org"">Second</a>
I use only code-based configuration. 
Additional info:
Java 8
spring-security-oauth2 - 2.0.7.RELEASE, 
spring-security-version - 4.0.1.RELEASE, 
spring-version - 4.0.6.RELEASE. </p>

<p>How to fix it?</p>

<p><strong>UPDATE</strong></p>

<p>I created </p>

<pre><code>@Configuration
public class AuthManager extends WebSecurityConfigurerAdapter {

    @Bean
    public AuthenticationManager customAuthenticationManager() throws Exception {
        return authenticationManager();
    }

}
</code></pre>

<p>And now I have exception:</p>

<pre><code>Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.security.authentication.AuthenticationManager org.com.example.configuration.security.WebSecurityConfig.authenticationManager; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'customAuthenticationManager': Requested bean is currently in creation: Is there an unresolvable circular reference?
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:508)
    at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
    ... 100 more
Caused by: org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'customAuthenticationManager': Requested bean is currently in creation: Is there an unresolvable circular reference?
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.beforeSingletonCreation(DefaultSingletonBeanRegistry.java:335)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1017)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:960)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:858)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:480)
</code></pre>

<p>This exception in OAuth2AuthorizationConfiguration class.</p>
",2114952,,-1,,2017-05-23 10:34:05,2018-05-08 10:15:38,Could not autowire field: private org.springframework.security.authentication.AuthenticationManager,<java><spring><spring-mvc><spring-security><spring-boot>,3,1,3,,
Spring,38698426,1,38723291,23,8/2/2016 14:30:38,26,,8/1/2016 12:05:31,,4,911,"<p>I found the same problem and solution <a href=""https://stackoverflow.com/questions/33694905/spring-security-with-angularjs-404-on-logout"">here</a>. But those solution have not helped me. The example you can get <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/single"" rel=""nofollow noreferrer"">here</a>. As you can see example contains good description for logout in client <em>angular part</em>. But it does not provide logout processing on server part. So I checked <a href=""https://stackoverflow.com/questions/33694905/spring-security-with-angularjs-404-on-logout""><em><strong>LogoutSuccessHandler</strong></em></a> </p>

<pre><code>authentication.isAuthenticated() == true
</code></pre>

<p>I tried use some experiments, but logout does not work. Tried:</p>

<pre><code>((UsernamePasswordAuthenticationToken) authentication).eraseCredentials();
</code></pre>

<p>or</p>

<pre><code>authentication.setAuthenticated(false);
</code></pre>

<p>and <em>.deleteCookies(""JSESSIONID"", <strong>""XSRF-TOKEN""</strong>)</em></p>

<pre><code>        http.httpBasic().and().authorizeRequests()
                .antMatchers(""/index.html"", ""/home.html"", ""/login.html"", ""/"").permitAll().anyRequest()
                .authenticated().and().csrf()
                .csrfTokenRepository(csrfTokenRepository()).and()
                .addFilterAfter(csrfHeaderFilter(), CsrfFilter.class);
        http.authorizeRequests().anyRequest().authenticated()
                .and().logout().logoutSuccessHandler(logoutSuccess).deleteCookies(""JSESSIONID"", ""XSRF-TOKEN"")
                .invalidateHttpSession(true).permitAll();
</code></pre>

<p>result was same. I hope someone can help me with the issue. Thanks.</p>
",5728095,,-1,,2017-05-23 12:14:54,2016-08-02 18:41:55,Spring security with AngularJS - logout does not work,<java><angularjs><google-chrome><spring-security><logout>,1,3,,,
Spring,34751700,1,38867506,98,8/10/2016 8:02:41,5053,,1/12/2016 18:57:52,,9,7222,"<p>I have been really been searching high and low for the last few days on how to do this and have finally decided to admit defeat and ask for help, please!!!</p>

<p>I have followed Dr Dave Syer's tutorial on Angular and Spring Security specifically the Zuul Proxy as an api gateway and using Spring Session with Redis (<a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/double#_sso_with_oauth2_angular_js_and_spring_security_part_v"">https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/double#_sso_with_oauth2_angular_js_and_spring_security_part_v</a>)</p>

<p>The issue I am having is that I am calling resource rest services via the gateway from an external application with the following header:</p>

<pre><code>String plainCreds = ""user:password"";
byte[] plainCredsBytes = plainCreds.getBytes();
byte[] base64CredsBytes = Base64.getEncoder().encode(plainCredsBytes);
String base64Creds = new String(base64CredsBytes);

HttpHeaders headers = new HttpHeaders();
headers.add(""Authorization"", ""Basic "" + base64Creds);
</code></pre>

<p>to be authenticated and then routed by zuul and then the resource to have access to the authenticated session via redis.</p>

<p>The issue is that the session seems to only commit to redis in the gateway after the request has responded. So what is happening is that when I call a resource service with the header, I can see the successful authentication occurring in the gateway and session being created, however I am getting a 403 in the resource due to the session not being in redis after its been routed via zuul.</p>

<p>However if I get the error, grab the session id and add it to the header and try again it works because now my authenticated session is available for the resource project after its been routed.</p>

<p>Please could someone point me in the direction of how I go about getting my calls via the gateway to authenticate and route in the same request please?</p>

<p>Thanks
Justin</p>
",4977572,,,,,2016-10-20 12:33:45,Spring Zuul API Gateway with Spring Session / Redis Authenticate and Route in same Request,<spring-security><spring-cloud><spring-session>,2,1,7,,
Spring,39233986,1,39337370,99,9/5/2016 20:35:09,146,,8/30/2016 17:48:28,,1,72,"<p>I am trying to build rest service using Spring Boot. I am learning to implement it using the <a href=""https://spring.io/guides/gs/rest-service/"" rel=""nofollow noreferrer"">this</a> Spring's guide. I have built the application using STS as a Maven application and the code is exact replica of the guide and when I try to run the application I get the below connection error</p>

<p><a href=""https://i.stack.imgur.com/nF8lP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nF8lP.png"" alt=""connection error""></a></p>

<p>I also tried to run the <a href=""https://github.com/spring-guides/gs-rest-service"" rel=""nofollow noreferrer"">github code</a> for the same guide provided by Spring and that code also gives same the error as above. I am new to Spring Boot and any help would be appreciated.</p>

<p>Below is my code
App.java</p>

<pre><code>    package Greetings.Web_Services;

    import org.springframework.boot.SpringApplication;
    import org.springframework.boot.autoconfigure.SpringBootApplication;

    @SpringBootApplication
    public class App 
    {
        public static void main( String[] args )
        {
            System.out.println(""App Started"");
            SpringApplication.run(App.class, args);
        }
    }
</code></pre>

<p>Greetings.java</p>

<pre><code>    package Greetings.Web_Services;

    public class Greetings {

        private final long id;
        private final String content;

        public Greetings(long id, String content){
            this.id = id;
            this.content = content;
        }

        public long getId(){
            return id;
        }

        public String getContent(){
            return content;
        }
    }
</code></pre>

<p>GreetingsController.java</p>

<pre><code>    package Greetings.Web_Services;

    import java.util.concurrent.atomic.AtomicLong;
    import org.springframework.web.bind.annotation.RequestMapping;
    import org.springframework.web.bind.annotation.RequestParam;
    import org.springframework.web.bind.annotation.RestController;

    @RestController
    public class GreetingsController {
        private static final String template = ""Hello, %s!"";
        private final AtomicLong counter = new AtomicLong();

        @RequestMapping(""/greeting"")
        public Greetings greeting(@RequestParam(value=""name"", defaultValue=""World"") String name) {
            return new Greetings(counter.incrementAndGet(),
                        String.format(template, name));
        }
    }
</code></pre>

<p>pom.xml</p>

<pre><code>    &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
    &lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

&lt;groupId&gt;org.springframework&lt;/groupId&gt;
&lt;artifactId&gt;gs-rest-service&lt;/artifactId&gt;
&lt;version&gt;0.1.0&lt;/version&gt;

&lt;parent&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
    &lt;version&gt;1.4.0.RELEASE&lt;/version&gt;
&lt;/parent&gt;

&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;/dependency&gt;

    &lt;!-- &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;
    &lt;/dependency&gt; --&gt;

    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-web&lt;/artifactId&gt;
        &lt;version&gt;4.3.1.RELEASE&lt;/version&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.jayway.jsonpath&lt;/groupId&gt;
        &lt;artifactId&gt;json-path&lt;/artifactId&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;

&lt;properties&gt;
    &lt;java.version&gt;1.8&lt;/java.version&gt;
&lt;/properties&gt;


&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;

&lt;repositories&gt;
    &lt;repository&gt;
        &lt;id&gt;spring-releases&lt;/id&gt;
        &lt;url&gt;https://repo.spring.io/libs-release&lt;/url&gt;
    &lt;/repository&gt;
&lt;/repositories&gt;
&lt;pluginRepositories&gt;
    &lt;pluginRepository&gt;
        &lt;id&gt;spring-releases&lt;/id&gt;
        &lt;url&gt;https://repo.spring.io/libs-release&lt;/url&gt;
    &lt;/pluginRepository&gt;
&lt;/pluginRepositories&gt;

    &lt;/project&gt;
</code></pre>

<p>GitHub <a href=""https://github.com/ananthashankar/Rest-Services"" rel=""nofollow noreferrer"">link</a> for the project of above code</p>

<p>Thanks!!</p>
",5385516,,5385516,,2016-08-31 0:34:09,2016-09-05 20:35:09,Not able to run the starter guide code of Building Spring Boot Rest Service,<spring><web-services><rest><maven><spring-boot>,1,4,,,
Spring,40357318,1,40460700,100,11/7/2016 8:25:22,142,,11/1/2016 9:32:00,,1,539,"<p>I'm trying to repeat the ""Spring Boot and OAuth2"" example from <a href=""https://spring.io/guides/tutorials/spring-boot-oauth2/"" rel=""nofollow"">tutorial</a>.</p>

<p>I run the example with ""gradlew bootRun"".
It is working on Windows without problems, but I having an issue on Ubuntu 14.04.
When I clicked on ""login"" button the service doesn't perform a redirect to the authorization server (e.g. facebook), and after several minutes return with time-out.</p>

<p>The service's log contains the following lines:</p>

<pre><code>o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'GET /login' doesn't match 'POST /logout
o.s.security.web.FilterChainProxy        : /login at position 6 of 12 in additional filter chain; firing Filter: 'OAuth2ClientAuthenticationProcessingFilter'
o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login'; against '/login'
uth2ClientAuthenticationProcessingFilter : Request is to process authentication
</code></pre>

<p>I would be grateful for any help.
Thanks.</p>

<p>Source code of tutorial located on <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/logout"" rel=""nofollow"">github</a></p>

<p>My source code are given below:</p>

<p><strong>build.gradle</strong></p>

<pre><code>buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(""org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE"")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile(""org.springframework.boot:spring-boot-starter-security"")
    compile(""org.springframework.boot:spring-boot-starter-web"")
    compile(""org.springframework.security.oauth:spring-security-oauth2"")

    compile(""org.webjars:webjars-locator"")
    compile(""org.webjars:angularjs:1.4.3"")
    compile(""org.webjars:jquery:2.1.1"")
    compile(""org.webjars:bootstrap:3.2.0"")

    testCompile group: 'junit', name: 'junit', version: '4.11'
}
</code></pre>

<p><strong>application.yml</strong></p>

<pre><code>security:
  oauth2:
    client:
      clientId: 233668646673605
      clientSecret: 33b17e044ee6a4fa383f46ec6e28ea1d
      accessTokenUri: https://graph.facebook.com/oauth/access_token
      userAuthorizationUri: https://www.facebook.com/dialog/oauth
      tokenName: oauth_token
      authenticationScheme: query
      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://graph.facebook.com/me

logging:
  level:
    org.springframework.security: DEBUG
</code></pre>

<p><strong>SocialApplication.java</strong></p>

<pre><code>@SpringBootApplication
@EnableOAuth2Sso
@RestController
public class SocialApplication extends WebSecurityConfigurerAdapter {

    @RequestMapping(""/user"")
    public Principal user(Principal principal) {
        return principal;
    }

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http.antMatcher(""/**"").authorizeRequests().antMatchers(""/"", ""/login**"", ""/webjars/**"").permitAll()
                .anyRequest().authenticated()
                .and().logout().logoutSuccessUrl(""/"").permitAll()
                .and().csrf().csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse());
    }

    public static void main(String[] args) {
        SpringApplication.run(SocialApplication.class, args);
    }
}
</code></pre>
",4529210,,,,,2016-11-07 8:25:22,Spring Boot and OAuth2 example: redirect not working,<spring><spring-security><oauth2>,1,0,1,,
Spring,40585031,1,40595012,101,11/14/2016 18:02:36,8,,11/14/2016 9:02:52,,7,11431,"<p>Tried springboot for the first time but I am unable to get it to start.
I used the sample app: <a href=""https://github.com/spring-guides/gs-spring-boot.git"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-spring-boot.git</a>
I also made modifications to use an embedded jetty instead of tomcat but still no success.</p>

<p>The exception I get is this: org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is java.lang.IllegalArgumentException: Resource location must not be null.</p>

<p>This is on MacOSX.</p>

<p>Edit: I have confirmed this is an environment issue. I can start the app just fine in a linux(fedora) VM but for whatever reason I run into this problem on my Mac. Not sure if anyone else run into this and has any clues on what might be causing this.</p>

<p>Edit 2: So this appears to be an issue with trying to configure ssl by default. I am not sure why this is the case since I haven't specified this anywhere; So my question now is, how do I disable https in spring-boot? </p>

<pre><code>mvn -version
Apache Maven 3.2.5 (12a6b3acb947671f09b81f49094c53f426d8cea1; 2014-12-14T09:29:23-08:00)
Maven home: /usr/local/Cellar/maven/3.2.5/libexec
Java version: 1.8.0_25, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.10.5"", arch: ""x86_64"", family: ""mac""
</code></pre>

<p>Any help is appreciated. </p>

<pre><code>org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is java.lang.IllegalArgumentException: Resource location must not be null
    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:536) ~[spring-context-4.3.4.RELEASE.jar!/:4.3.4.RELEASE]
    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761) [spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371) [spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186) [spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175) [spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at hello.Application.main(Application.java:15) [classes!/:0.1.0]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_25]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_25]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_25]
    at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_25]
    at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48) [gs-spring-boot-0.1.0.jar:0.1.0]
    at org.springframework.boot.loader.Launcher.launch(Launcher.java:87) [gs-spring-boot-0.1.0.jar:0.1.0]
    at org.springframework.boot.loader.Launcher.launch(Launcher.java:50) [gs-spring-boot-0.1.0.jar:0.1.0]
    at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:58) [gs-spring-boot-0.1.0.jar:0.1.0]
Caused by: java.lang.IllegalArgumentException: Resource location must not be null
    at org.springframework.util.Assert.notNull(Assert.java:115) ~[spring-core-4.3.4.RELEASE.jar!/:4.3.4.RELEASE]
    at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:131) ~[spring-core-4.3.4.RELEASE.jar!/:4.3.4.RELEASE]
    at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.configureSslKeyStore(TomcatEmbeddedServletContainerFactory.java:417) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.configureSsl(TomcatEmbeddedServletContainerFactory.java:395) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.customizeSsl(TomcatEmbeddedServletContainerFactory.java:332) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.customizeConnector(TomcatEmbeddedServletContainerFactory.java:311) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:169) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134) ~[spring-boot-1.4.2.RELEASE.jar!/:1.4.2.RELEASE]
    ... 16 common frames omitted
</code></pre>
",979467,,1399491,,2018-12-12 18:26:43,2019-03-07 16:10:00,Unable to start springboot app - Resource location must not be null,<spring><spring-boot>,4,5,,,
Spring,40802405,1,40802769,102,11/25/2016 10:28:26,0,,11/25/2016 10:11:01,,1,641,"<p>I would like to build a web application based on <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/spring-session"" rel=""nofollow noreferrer"">this example</a>.   </p>

<p>What I understood from this example is that you build 2 applications:<br>
A UI application containing the web pages where you can login to get a token and a resource application where you ask for data using your token.</p>

<p>My question is where is the login check done?<br>
The <strong>application.yml</strong> file defines the password ""<strong>password</strong>"" for the user ""<strong>user</strong>""</p>

<pre><code>security:
  user:
    password: password
</code></pre>

<p>But this file is never mentioned neither in <strong>UIApplication.java</strong> file or in any other file:</p>

<pre><code>@SpringBootApplication
@RestController
public class UiApplication {

    public static void main(String[] args) {
        SpringApplication.run(UiApplication.class, args);
    }

    @Configuration
    @Order(SecurityProperties.ACCESS_OVERRIDE_ORDER)
    protected static class SecurityConfiguration extends WebSecurityConfigurerAdapter {

        @Override
        protected void configure(HttpSecurity http) throws Exception {
            // @formatter:off
            http
                .httpBasic().and()
                .logout().and()
                .authorizeRequests()
                    .antMatchers(""/index.html"", ""/pages/home.html"", ""/pages/login.html"", ""/"").permitAll()
                    .anyRequest().authenticated().and()
                .csrf()
                    .csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse());
            // @formatter:on
        }
    }

    @RequestMapping(""/user"")
    public Principal user(Principal user) {
        return user;
    }

    @RequestMapping(""/token"")
    public Map&lt;String,String&gt; token(HttpSession session) {
        return Collections.singletonMap(""token"", session.getId());
    }

}
</code></pre>

<p>However it works: when I login using ""user"" and ""password"" login succeeds, when I use different credentials, it fails.<br>
Is it some high level Spring layer dealing with that? Thanks for help.</p>
",2436719,,2436719,,2016-11-25 10:37:37,2016-11-25 10:51:57,Spring session login,<java><spring><session>,1,0,,,
Spring,40775533,1,40816259,103,11/26/2016 8:01:20,57,,11/23/2016 22:58:42,,1,628,"<p>I followed <a href=""https://spring.io/guides/tutorials/spring-boot-oauth2/#_social_login_authserver"" rel=""nofollow noreferrer"">this guide</a> and cloned the <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/auth-server"" rel=""nofollow noreferrer"">authserver</a>. The project has an <code>authserver</code> and a <code>client</code> (as test). Example works fine but if I remove <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/blob/master/auth-server/src/test/resources/client.yml#L3"" rel=""nofollow noreferrer"">context-path</a> property (I just want my app to work on <code>/</code>), it fails after redirect back to the <code>client</code>. Example:</p>

<ol>
<li>Go to the <code>client</code> (<code>localhost:9999</code>);</li>
<li>Redirected to the <code>authserver</code> (<code>localhost:8080</code>);</li>
<li>Login through GitHub;</li>
<li>Redirected to the <code>authserver</code> and immediatly to the <code>client</code> with next url:</li>
</ol>

<blockquote>
  <p><a href=""http://localhost:9999/login?code=dqoxz4&amp;state=79qtJ5"" rel=""nofollow noreferrer"">http://localhost:9999/login?code=dqoxz4&amp;state=79qtJ5</a></p>
</blockquote>

<p>Whitelabel error page responds:</p>

<blockquote>
  <p>There was an unexpected error (type=Unauthorized, status=401).<br>
  Authentication Failed: Could not obtain access token</p>
</blockquote>

<p>As I mentioned above, it fails only if <code>context-path</code> is <code>/</code> (or removed at all). Otherwise, all works.</p>
",4725496,,,,,2016-11-27 10:39:43,Spring SSO authorization fails without context-path,<java><spring><spring-security>,2,0,,,
Spring,41092751,1,41092831,104,12/12/2016 0:52:59,0,,12/12/2016 0:37:03,,35,19035,"<p>I'm experimenting with examples from this official Spring <a href=""https://spring.io/guides/gs/async-method/"" rel=""noreferrer"">tutorials</a> and there is a dependency on this code:<br>
<a href=""https://github.com/spring-guides/gs-async-method/tree/master/complete"" rel=""noreferrer"">https://github.com/spring-guides/gs-async-method/tree/master/complete</a></p>

<p>If you look at the code on <em>AppRunner.java</em>  class, I have 2 issues:</p>

<p>1) When server is starting, if I put a breakpoint in this class's constructor, seems like in the constructor, the <em>GitHubLookupService</em> is provided by spring, using the <strong>@Service</strong> bean that was configured. BUT, there was no <code>@Autowired</code> annotation on the constructor, so how in the world this constructor get called with the right dependency?  It was supposed to be <code>null</code>.</p>

<p>Is it an automatic assumption of <strong>Spring Boot</strong>?<br>
Does Spring see ""private field + constructor argument, and it assumes it should look for an appropriate bean?<br>
Is it <strong>Spring Framework</strong> or <strong>Spring boot</strong>?<br>
Am I missing something?</p>

<p>2) As I remember, it was mendatory to provide <em>default constructor</em> to beans / service etc. How come this class (AppRunner) doesn't have a default constructor?
How does Spring knows that it should run the constructor with the argument?
Is it because it is the only constructor?</p>
",1652248,,814702,,2018-01-23 16:14:54,2018-01-23 16:14:54,Spring injects dependencies in constructor without @Autowired annotation,<spring><spring-boot><dependency-injection><autowired>,1,0,6,,
Spring,41429778,1,41450580,105,1/3/2017 19:03:07,27,,1/2/2017 15:53:40,,4,4602,"<p>I am following <a href=""https://spring.io/guides/tutorials/spring-security-and-angular-js/#_the_login_page_angular_js_and_spring_security_part_ii"" rel=""nofollow noreferrer"">this</a> tutorial on Spring Security in the Spring.io guides. The logout and login functions are working fine, but when I add the following line in the <code>WebSecurityConfigurerAdapter</code> it doesn't work as expected. (Basically, I want to prevent a user from login from two devices if he is already logged in in one)</p>

<pre><code>@Configuration
@Order(SecurityProperties.ACCESS_OVERRIDE_ORDER)
protected static class SecurityConfiguration extends WebSecurityConfigurerAdapter {
    @Override
    protected void configure(HttpSecurity http) throws Exception {
        // The configuration as in the tutorial
        http
            .httpBasic().and()
            .authorizeRequests()
                .antMatchers(""/index.html"", ""/home.html"", ""/login.html"", ""/"").permitAll()
                .anyRequest().authenticated()
                .and()
            .csrf()
                .csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse());

      // Added this for session management  
      http.sessionManagement().maximumSessions(1).maxSessionsPreventsLogin(true)
    }
} 
</code></pre>

<p>The problem occurs if you logout and try to login again, a 401 is returned with the message 'Authentication Failed: Maximum
 sessions of 1 for this principal exceeded'.
Yet the logout URL is hit on this part in the <code>AngularJs</code> app</p>

<pre><code>self.logout = function() {
   $http.post('logout', {}).finally(function() {
     $rootScope.authenticated = false;
     $location.path(""/"");
   });
}
</code></pre>

<p>Why isn't the number of sessions reset in this case?</p>

<p>What can be done to make it work as expected?</p>

<p><a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/single"" rel=""nofollow noreferrer"">Link to github code</a></p>

<p>Spring Security logs in debug mode</p>

<pre><code>2017-01-03 21:38:01.806 DEBUG 32624 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/error'
2017-01-03 21:38:01.806 DEBUG 32624 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /logout at position 1 of 13 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2017-01-03 21:38:01.806 DEBUG 32624 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /logout at position 2 of 13 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] w.c.HttpSessionSecurityContextRepository : Obtained a valid SecurityContext from SPRING_SECURITY_CONTEXT: 'org.springframework.security.core.context.SecurityContextImpl@442b5a9f: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER'
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /logout at position 3 of 13 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /logout at position 4 of 13 in additional filter chain; firing Filter: 'CsrfFilter'
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /logout at position 5 of 13 in additional filter chain; firing Filter: 'LogoutFilter'
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/logout'
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] o.s.s.w.a.logout.LogoutFilter            : Logging out user 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER' and transferring to logout destination
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] o.s.s.w.a.l.SecurityContextLogoutHandler : Invalidating session: DDC79F814F9ECD2A0192531E977D53C9
2017-01-03 21:38:01.807 DEBUG 32624 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2017-01-03 21:38:01.808 DEBUG 32624 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : matched
2017-01-03 21:38:01.808 DEBUG 32624 --- [nio-8080-exec-9] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@e0735a1
2017-01-03 21:38:01.809 DEBUG 32624 --- [nio-8080-exec-9] w.c.HttpSessionSecurityContextRepository : SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
2017-01-03 21:38:01.809 DEBUG 32624 --- [nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/user'; against '/error'
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 1 of 13 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 2 of 13 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] w.c.HttpSessionSecurityContextRepository : No HttpSession currently exists
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] w.c.HttpSessionSecurityContextRepository : No SecurityContext was available from the HttpSession: null. A new one will be created.
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 3 of 13 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 4 of 13 in additional filter chain; firing Filter: 'CsrfFilter'
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 5 of 13 in additional filter chain; firing Filter: 'LogoutFilter'
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'GET /user' doesn't match 'POST /logout
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 6 of 13 in additional filter chain; firing Filter: 'ConcurrentSessionFilter'
2017-01-03 21:38:38.069 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 7 of 13 in additional filter chain; firing Filter: 'BasicAuthenticationFilter'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 8 of 13 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 9 of 13 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 10 of 13 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 11 of 13 in additional filter chain; firing Filter: 'SessionManagementFilter'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.session.SessionManagementFilter  : Requested session ID DDC79F814F9ECD2A0192531E977D53C9 is invalid.
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 12 of 13 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.security.web.FilterChainProxy        : /user at position 13 of 13 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/user'; against '/index.html'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/user'; against '/home.html'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/user'; against '/login.html'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/user'; against '/'
2017-01-03 21:38:38.070 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Secure object: FilterInvocation: URL: /user; Attributes: [authenticated]
2017-01-03 21:38:38.071 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
2017-01-03 21:38:38.071 DEBUG 32624 --- [io-8080-exec-10] o.s.s.access.vote.AffirmativeBased       : Voter: org.springframework.security.web.access.expression.WebExpressionVoter@6bd96c27, returned: -1
2017-01-03 21:38:38.072 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.a.ExceptionTranslationFilter     : Access is denied (user is anonymous); redirecting to authentication entry point

org.springframework.security.access.AccessDeniedException: Access is denied
    at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:84) ~[spring-security-core-4.1.3.RELEASE.jar:4.1.3.RELEASE]
    at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:233) ~[spring-security-core-4.1.3.RELEASE.jar:4.1.3.RELEASE]

2017-01-03 21:38:38.073 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.util.matcher.AndRequestMatcher   : Trying to match using Ant [pattern='/**', GET]
2017-01-03 21:38:38.073 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request '/user' matched by universal pattern '/**'
2017-01-03 21:38:38.073 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.util.matcher.AndRequestMatcher   : Trying to match using NegatedRequestMatcher [requestMatcher=Ant [pattern='/**/favicon.ico']]
2017-01-03 21:38:38.073 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/user'; against '/**/favicon.ico'
2017-01-03 21:38:38.073 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.NegatedRequestMatcher  : matches = true
2017-01-03 21:38:38.073 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.util.matcher.AndRequestMatcher   : Trying to match using NegatedRequestMatcher [requestMatcher=MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@47099aec, matchingMediaTypes=[application/json], useEquals=false, ignoredMediaTypes=[*/*]]]
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.m.MediaTypeRequestMatcher      : httpRequestMediaTypes=[application/json, text/plain, */*]
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.m.MediaTypeRequestMatcher      : Processing application/json
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.m.MediaTypeRequestMatcher      : application/json .isCompatibleWith application/json = true
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.u.matcher.NegatedRequestMatcher  : matches = false
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.util.matcher.AndRequestMatcher   : Did not match
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.s.HttpSessionRequestCache        : Request not saved as configured RequestMatcher did not match
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.a.ExceptionTranslationFilter     : Calling Authentication entry point.
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] s.w.a.DelegatingAuthenticationEntryPoint : Trying to match using RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] s.w.a.DelegatingAuthenticationEntryPoint : Match found! Executing org.springframework.security.web.authentication.HttpStatusEntryPoint@301fca8
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@e0735a1
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] w.c.HttpSessionSecurityContextRepository : SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
2017-01-03 21:38:38.074 DEBUG 32624 --- [io-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/user'; against '/error'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 1 of 13 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 2 of 13 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] w.c.HttpSessionSecurityContextRepository : No HttpSession currently exists
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] w.c.HttpSessionSecurityContextRepository : No SecurityContext was available from the HttpSession: null. A new one will be created.
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 3 of 13 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 4 of 13 in additional filter chain; firing Filter: 'CsrfFilter'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 5 of 13 in additional filter chain; firing Filter: 'LogoutFilter'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'GET /user' doesn't match 'POST /logout
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 6 of 13 in additional filter chain; firing Filter: 'ConcurrentSessionFilter'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 7 of 13 in additional filter chain; firing Filter: 'BasicAuthenticationFilter'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.w.a.www.BasicAuthenticationFilter  : Basic Authentication Authorization header found for user 'user'
2017-01-03 21:39:24.188 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.authentication.ProviderManager     : Authentication attempt using org.springframework.security.authentication.dao.DaoAuthenticationProvider
2017-01-03 21:39:24.189 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.w.a.www.BasicAuthenticationFilter  : Authentication success: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER
2017-01-03 21:39:24.189 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 8 of 13 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
2017-01-03 21:39:24.189 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 9 of 13 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
2017-01-03 21:39:24.189 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 10 of 13 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
2017-01-03 21:39:24.189 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@442b5a9f: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_USER'
2017-01-03 21:39:24.189 DEBUG 32624 --- [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : /user at position 11 of 13 in additional filter chain; firing Filter: 'SessionManagementFilter'
2017-01-03 21:39:24.189 DEBUG 32624 --- [nio-8080-exec-1] s.CompositeSessionAuthenticationStrategy : Delegating to org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy@2bf94401
2017-01-03 21:39:24.191 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.w.session.SessionManagementFilter  : SessionAuthenticationStrategy rejected the authentication object

org.springframework.security.web.authentication.session.SessionAuthenticationException: Maximum sessions of 1 for this principal exceeded
    at org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy.allowableSessionsExceeded(ConcurrentSessionControlAuthenticationStrategy.java:153) ~[spring-security-web-4.1.3.RELEASE.jar:4.1.3.RELEASE]
    at org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy.onAuthentication(ConcurrentSessionControlAuthenticationStrategy.java:123) ~[spring-security-web-4.1.3.RELEASE.jar:4.1.3.RELEASE]


2017-01-03 21:39:24.192 DEBUG 32624 --- [nio-8080-exec-1] .a.SimpleUrlAuthenticationFailureHandler : No failure URL set, sending 401 Unauthorized error
2017-01-03 21:39:24.192 DEBUG 32624 --- [nio-8080-exec-1] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@e0735a1
2017-01-03 21:39:24.192 DEBUG 32624 --- [nio-8080-exec-1] w.c.HttpSessionSecurityContextRepository : SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
2017-01-03 21:39:24.192 DEBUG 32624 --- [nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
</code></pre>
",5248299,,5248299,,2017-01-03 18:53:15,2017-01-04 6:42:30,Spring Security logout and Maximum sessions,<java><spring><spring-mvc><session><spring-security>,1,0,3,,
Spring,41578040,1,41771377,106,1/20/2017 19:56:36,239,,1/10/2017 20:44:03,,2,778,"<p>I've found similar <a href=""https://stackoverflow.com/questions/36674438/multiple-resource-server-oauth2-clients-spring-oauth2-sso"">issue</a> but it's unanswered, so I suppose I'm going to duplicate question a little.</p>

<p>I am using Spring OAuth2 to implement separate resource and custom authentification servers. 
I've already configured interaction with auth server through issuing&amp;validating JWT tokens and everything seems fine.</p>

<p>Now I'm trying to add SSO functionality but really stuck with it. I've researched the official Spring <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2"" rel=""nofollow noreferrer"">examples</a> and attached guide but it is very short worded when it comes to connecting SSO part with custom server authentication. And actually author uses only external provider resource ('user' info) to show process.</p>

<p>I think it is normal thing to have all this SSO means of authentication and also custom registration. I can see it works well with stackoverflow for example.</p>

<p>I am loking for directions where to find any info about handling on resource server different kind of tokens issued by multiply SSO providers and also from custom auth server.
Maybe I can use auth chain to do this and some mean to distinguish token format to know how to process it. Is it possible with Spring OAuth2? Or I need to do this magic somehow manually?</p>

<p>For now I have just one 'maybe strange' idea: 
To not involve my own resource server with this SSO stuff at all. After receiving Facebook (for example) token - just exchange it for api JWT token with custom auth server (associating or creating user on the way) and then work with resource server on standard basics</p>

<p><strong>EDITED:</strong>
I've found at least something. I've read about configuring filters in authorization chain and translate given social tokens to my custom JWT-s as 'post authenticate'(not a crazy idea after all). But it mostly done with SpringSocial. 
So now question is: how to do that?
Forgot to say that I am using Password Grant for authentication on custom server. Clients will be only trusted application and I do not even sure about browser client (thinking about only native mobile options). Even if I decide to have browser client I'll make sure it's going to have backend to store sencetive information</p>
",3778348,,-1,,2017-05-23 12:26:17,2017-03-29 17:42:17,Spring OAuth2: support auth and resource access with both SSO and custom auth server,<spring-boot><single-sign-on><spring-security-oauth2>,1,0,1,,
Spring,42102689,1,42382404,107,2/22/2017 3:53:37,339,,2/8/2017 0:44:24,,1,2727,"<p>i try to use spring session and i dowload this project from git 
<a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/spring-session"" rel=""nofollow noreferrer"">https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/spring-session</a></p>

<p>and i get this error 
APPLICATION FAILED TO START</p>

<hr>

<p>Description:</p>

<p>Parameter 0 of method sessionRedisTemplate in org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration required a bean of type 'org.springframework.data.redis.connection.RedisConnectionFactory' that could not be found.</p>

<p>Action:</p>

<p>Consider defining a bean of type 'org.springframework.data.redis.connection.RedisConnectionFactory' in your configuration.</p>
",6698148,,,,,2017-02-22 3:53:37,Consider defining a bean of type 'org.springframework.data.redis.connection.RedisConnectionFactory' in your configuration,<spring-security><spring-session><spring-data-redis>,1,0,,,
Spring,42420125,1,42434577,108,2/24/2017 9:03:57,17,,2/23/2017 15:38:52,,2,596,"<p>Could not obtain user details from token when trying <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/manual"" rel=""nofollow noreferrer"">Spring-Boot-OAuth2 manual</a> sample for Slack.com</p>

<p>Sample works perfectly for facebook, so I tried change for slack with below parameters:</p>

<p>application.yml</p>

<pre><code>slack:
  client:
    clientId: ID
    clientSecret: PASS
    accessTokenUri: https://slack.com/api/oauth.access
    userAuthorizationUri: https://slack.com/oauth/authorize
    scope: ""identity.basic,identity.email""
  resource:
    userInfoUri: https://slack.com/api/users.identity?token=
</code></pre>

<p>SocialApplication.class modified:</p>

<pre><code>private Filter ssoFilter() {
    OAuth2ClientAuthenticationProcessingFilter slackFilter = new OAuth2ClientAuthenticationProcessingFilter(
            ""/login/slack"");
    OAuth2RestTemplate slackTemplate = new OAuth2RestTemplate(slack(), oauth2ClientContext);
    slackFilter.setRestTemplate(slackTemplate);
    UserInfoTokenServices tokenServices = new UserInfoTokenServices(slackResource().getUserInfoUri(),
            slack().getClientId());
    tokenServices.setRestTemplate(slackTemplate);
    slackFilter.setTokenServices(
            new UserInfoTokenServices(slackResource().getUserInfoUri(), slack().getClientId()));
    return slackFilter;
}

@Bean
@ConfigurationProperties(""slack.client"")
public AuthorizationCodeResourceDetails slack() {
    return new AuthorizationCodeResourceDetails();;
}

@Bean
@ConfigurationProperties(""slack.resource"")
public ResourceServerProperties slackResource() {
    return new ResourceServerProperties();
}
</code></pre>

<p>Log:</p>

<pre><code>2017-02-23 16:21:17.480 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/css/**']
2017-02-23 16:21:17.480 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login/slack'; against '/css/**'
2017-02-23 16:21:17.480 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/js/**']
2017-02-23 16:21:17.480 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login/slack'; against '/js/**'
2017-02-23 16:21:17.480 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/images/**']
2017-02-23 16:21:17.481 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login/slack'; against '/images/**'
2017-02-23 16:21:17.481 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/webjars/**']
2017-02-23 16:21:17.481 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login/slack'; against '/webjars/**'
2017-02-23 16:21:17.481 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/**/favicon.ico']
2017-02-23 16:21:17.482 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login/slack'; against '/**/favicon.ico'
2017-02-23 16:21:17.482 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/error']
2017-02-23 16:21:17.482 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login/slack'; against '/error'
2017-02-23 16:21:17.483 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.web.util.matcher.OrRequestMatcher  : No matches found
2017-02-23 16:21:17.483 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request '/login/slack' matched by universal pattern '/**'
2017-02-23 16:21:17.483 DEBUG 3757 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /login/slack at position 1 of 12 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2017-02-23 16:21:17.484 DEBUG 3757 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /login/slack at position 2 of 12 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2017-02-23 16:21:17.484 DEBUG 3757 --- [nio-8080-exec-9] w.c.HttpSessionSecurityContextRepository : HttpSession returned null object for SPRING_SECURITY_CONTEXT
2017-02-23 16:21:17.484 DEBUG 3757 --- [nio-8080-exec-9] w.c.HttpSessionSecurityContextRepository : No SecurityContext was available from the HttpSession: org.apache.catalina.session.StandardSessionFacade@761167a. A new one will be created.
2017-02-23 16:21:17.484 DEBUG 3757 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /login/slack at position 3 of 12 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2017-02-23 16:21:17.485 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@a5843f5
2017-02-23 16:21:17.485 DEBUG 3757 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /login/slack at position 4 of 12 in additional filter chain; firing Filter: 'CsrfFilter'
2017-02-23 16:21:17.485 DEBUG 3757 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /login/slack at position 5 of 12 in additional filter chain; firing Filter: 'LogoutFilter'
2017-02-23 16:21:17.485 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'GET /login/slack' doesn't match 'POST /logout
2017-02-23 16:21:17.486 DEBUG 3757 --- [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : /login/slack at position 6 of 12 in additional filter chain; firing Filter: 'OAuth2ClientAuthenticationProcessingFilter'
2017-02-23 16:21:17.486 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/login/slack'; against '/login/slack'
2017-02-23 16:21:17.486 DEBUG 3757 --- [nio-8080-exec-9] uth2ClientAuthenticationProcessingFilter : Request is to process authentication
2017-02-23 16:21:17.543 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.oauth2.client.OAuth2RestTemplate   : Created GET request for ""https://slack.com/api/users.identity?token=""
2017-02-23 16:21:17.543 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.oauth2.client.OAuth2RestTemplate   : Setting request Accept header to [application/json, application/*+json]
2017-02-23 16:21:17.764 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.oauth2.client.OAuth2RestTemplate   : GET request for ""https://slack.com/api/users.identity?token="" resulted in 200 (OK)
2017-02-23 16:21:17.764 DEBUG 3757 --- [nio-8080-exec-9] o.s.s.oauth2.client.OAuth2RestTemplate   : Reading [interface java.util.Map] as ""application/json;charset=utf-8"" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@8914cc4]
2017-02-23 16:21:17.767 DEBUG 3757 --- [nio-8080-exec-9] uth2ClientAuthenticationProcessingFilter : Authentication request failed: org.springframework.security.authentication.BadCredentialsException: Could not obtain user details from token

org.springframework.security.authentication.BadCredentialsException: Could not obtain user details from token
    at org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter.attemptAuthentication(OAuth2ClientAuthenticationProcessingFilter.java:122) ~[spring-security-oauth2-2.0.12.RELEASE.jar!/:na]
    at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212) ~[spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177) [spring-security-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.springframework.security.oauth2.client.filter.OAuth2ClientContextFilter.doFilter(OAuth2ClientContextFilter.java:60) [spring-security-oauth2-2.0.12.RELEASE.jar!/:na]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106) [spring-boot-actuator-1.5.1.RELEASE.jar!/:1.5.1.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.6.RELEASE.jar!/:4.3.6.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_71]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_71]
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar!/:8.5.11]
    at java.lang.Thread.run(Thread.java:745) [na:1.7.0_71]
Caused by: org.springframework.security.oauth2.common.exceptions.InvalidTokenException: xoxp-9927885091-14802285653............
    at org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoTokenServices.loadAuthentication(UserInfoTokenServices.java:93) ~[spring-boot-autoconfigure-1.5.1.RELEASE.jar!/:1.5.1.RELEASE]
    at org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter.attemptAuthentication(OAuth2ClientAuthenticationProcessingFilter.java:112) ~[spring-security-oauth2-2.0.12.RELEASE.jar!/:na]
    ... 60 common frames omitted

2017-02-23 16:21:17.769 DEBUG 3757 --- [nio-8080-exec-9] uth2ClientAuthenticationProcessingFilter : Updated SecurityContextHolder to contain null Authentication
2017-02-23 16:21:17.769 DEBUG 3757 --- [nio-8080-exec-9] uth2ClientAuthenticationProcessingFilter : Delegating to authentication failure handler org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler@5ce08277
2017-02-23 16:21:17.769 DEBUG 3757 --- [nio-8080-exec-9] .a.SimpleUrlAuthenticationFailureHandler : No failure URL set, sending 401 Unauthorized error
2017-02-23 16:21:17.769 DEBUG 3757 --- [nio-8080-exec-9] w.c.HttpSessionSecurityContextRepository : SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
2017-02-23 16:21:17.769 DEBUG 3757 --- [nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
</code></pre>

<p>Appreciate any help</p>
",2609729,,2609729,,2017-02-23 16:09:19,2018-03-10 4:50:22,Spring Boot Oauth2 with slack,<spring-boot><oauth-2.0><slack>,1,0,,,
Spring,42721597,1,42764690,109,3/13/2017 13:19:40,70,,3/10/2017 15:08:14,,1,7037,"<p>As I followed this tutorial: <a href=""https://spring.io/guides/gs/handling-form-submission/"" rel=""nofollow noreferrer"">https://spring.io/guides/gs/handling-form-submission/</a> after a while I came to a dead end. I tried to figure out what the problem is for some hours now. I hope you can help me.</p>

<p>When I submit my form, I get this error-message:</p>

<pre><code> There was an unexpected error (type=Method Not Allowed, status=405).
 Request method 'POST' not supported
</code></pre>

<p>My App (App.java):</p>

<pre><code>package de.poc.logging.main;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
@SpringBootApplication
public class App {
  public static void main(String[] args) {
    SpringApplication.run(App.class, args);
  }
}
</code></pre>

<p>My Controller (InformationController.java):</p>

<pre><code>package de.poc.logging.main;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
@RequestMapping(value = ""/info"")
public class InformationController {
  @RequestMapping(method = RequestMethod.GET, produces = ""text/html"")
  public String infoForm(Model model) {
    model.addAttribute(""information"", new Information());
    return ""infoForm.html"";
  }

  @RequestMapping(method = RequestMethod.POST, produces = ""text/html"")
  public String infoSubmit(@ModelAttribute Information information) {
    return ""infoResult.html"";
  }
}
</code></pre>

<p>I created an additional class for security (WebSecurityConf.java):</p>

<pre><code>package de.poc.logging.main.config;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {
  @Override
  protected void configure(HttpSecurity http) throws Exception {
    http.headers()
        .frameOptions().sameOrigin()
        .httpStrictTransportSecurity().disable();
    http.csrf().disable();
  }
}
</code></pre>

<p>And I have following two HTML-Files:</p>

<p>infoForm.html:</p>

<pre><code>    &lt;!DOCTYPE HTML&gt;
    &lt;html xmlns:th=""http://www.thymeleaf.org""&gt;
    &lt;head&gt;
        &lt;title&gt;Getting Started: Handling Form Submission&lt;/title&gt;
        &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;h1&gt;Form&lt;/h1&gt;
    &lt;form action=""#"" th:action=""@{/info}"" th:object=""${information}"" method=""post""&gt;
        &lt;p&gt;Id: &lt;input type=""text"" th:field=""*{id}""/&gt;&lt;/p&gt;
        &lt;p&gt;Message: &lt;input type=""text"" th:field=""*{content}""/&gt;&lt;/p&gt;
        &lt;p&gt;&lt;input type=""submit"" value=""Submit""/&gt;
            &lt;input type=""reset"" value=""Reset""/&gt;&lt;/p&gt;
        &lt;!--&lt;input type=""hidden"" th:name=""${_csrf.parameterName}"" th:value=""${_csrf.token}""/&gt;--&gt;
    &lt;/form&gt;
    &lt;/body&gt;
    &lt;/html&gt;
</code></pre>

<p>infoResult.html:</p>

<pre><code>&lt;!DOCTYPE HTML&gt;
&lt;html xmlns:th=""http://www.thymeleaf.org""&gt;
&lt;head&gt;
    &lt;title&gt;Getting Started: Handling Form Submission&lt;/title&gt;
    &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Result&lt;/h1&gt;
&lt;p th:text=""'id: ' + ${information.id}""/&gt;
&lt;p th:text=""'content: ' + ${information.content}""/&gt;
&lt;a href=""/info""&gt;Submit another message&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Edit (additional information):
my Information.java:</p>

<pre><code>package de.poc.logging.main;

public class Information {
  private long id;
  private String content;

  public long getId() {
    return id;
  }

  public String getContent() {
    return content;
  }

  public void setId(long id) {
    this.id = id;
  }

  public void setContent(String content) {
    this.content = content;
  }

}
</code></pre>

<p>my pom-dependencies:</p>

<pre><code>    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;junit&lt;/groupId&gt;
            &lt;artifactId&gt;junit&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
            &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
            &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;
            &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
</code></pre>

<p>I'm using Java 1.8u121 (jdk).</p>

<p>Edit2:
I tried 3 different versions of spring boot now.
Also I downloaded the project from here: <a href=""https://github.com/spring-guides/gs-handling-form-submission"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-handling-form-submission</a> and added spring boot via pom.xml.
The downloaded project does not work for me.</p>

<p>I'm getting really frustrated.</p>
",7458242,,7458242,,2017-03-13 10:14:01,2017-03-13 13:19:40,Spring Boot - Request method 'POST' not supported (Method not allowed),<java><spring><spring-mvc><post>,3,2,,,
Spring,43150564,1,43150604,110,3/31/2017 22:31:56,0,,3/31/2017 22:27:24,,2,168,"<p>I was looking into some tutorial and stumbled on this code:</p>

<pre><code>public void run(String... args) throws Exception {
    eventBus.on($(""quotes""), receiver);
    publisher.publishQuotes(NUMBER_OF_QUOTES);
}
</code></pre>

<p>This is the first time I see <code>$(""quotes"")</code> in Java. I'd appreciate someone explaining to me what's going on there.</p>

<p>Here's the source:</p>

<p><a href=""https://github.com/spring-guides/deprecate-gs-messaging-reactor/blob/master/complete/src/main/java/hello/Application.java#L53"" rel=""nofollow noreferrer"">https://github.com/spring-guides/deprecate-gs-messaging-reactor/blob/master/complete/src/main/java/hello/Application.java#L53</a></p>

<p>Update:</p>

<p>This is not a question about $ as Java variable name. I know that it's a valid variable name. However, the format of $(""something"") looks JQuery-like; hence threw me off thinking that it's a special directive or something.</p>
",2471889,,2471889,,2017-04-02 21:59:55,2017-04-02 21:59:55,"What does $(""something"") mean in Java?",<java>,2,10,,,
Spring,36730903,1,43245998,111,4/6/2017 4:56:10,8429,,4/19/2016 22:57:06,,5,8564,"<p>How do I add the custom <code>UserDetailsService</code> below to <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""noreferrer"">this Spring OAuth2 sample</a>?  </p>

<p>The default <code>user</code> with default <code>password</code> is defined in the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/authserver/src/main/resources/application.properties"" rel=""noreferrer""><code>application.properties</code></a> file of the <code>authserver</code> app.  </p>

<p>However, I would like to add the following custom <code>UserDetailsService</code> to <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver/src/main/java/demo"" rel=""noreferrer"">the <code>demo</code> package of the <code>authserver</code> app</a> for testing purposes:  </p>

<pre><code>package demo;

import java.util.List;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.AuthorityUtils;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.provisioning.UserDetailsManager;
import org.springframework.stereotype.Service;

@Service
class Users implements UserDetailsManager {

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        String password;
        List&lt;GrantedAuthority&gt; auth = AuthorityUtils.commaSeparatedStringToAuthorityList(""ROLE_USER"");
        if (username.equals(""Samwise"")) {
            auth = AuthorityUtils.commaSeparatedStringToAuthorityList(""ROLE_HOBBIT"");
            password = ""TheShire"";
        }
        else if (username.equals(""Frodo"")){
            auth = AuthorityUtils.commaSeparatedStringToAuthorityList(""ROLE_HOBBIT"");
            password = ""MyRing"";
        }
        else{throw new UsernameNotFoundException(""Username was not found. "");}
        return new org.springframework.security.core.userdetails.User(username, password, auth);
    }

    @Override
    public void createUser(UserDetails user) {// TODO Auto-generated method stub
    }

    @Override
    public void updateUser(UserDetails user) {// TODO Auto-generated method stub
    }

    @Override
    public void deleteUser(String username) {// TODO Auto-generated method stub
    }

    @Override
    public void changePassword(String oldPassword, String newPassword) {
        // TODO Auto-generated method stub
    }

    @Override
    public boolean userExists(String username) {
        // TODO Auto-generated method stub
        return false;
    }
}
</code></pre>

<p>As you can see, this <code>UserDetailsService</code> is not <code>autowired</code> yet, and it purposely uses insecure passwords because it is only designed for testing purposes.  </p>

<p><strong>What specific changes need to be made to <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""noreferrer"">the GitHub sample app</a> so that a user can login as <code>username=Samwise</code> with <code>password=TheShire</code>, or as <code>username=Frodo</code> with <code>password=MyRing</code>?</strong>  Do changes need to be made to <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/authserver/src/main/java/demo/AuthserverApplication.java"" rel=""noreferrer""><code>AuthserverApplication.java</code></a> or elsewhere?</p>

<hr>

<p><strong>SUGGESTIONS:</strong>  </p>

<hr>

<p>The <a href=""http://projects.spring.io/spring-security-oauth/docs/oauth2.html#grant-types"" rel=""noreferrer"">Spring OAuth2 Developer Guide</a> says to use a <code>GlobalAuthenticationManagerConfigurer</code> to configure a <code>UserDetailsService</code> globally.  However, googling those names produces less than helpful results.  </p>

<p>Also, a different app that uses internal spring security INSTEAD OF OAuth uses the following syntax to hook up the <code>UserDetailsService</code>, but I am not sure how to adjust its syntax to the current OP:  </p>

<pre><code>@Order(Ordered.HIGHEST_PRECEDENCE)
@Configuration
protected static class AuthenticationSecurity extends GlobalAuthenticationConfigurerAdapter {

    @Autowired
    private Users users;

    @Override
    public void init(AuthenticationManagerBuilder auth) throws Exception {
        auth.userDetailsService(users);
    }
}
</code></pre>

<p>I tried using <code>@Autowire</code> inside the <code>OAuth2AuthorizationConfig</code> to connect <code>Users</code> to the <code>AuthorizationServerEndpointsConfigurer</code> as follows:  </p>

<pre><code>@Autowired//THIS IS A TEST
private Users users;//THIS IS A TEST

@Override
public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {
   endpoints.authenticationManager(authenticationManager)
        .accessTokenConverter(jwtAccessTokenConverter())
        .userDetailsService(users)//DetailsService)//THIS LINE IS A TEST
        ;
}
</code></pre>

<p>But the Spring Boot logs indicate that the user <code>Samwise</code> was not found, which means that the <code>UserDetailsService</code> was not successfully hooked up.  Here is the relevant excerpt from the Spring Boot logs:  </p>

<pre><code>2016-04-20 15:34:39.998 DEBUG 5535 --- [nio-9999-exec-9] o.s.s.a.dao.DaoAuthenticationProvider    :  
        User 'Samwise' not found
2016-04-20 15:34:39.998 DEBUG 5535 --- [nio-9999-exec-9]   
        w.a.UsernamePasswordAuthenticationFilter :  
        Authentication request failed:  
        org.springframework.security.authentication.BadCredentialsException:  
        Bad credentials
</code></pre>

<p><strong>What else can I try?</strong></p>
",807797,,807797,,2016-04-20 22:42:57,2018-08-23 20:13:41,Add custom UserDetailsService to Spring Security OAuth2 app,<spring><spring-security><spring-boot><spring-security-oauth2><spring-oauth2>,2,0,3,,
Spring,43374658,1,43678846,112,4/28/2017 11:12:59,379,,4/12/2017 16:12:06,,1,897,"<p>I am using <code>@EnableOauth2Sso</code> following an architecture similar as the one described in Spring's <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2-vanilla"" rel=""nofollow noreferrer"">oauth2 tutorial</a>: an auth server, a zuul proxy that enables the sso, a separated UI application etc.</p>

<pre><code>Auth server   ----  Resource Server (Zuul app) ---- Angular UI App
</code></pre>

<p>The problem is that when the UI logs out against the resource server it successfully deletes the resource server JSESSIONID, then the user is redirected to a home page. When the user wants to login again, he's redirected to the auth server but instead of asking for the user+password, it considers he's still logged. The auth server JSESSIONID is still there and wasn't affected by the previous Resource Server lougout.</p>

<p>How could I also logout from the auth server?</p>
",1729795,,,,,2017-04-28 11:12:59,Spring Oauth2 SSO - Unable to logout from the Auth server,<angularjs><spring><spring-security><oauth-2.0><spring-security-oauth2>,2,0,2,,
Spring,45136514,1,45287340,113,7/24/2017 18:13:25,180,,7/17/2017 5:26:22,,1,1970,"<p>I have <em>resource, authorization</em> and _ui applications written using Spring Boot 1.5.3, OAuth2 and MongoDB. </p>

<p>The resources are going to be accessed from mobile apps as well as a couple of web applications (one for regular users and the other one for admins). The apps are quite similar to the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js"" rel=""nofollow noreferrer"">samples</a> from the guides by Dave Syer. What different is that the users are stored in the database and the clients are stored in an xml file located in the resources folder of the authorization server.</p>

<p>I am struggling with the logon experience for the web users. Following the guides for the JWT based OAuth app, after the login page, the user is redirected to the authorization screen, which is not the desired behavior. I.e., <strong>I don't want my authorization server to ask if the user trusts my web application to access its resources</strong>. Instead, I want users redirected to the ui pages right after login, as one would expect.</p>

<p>I found <a href=""https://github.com/making/oauth2-sso-demo/tree/jwt"" rel=""nofollow noreferrer"">this project on GitHub</a> (very similar to the apps from the guide) which behaves exactly as I want, but once I start customizing it by adding my authentication and authorization implementation, it reverts back to using the authorization screen. Apparently, I am missing something, but I was not able to figure out what exactly.</p>

<p><strong>authorization/src/main/resourcs/application.yml</strong></p>

<pre><code>security:
  oauth2:
    client:
      client-id: trusted-app
      client-secret: secret
      scope: read, write
      auto-approve-scopes: .*
  authorization:
      check-token-access: permitAll()
server:
  port: 9999
  context-path: /uaa
mongo:
  db:
    name: myappname
</code></pre>

<p><strong>authorization/src/main/resourcs/client-details.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xmlns:oauth=""http://www.springframework.org/schema/security/oauth2""

   xsi:schemaLocation=""http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/security/oauth2
                    http://www.springframework.org/schema/security/spring-security-oauth2.xsd""&gt;

&lt;oauth:client-details-service id=""client-details-service""&gt;

    &lt;!-- Web Application clients --&gt;
    &lt;oauth:client
            client-id=""trusted-app""
            secret=""secret""
            authorized-grant-types=""authorization_code, password,refresh_token""
            authorities=""ROLE_WEB, ROLE_TRUSTED_CLIENT""
            access-token-validity=""${oauth.token.access.expiresInSeconds}""
            refresh-token-validity=""${oauth.token.refresh.expiresInSeconds}""/&gt;
    &lt;/oauth:client-details-service&gt;
&lt;/beans&gt;
</code></pre>

<p><strong>authorization/src/main/java/AuthorizationApplication.java</strong></p>

<pre><code>@SpringBootApplication
@RestController
public class AuthorizationApplication extends AuthorizationServerConfigurerAdapter {

    @RequestMapping(""/user"")
    @ResponseBody
    public Principal user(Principal user) {
        return user;
    }

    @Configuration
    static class MvcConfig extends WebMvcConfigurerAdapter {
        @Override
        public void addViewControllers(ViewControllerRegistry registry) {
            registry.addViewController(""login"").setViewName(""login"");
            registry.addViewController(""/"").setViewName(""index"");
        }
    }

    @Configuration
    @Order(-20)
    static class LoginConfig extends WebSecurityConfigurerAdapter {
        @Override
        protected void configure(HttpSecurity http) throws Exception {
            http
                .formLogin().loginPage(""/login"").permitAll()
            .and()
                .requestMatchers()
                .antMatchers(""/"", ""/login"", ""/oauth/authorize"", ""/oauth/confirm_access"")
            .and()
                .authorizeRequests()
                .anyRequest().authenticated();
        }
    }

    @Configuration
    @EnableAuthorizationServer
    @ImportResource({""classpath*:client-details.xml""})
    protected static class OAuth2AuthorizationConfig extends AuthorizationServerConfigurerAdapter {

        @Autowired
        private AuthenticationManager authenticationManager;

        @Resource(name=""client-details-service"")
        private ClientDetailsService clientDetailsService;

        @Override
        public void configure(ClientDetailsServiceConfigurer clients) throws Exception {
            clients.withClientDetails(clientDetailsService);
        }

        @Override
        public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {
            endpoints
                .authenticationManager(authenticationManager)
                .accessTokenConverter(jwtAccessTokenConverter());
        }

        @Bean
        public JwtAccessTokenConverter jwtAccessTokenConverter() {
            JwtAccessTokenConverter converter = new JwtAccessTokenConverter();
            return converter;
        }
    }

    @Bean
    PasswordEncoder passwordEncoder(){
        return new StandardPasswordEncoder();
    }

    public static void main(String[] args) {
        SpringApplication.run(AuthorizationApplication.class, args);
    }

}
</code></pre>

<p><strong>authorization/src/main/java/mypackage/UserService.java</strong></p>

<pre><code>@Service
public class UserService implements UserDetailsService {

    private UserAccountRepository userAccountRepository;

    @Autowired
    public UserService(UserAccountRepository userAccountRepository){
        this.userAccountRepository = userAccountRepository;
    }

    @Override
    public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException {

        UserAccount userAccount = userAccountRepository.findByEmail(s);

        if (userAccount != null) {
            return userAccount;
        } else {
            throw new UsernameNotFoundException(""could not find the user '"" + s + ""'"");
        }
   }
}
</code></pre>

<p><strong>ui/src/main/resources/application.yml</strong></p>

<pre><code>auth-server: http://localhost:9999/uaa
server:
  port: 8080
spring:
  aop:
    proxy-target-class: true
security:
  oauth2:
    client:
      clientId: trusted-app
      clientSecret: secret
      access-token-uri: ${auth-server}/oauth/token
      user-authorization-uri: ${auth-server}/oauth/authorize
      scope: read, write
    resource:
      token-info-uri: ${auth-server}/oauth/check_token
</code></pre>

<p><strong>ui/src/main/java/UiApplication.java</strong></p>

<pre><code>@SpringBootApplication
@EnableOAuth2Sso
public class UiApplication extends WebSecurityConfigurerAdapter{

    public static void main(String[] args) {
        SpringApplication.run(UiApplication.class, args);
    }

    @Bean
    OAuth2RestTemplate oauth2RestTemplate(OAuth2ClientContext oauth2ClientContext, OAuth2ProtectedResourceDetails details) {
        return new OAuth2RestTemplate(details, oauth2ClientContext);
    }
}
</code></pre>
",2888242,,,,,2017-07-24 18:13:25,OAuth2 SSO with Spring Boot without the authorization screen,<java><spring><spring-boot><jwt><spring-security-oauth2>,1,0,,,
Spring,27987068,1,45322933,114,7/26/2017 9:32:09,22122,,1/16/2015 15:16:15,,11,6800,"<p>I've modified the Spring Boot JPA Data example (<a href=""https://github.com/spring-guides/gs-accessing-data-jpa.git"">https://github.com/spring-guides/gs-accessing-data-jpa.git</a>) slightly adding an Order entity and a corresponding one to many mapping to it from the customer.  When I run the example there are several Syntax Error in SQL Statement lines logged by Hibernate.  I'm trying to figure out why?  I've pasted the code for the entities and the console output from the application below.</p>

<pre><code>package hello;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;

@Entity
public class Customer {

@Id
@GeneratedValue(strategy=GenerationType.AUTO)
private long id;
private String firstName;
private String lastName;
@OneToMany(mappedBy=""customer"")
private List&lt;Order&gt; orders;


protected Customer() {}

public Customer(String firstName, String lastName) {
    this.firstName = firstName;
    this.lastName = lastName;
}

@Override
public String toString() {
    return String.format(
            ""Customer[id=%d, firstName='%s', lastName='%s']"",
            id, firstName, lastName);
}

}
</code></pre>

<p>And a corresponding Order entity:</p>

<pre><code>package hello;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;

@Entity
public class Order {

@Id
@GeneratedValue(strategy=GenerationType.AUTO)
private long id;

protected Order() {}

double amount;

@ManyToOne
Customer customer;
}
</code></pre>

<p>And the console output:</p>

<pre><code>    .   ____          _            __ _ _
     /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
    ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
     \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
      '  |____| .__|_| |_|_| |_\__, | / / / /
     =========|_|==============|___/=/_/_/_/
     :: Spring Boot ::       (v1.1.10.RELEASE)

    2015-01-16 08:56:53.116  INFO 27810 --- [           main] hello.Application                        : Starting Application on MKI with PID 27810 (/home/ole/Documents/workspace-sts-3.6.3.RELEASE/gs-accessing-data-jpa-complete/target/classes started by ole in /home/ole/Documents/workspace-sts-3.6.3.RELEASE/gs-accessing-data-jpa-complete)
    2015-01-16 08:56:53.149  INFO 27810 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d59e6f1: startup date [Fri Jan 16 08:56:53 CST 2015]; root of context hierarchy
    2015-01-16 08:56:54.253  INFO 27810 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
    2015-01-16 08:56:54.269  INFO 27810 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
      name: default
      ...]
    2015-01-16 08:56:54.320  INFO 27810 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {4.3.7.Final}
    2015-01-16 08:56:54.322  INFO 27810 --- [           main] org.hibernate.cfg.Environment            : HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.charSet=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.show_sql=true, hibernate.export.schema.delimiter=;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy}
    2015-01-16 08:56:54.322  INFO 27810 --- [           main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
    2015-01-16 08:56:54.462  INFO 27810 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
    2015-01-16 08:56:54.499  INFO 27810 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
    2015-01-16 08:56:54.591  INFO 27810 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
    2015-01-16 08:56:54.751  INFO 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000227: Running hbm2ddl schema export
    Hibernate: alter table order drop constraint FK_m6q2ofkj1g5aobtb2p00ajpqg if exists
    2015-01-16 08:56:54.752 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: alter table order drop constraint FK_m6q2ofkj1g5aobtb2p00ajpqg if exists
    2015-01-16 08:56:54.753 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : Syntax error in SQL statement ""ALTER TABLE ORDER[*] DROP CONSTRAINT FK_M6Q2OFKJ1G5AOBTB2P00AJPQG IF EXISTS ""; expected ""identifier""; SQL statement:
    alter table order drop constraint FK_m6q2ofkj1g5aobtb2p00ajpqg if exists [42001-176]
    Hibernate: drop table customer if exists
    Hibernate: drop table order if exists
    2015-01-16 08:56:54.753 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: drop table order if exists
    2015-01-16 08:56:54.753 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : Syntax error in SQL statement ""DROP TABLE ORDER[*] IF EXISTS ""; expected ""identifier""; SQL statement:
    drop table order if exists [42001-176]
    Hibernate: create table customer (id bigint generated by default as identity, first_name varchar(255), last_name varchar(255), primary key (id))
    Hibernate: create table order (id bigint generated by default as identity, amount double not null, customer_id bigint, primary key (id))
    2015-01-16 08:56:54.756 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: create table order (id bigint generated by default as identity, amount double not null, customer_id bigint, primary key (id))
    2015-01-16 08:56:54.756 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : Syntax error in SQL statement ""CREATE TABLE ORDER[*] (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, AMOUNT DOUBLE NOT NULL, CUSTOMER_ID BIGINT, PRIMARY KEY (ID)) ""; expected ""identifier""; SQL statement:
    create table order (id bigint generated by default as identity, amount double not null, customer_id bigint, primary key (id)) [42001-176]
    Hibernate: alter table order add constraint FK_m6q2ofkj1g5aobtb2p00ajpqg foreign key (customer_id) references customer
    2015-01-16 08:56:54.757 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: alter table order add constraint FK_m6q2ofkj1g5aobtb2p00ajpqg foreign key (customer_id) references customer
    2015-01-16 08:56:54.757 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : Syntax error in SQL statement ""ALTER TABLE ORDER[*] ADD CONSTRAINT FK_M6Q2OFKJ1G5AOBTB2P00AJPQG FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER ""; expected ""identifier""; SQL statement:
    alter table order add constraint FK_m6q2ofkj1g5aobtb2p00ajpqg foreign key (customer_id) references customer [42001-176]
    2015-01-16 08:56:54.757  INFO 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000230: Schema export complete
    2015-01-16 08:56:55.085  INFO 27810 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
    2015-01-16 08:56:55.102  INFO 27810 --- [           main] hello.Application                        : Started Application in 2.286 seconds (JVM running for 2.604)
    Hibernate: insert into customer (id, first_name, last_name) values (null, ?, ?)
    Hibernate: insert into customer (id, first_name, last_name) values (null, ?, ?)
    Hibernate: insert into customer (id, first_name, last_name) values (null, ?, ?)
    Hibernate: insert into customer (id, first_name, last_name) values (null, ?, ?)
    Hibernate: insert into customer (id, first_name, last_name) values (null, ?, ?)
    Hibernate: select customer0_.id as id1_0_, customer0_.first_name as first_na2_0_, customer0_.last_name as last_nam3_0_ from customer customer0_
    Customers found with findAll():
    -------------------------------
    Customer[id=1, firstName='Jack', lastName='Bauer']
    Customer[id=2, firstName='Chloe', lastName='O'Brian']
    Customer[id=3, firstName='Kim', lastName='Bauer']
    Customer[id=4, firstName='David', lastName='Palmer']
    Customer[id=5, firstName='Michelle', lastName='Dessler']

    Hibernate: select customer0_.id as id1_0_0_, customer0_.first_name as first_na2_0_0_, customer0_.last_name as last_nam3_0_0_ from customer customer0_ where customer0_.id=?
    Customer found with findOne(1L):
    --------------------------------
    Customer[id=1, firstName='Jack', lastName='Bauer']

    Hibernate: select customer0_.id as id1_0_, customer0_.first_name as first_na2_0_, customer0_.last_name as last_nam3_0_ from customer customer0_ where customer0_.last_name=?
    Customer found with findByLastName('Bauer'):
    --------------------------------------------
    Customer[id=1, firstName='Jack', lastName='Bauer']
    Customer[id=3, firstName='Kim', lastName='Bauer']
    Hibernate: select customer0_.id as id1_0_, customer0_.first_name as first_na2_0_, customer0_.last_name as last_nam3_0_ from customer customer0_
    Hibernate: delete from customer where id=?
    Hibernate: delete from customer where id=?
    Hibernate: delete from customer where id=?
    Hibernate: delete from customer where id=?
    Hibernate: delete from customer where id=?
    2015-01-16 08:56:55.258  INFO 27810 --- [           main] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d59e6f1: startup date [Fri Jan 16 08:56:53 CST 2015]; root of context hierarchy
    2015-01-16 08:56:55.259  INFO 27810 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
    2015-01-16 08:56:55.260  INFO 27810 --- [           main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
    2015-01-16 08:56:55.261  INFO 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000227: Running hbm2ddl schema export
    Hibernate: alter table order drop constraint FK_m6q2ofkj1g5aobtb2p00ajpqg if exists
    2015-01-16 08:56:55.261 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: alter table order drop constraint FK_m6q2ofkj1g5aobtb2p00ajpqg if exists
    2015-01-16 08:56:55.261 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : Syntax error in SQL statement ""ALTER TABLE ORDER[*] DROP CONSTRAINT FK_M6Q2OFKJ1G5AOBTB2P00AJPQG IF EXISTS ""; expected ""identifier""; SQL statement:
    alter table order drop constraint FK_m6q2ofkj1g5aobtb2p00ajpqg if exists [42001-176]
    Hibernate: drop table customer if exists
    Hibernate: drop table order if exists
    2015-01-16 08:56:55.263 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: drop table order if exists
    2015-01-16 08:56:55.263 ERROR 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : Syntax error in SQL statement ""DROP TABLE ORDER[*] IF EXISTS ""; expected ""identifier""; SQL statement:
    drop table order if exists [42001-176]
    2015-01-16 08:56:55.263  INFO 27810 --- [           main] org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000230: Schema export complete
</code></pre>

<p>Thoughts?  </p>

<p>TIA,
- Ole</p>
",1684269,,,,,2018-07-13 13:10:55,Spring Boot Hibernate Syntax Error in SQL Statement,<spring><hibernate><jpa><spring-boot><spring-data-jpa>,2,2,,,
Spring,45993586,1,45993917,115,9/1/2017 5:42:21,0,,9/1/2017 5:06:43,,2,300,"<p>I'm going through <a href=""https://github.com/spring-guides/gs-service-registration-and-discovery"" rel=""nofollow noreferrer"">this tutorial</a> and I don't see any configuration for the location / url of the eureka server (Only the <code>src/main/resources/bootstrap.properties</code> containing the name of the eureka client), so how does this client know where the Eureka server is? </p>
",1684269,,,,,2017-09-01 5:42:21,How does the eureka client find the eureka server in spring boot 1.5.2?,<spring><spring-boot><spring-cloud><spring-cloud-netflix>,1,0,,,
Spring,46162061,1,46162617,116,9/11/2017 18:56:11,0,,9/11/2017 18:20:41,,3,433,"<p>Recently I have been following this guide on how to persist data in a in-memory H2 database using Spring Boot:</p>

<ul>
<li>Guide: <a href=""https://spring.io/guides/gs/accessing-data-jpa/"" rel=""nofollow noreferrer"">https://spring.io/guides/gs/accessing-data-jpa/</a></li>
<li>Source code: <a href=""https://github.com/spring-guides/gs-accessing-data-jpa/"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-accessing-data-jpa/</a></li>
</ul>

<p>In it, one first defines a <code>CustomerEntity</code> class and then a <code>CustomerRepository</code> interface. Then, in the main class, a lot of annotation magic is being done, which enables one to simple ""have"" a <code>CustomerRepository</code> instance, which can be used to persist data to the database, retrieve it, etc.</p>

<p>This is all fine, however, I need to use such a <code>CustomerRepository</code> instance outside of the main class, inside another class. Since the tutorial does not reveal the magic that was done to make it available in the main class, I do not know how to make it happen in the class that I need it in.</p>

<p>I have been trying to figure this out almost all day long, but I just get lost inside a jungle of articles all trying to explain which Spring annotation does what, and I am really exhausted now.</p>

<p>I want to do something like this:</p>

<pre><code>public class Foo {

  private CustomerRepository repo;

  // ...

  public void storeCustomer(String firstName, String lastName) {
    this.repository.save(new Customer(firstName, lastName));
  }

}
</code></pre>

<p>I would be very happy about some hints.</p>
",8593724,,,user8558216,2017-09-12 7:18:41,2017-09-12 7:18:41,How to get a CrudRepository instance?,<java><spring><spring-boot><spring-data-jpa><h2>,2,6,,,
Spring,46174992,1,46229614,117,9/14/2017 23:31:39,60,,9/12/2017 11:16:04,,8,628,"<p>I have extended spring security oauth example <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/auth-server"" rel=""noreferrer"">social-auth-server</a>, linkedIn was added as third authentication option.
This project is described in tutorial <a href=""https://spring.io/guides/tutorials/spring-boot-oauth2/#_social_login_authserver"" rel=""noreferrer"">Hosting an Authorization Server</a>. </p>

<p>Source code: <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/auth-server"" rel=""noreferrer"">https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/auth-server</a></p>

<p>How to configure this client to add client_id?</p>

<p>LinkedIn properties:</p>

<pre><code>linkedin:
  client:
    clientId: XXX
    clientSecret: YYY
    accessTokenUri: https://www.linkedin.com/oauth/v2/accessToken
    userAuthorizationUri: https://www.linkedin.com/oauth/v2/authorization
  resource:
    userInfoUri: https://api.linkedin.com/v1/people/~?format=json
</code></pre>

<p>Logs:</p>

<pre><code>uth2ClientAuthenticationProcessingFilter : Request is to process authentication
 g.c.AuthorizationCodeAccessTokenProvider : Retrieving token from https://www.linkedin.com/oauth/v2/accessToken
 g.c.AuthorizationCodeAccessTokenProvider : Encoding and sending form: {grant_type=[authorization_code], code=[XXXXXXXXXXXXXXXXXXXX], redirect_uri=[http://localhost:8080/login/linkedin]}
 uth2ClientAuthenticationProcessingFilter : Authentication request failed: org.springframework.security.authentication.BadCredentialsException: Could not obtain access token
</code></pre>

<p>Exception:</p>

<pre><code>org.springframework.security.authentication.BadCredentialsException: Could not obtain access token
    at org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter.attemptAuthentication(OAuth2ClientAuthenticationProcessingFilter.java:107) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212) ~[spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:112) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:73) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177) [spring-security-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.springframework.security.oauth2.client.filter.OAuth2ClientContextFilter.doFilter(OAuth2ClientContextFilter.java:60) [spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106) [spring-boot-actuator-1.5.2.RELEASE.jar:1.5.2.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_144]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_144]
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.11.jar:8.5.11]
    at java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]
Caused by: org.springframework.security.oauth2.client.resource.OAuth2AccessDeniedException: Access token denied.
    at org.springframework.security.oauth2.client.token.OAuth2AccessTokenSupport.retrieveToken(OAuth2AccessTokenSupport.java:142) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeAccessTokenProvider.obtainAccessToken(AuthorizationCodeAccessTokenProvider.java:209) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.oauth2.client.token.AccessTokenProviderChain.obtainNewAccessTokenInternal(AccessTokenProviderChain.java:148) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.oauth2.client.token.AccessTokenProviderChain.obtainAccessToken(AccessTokenProviderChain.java:121) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.oauth2.client.OAuth2RestTemplate.acquireAccessToken(OAuth2RestTemplate.java:221) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.oauth2.client.OAuth2RestTemplate.getAccessToken(OAuth2RestTemplate.java:173) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter.attemptAuthentication(OAuth2ClientAuthenticationProcessingFilter.java:105) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    ... 62 common frames omitted
Caused by: org.springframework.security.oauth2.common.exceptions.InvalidRequestException: A required parameter ""client_id"" is missing
    at org.springframework.security.oauth2.common.exceptions.OAuth2ExceptionJackson2Deserializer.deserialize(OAuth2ExceptionJackson2Deserializer.java:100) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.security.oauth2.common.exceptions.OAuth2ExceptionJackson2Deserializer.deserialize(OAuth2ExceptionJackson2Deserializer.java:33) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798) ~[jackson-databind-2.8.7.jar:2.8.7]
    at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2922) ~[jackson-databind-2.8.7.jar:2.8.7]
    at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:237) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readInternal(AbstractJackson2HttpMessageConverter.java:217) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.http.converter.AbstractHttpMessageConverter.read(AbstractHttpMessageConverter.java:193) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.security.oauth2.client.token.OAuth2AccessTokenSupport$AccessTokenErrorHandler.handleError(OAuth2AccessTokenSupport.java:235) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:700) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:653) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621) ~[spring-web-4.3.7.RELEASE.jar:4.3.7.RELEASE]
    at org.springframework.security.oauth2.client.token.OAuth2AccessTokenSupport.retrieveToken(OAuth2AccessTokenSupport.java:137) ~[spring-security-oauth2-2.0.13.RELEASE.jar:na]
    ... 68 common frames omitted
</code></pre>
",516167,,516167,,2017-09-13 10:04:49,2018-07-04 17:10:02,Missing client_id when accessing token with linkedIn,<spring><spring-security><oauth><spring-oauth2>,2,0,,,
Spring,46732371,1,46732904,118,10/13/2017 15:06:00,0,,10/13/2017 14:36:02,,1,198,"<p>does anybody know why the Spring Boot Guide includes two different types of integration tests? (<a href=""https://github.com/spring-guides/gs-spring-boot#add-unit-tests"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-spring-boot#add-unit-tests</a>)</p>

<p>One with TestRestTemplate and one with MockMvc dependency? In each test type spring boot bootstraps the test environment. So what is the reason for this separation?</p>
",6271380,,6271380,,2017-10-18 20:04:57,2018-05-29 15:09:44,Why are there different types of integration tests in Spring Boot,<spring><testing><spring-boot><resttemplate><spring-test>,1,0,1,,
Spring,43458500,1,48949537,119,2/23/2018 14:00:07,7482,,4/17/2017 19:46:11,,10,3373,"<p>I'm studying the Spring Boot and JMS example and yes, I'm rather new on this</p>

<p>Since we work with Oracle, I would like to migrate the Spring Boot &amp; JMS example from ActiveMQ to Oracle Advanced Queueing. However I really find very little information on that.</p>

<p>As far as I see I need to replace the code below for the Oracle version, yet I did not manage to found out how.</p>

<pre><code>@Bean
public JmsListenerContainerFactory&lt;?&gt; myFactory(ConnectionFactory connectionFactory,
                                                DefaultJmsListenerContainerFactoryConfigurer configurer) {
    DefaultJmsListenerContainerFactory factory = new DefaultJmsListenerContainerFactory();
    // This provides all boot's default to this factory, including the message converter
    configurer.configure(factory, connectionFactory);
    // You could still override some of Boot's default if necessary.
    return factory;
</code></pre>

<p>}</p>

<p>The origin code can be found at <a href=""https://github.com/spring-guides/gs-messaging-jms"" rel=""noreferrer"">Github</a></p>

<p>Help would be greatly appreciated!</p>
",2529104,,,,,2018-11-04 11:15:35,How to migrate Spring Boot JMS from ActiveMQ to Oracle Advanced Queueing,<java><oracle><spring-boot><spring-jms><advanced-queuing>,2,4,4,,
Spring,48772458,1,49214701,120,3/10/2018 22:35:10,605,,2/13/2018 17:30:55,,4,593,"<p>So here's a new one, for me… I'm working with one of the Spring Boot guides, and getting the</p>

<pre><code>Error: Could not find or load main class org.apache.maven.wrapper.MavenWrapperMain
</code></pre>

<p>error when running</p>

<pre><code>./mvnw spring-boot:run
</code></pre>

<p>(or any Maven Wrapper command)</p>

<p>That said, I see the <code>wrapper</code> jar within <code>.mvn</code> where I would expect it to be. </p>

<p>Has anyone else hit this? It seems like it must be a system-level issue because I've had no issue with this in the past.</p>

<p>Here is the repo I am running this command on: <a href=""https://github.com/spring-guides/gs-scheduling-tasks.git"" rel=""noreferrer"">https://github.com/spring-guides/gs-scheduling-tasks.git</a></p>
",2355712,,,,,2018-03-16 19:39:49,"could not find MavenWrapperMain class, but is contained within .m2 in the directory",<java><maven>,4,7,2,,
Spring,49942640,1,50349078,61,5/15/2018 11:29:42,598,,4/20/2018 13:20:46,,29,2165,"<p>According the tutorial <a href=""https://spring.io/guides/tutorials/spring-boot-oauth2/#_social_login_authserver"" rel=""noreferrer"">Spring Boot and OAuth2</a></p>

<p>I have following project structure:</p>

<p><a href=""https://i.stack.imgur.com/O0A5t.jpg"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/O0A5t.jpg"" alt=""enter image description here""></a></p>

<p>And following source code:</p>

<p><strong>SocialApplication.class:</strong>  </p>

<pre><code>@SpringBootApplication
@RestController
@EnableOAuth2Client
@EnableAuthorizationServer
@Order(200)
public class SocialApplication extends WebSecurityConfigurerAdapter {

    @Autowired
    OAuth2ClientContext oauth2ClientContext;

    @RequestMapping({ ""/user"", ""/me"" })
    public Map&lt;String, String&gt; user(Principal principal) {
        Map&lt;String, String&gt; map = new LinkedHashMap&lt;&gt;();
        map.put(""name"", principal.getName());
        return map;
    }

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        // @formatter:off
        http.antMatcher(""/**"").authorizeRequests().antMatchers(""/"", ""/login**"", ""/webjars/**"").permitAll().anyRequest()
                .authenticated().and().exceptionHandling()
                .authenticationEntryPoint(new LoginUrlAuthenticationEntryPoint(""/"")).and().logout()
                .logoutSuccessUrl(""/"").permitAll().and().csrf()
                .csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse()).and()
                .addFilterBefore(ssoFilter(), BasicAuthenticationFilter.class);
        // @formatter:on
    }

    @Configuration
    @EnableResourceServer
    protected static class ResourceServerConfiguration extends ResourceServerConfigurerAdapter {
        @Override
        public void configure(HttpSecurity http) throws Exception {
            // @formatter:off
            http.antMatcher(""/me"").authorizeRequests().anyRequest().authenticated();
            // @formatter:on
        }
    }

    public static void main(String[] args) {
        SpringApplication.run(SocialApplication.class, args);
    }

    @Bean
    public FilterRegistrationBean&lt;OAuth2ClientContextFilter&gt; oauth2ClientFilterRegistration(OAuth2ClientContextFilter filter) {
        FilterRegistrationBean&lt;OAuth2ClientContextFilter&gt; registration = new FilterRegistrationBean&lt;OAuth2ClientContextFilter&gt;();
        registration.setFilter(filter);
        registration.setOrder(-100);
        return registration;
    }

    @Bean
    @ConfigurationProperties(""github"")
    public ClientResources github() {
        return new ClientResources();
    }

    @Bean
    @ConfigurationProperties(""facebook"")
    public ClientResources facebook() {
        return new ClientResources();
    }

    private Filter ssoFilter() {
        CompositeFilter filter = new CompositeFilter();
        List&lt;Filter&gt; filters = new ArrayList&lt;&gt;();
        filters.add(ssoFilter(facebook(), ""/login/facebook""));
        filters.add(ssoFilter(github(), ""/login/github""));
        filter.setFilters(filters);
        return filter;
    }

    private Filter ssoFilter(ClientResources client, String path) {
        OAuth2ClientAuthenticationProcessingFilter filter = new OAuth2ClientAuthenticationProcessingFilter(
                path);
        OAuth2RestTemplate template = new OAuth2RestTemplate(client.getClient(), oauth2ClientContext);
        filter.setRestTemplate(template);
        UserInfoTokenServices tokenServices = new UserInfoTokenServices(
                client.getResource().getUserInfoUri(),
                client.getClient().getClientId());
        tokenServices.setRestTemplate(template);
        filter.setTokenServices(new UserInfoTokenServices(
                client.getResource().getUserInfoUri(),
                client.getClient().getClientId()));
        return filter;
    }

}

class ClientResources {

    @NestedConfigurationProperty
    private AuthorizationCodeResourceDetails client = new AuthorizationCodeResourceDetails();

    @NestedConfigurationProperty
    private ResourceServerProperties resource = new ResourceServerProperties();

    public AuthorizationCodeResourceDetails getClient() {
        return client;
    }

    public ResourceServerProperties getResource() {
        return resource;
    }
}
</code></pre>

<p><strong>index.html:</strong></p>

<pre><code>&lt;!doctype html&gt;
&lt;html lang=""en""&gt;
&lt;head&gt;
    &lt;meta charset=""utf-8""/&gt;
    &lt;meta http-equiv=""X-UA-Compatible"" content=""IE=edge""/&gt;
    &lt;title&gt;Demo&lt;/title&gt;
    &lt;meta name=""description"" content=""""/&gt;
    &lt;meta name=""viewport"" content=""width=device-width""/&gt;
    &lt;base href=""/""/&gt;
    &lt;link rel=""stylesheet"" type=""text/css""
          href=""/webjars/bootstrap/css/bootstrap.min.css""/&gt;
    &lt;script type=""text/javascript"" src=""/webjars/jquery/jquery.min.js""&gt;&lt;/script&gt;
    &lt;script type=""text/javascript""
            src=""/webjars/bootstrap/js/bootstrap.min.js""&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Login&lt;/h1&gt;
&lt;div class=""container unauthenticated""&gt;
    With Facebook: &lt;a href=""/login/facebook""&gt;click here&lt;/a&gt;
&lt;/div&gt;
&lt;div class=""container authenticated"" style=""display: none""&gt;
    Logged in as: &lt;span id=""user""&gt;&lt;/span&gt;
    &lt;div&gt;
        &lt;button onClick=""logout()"" class=""btn btn-primary""&gt;Logout&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;script type=""text/javascript""
        src=""/webjars/js-cookie/js.cookie.js""&gt;&lt;/script&gt;
&lt;script type=""text/javascript""&gt;
    $.ajaxSetup({
        beforeSend: function (xhr, settings) {
            if (settings.type == 'POST' || settings.type == 'PUT'
                || settings.type == 'DELETE') {
                if (!(/^http:.*/.test(settings.url) || /^https:.*/
                        .test(settings.url))) {
                    // Only send the token to relative URLs i.e. locally.
                    xhr.setRequestHeader(""X-XSRF-TOKEN"",
                        Cookies.get('XSRF-TOKEN'));
                }
            }
        }
    });
    $.get(""/user"", function (data) {
        $(""#user"").html(data.userAuthentication.details.name);
        $("".unauthenticated"").hide();
        $("".authenticated"").show();
    });
    var logout = function () {
        $.post(""/logout"", function () {
            $(""#user"").html('');
            $("".unauthenticated"").show();
            $("".authenticated"").hide();
        });
        return true;
    }
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><strong>application.yml:</strong></p>

<pre><code>server:
  port: 8080
security:
  oauth2:
    client:
      client-id: acme
      client-secret: acmesecret
      scope: read,write
      auto-approve-scopes: '.*'

facebook:
  client:
    clientId: 233668646673605
    clientSecret: 33b17e044ee6a4fa383f46ec6e28ea1d
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://graph.facebook.com/me
github:
  client:
    clientId: bd1c0a783ccdd1c9b9e4
    clientSecret: 1a9030fbca47a5b2c28e92f19050bb77824b5ad1
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://api.github.com/user

logging:
  level:
    org.springframework.security: DEBUG
</code></pre>

<p>But when I open browser and try to hit <code>http://localhost:8080</code></p>

<p>In browser console I see:</p>

<pre><code>(index):44 Uncaught TypeError: Cannot read property 'details' of undefined
    at Object.success ((index):44)
    at j (jquery.js:3073)
    at Object.fireWith [as resolveWith] (jquery.js:3185)
    at x (jquery.js:8251)
    at XMLHttpRequest.&lt;anonymous&gt; (jquery.js:8598)
</code></pre>

<p>in code:</p>

<pre><code>$.get(""/user"", function (data) {
        $(""#user"").html(data.userAuthentication.details.name);
        $("".unauthenticated"").hide();
        $("".authenticated"").show();
    });
</code></pre>

<p>It happens because <code>/user</code> response with 302 status code and js callback try to parse result of <code>localhost:8080</code>:</p>

<p><a href=""https://i.stack.imgur.com/LFbfu.jpg"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/LFbfu.jpg"" alt=""enter image description here""></a></p>

<p>I don't understand why this redirect happens. Can you explain this behavior and help to fix it?</p>

<h2>UPDATE</h2>

<p>I took this code from <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2"" rel=""noreferrer"">https://github.com/spring-guides/tut-spring-boot-oauth2</a></p>

<h2>important:</h2>

<p>It reproduces <strong>only after I start client application.</strong></p>

<h2>P.S.</h2>

<p><strong>How to reproduce:</strong></p>

<blockquote>
  <p>To test the new features you can just run both apps and visit
  localhost:9999/client in your browser. The client app will redirect to
  the local Authorization Server, which then gives the user the usual
  choice of authentication with Facebook or Github. Once that is
  complete control returns to the test client, the local access token is
  granted and authentication is complete (you should see a ""Hello""
  message in your browser). If you are already authenticated with Github
  or Facebook you may not even notice the remote authentication</p>
</blockquote>

<h2>ANSWER:</h2>

<p><a href=""https://stackoverflow.com/a/50349078/2674303"">https://stackoverflow.com/a/50349078/2674303</a></p>
",2674303,,2674303,,2018-12-10 12:06:44,2018-12-10 12:06:44,Official Spring security oauth2 example doesn't work because of cookies clashing(authorization code mechanism),<java><spring-security><oauth-2.0><spring-oauth2>,3,5,2,,
Spring,51738718,1,51741293,121,8/8/2018 7:50:17,3,,8/8/2018 4:39:09,,2,598,"<p>I checkout this project from spring:
<a href=""https://github.com/spring-guides/gs-batch-processing"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-batch-processing</a></p>

<p>Source: <a href=""https://spring.io/guides/gs/batch-processing/"" rel=""nofollow noreferrer"">https://spring.io/guides/gs/batch-processing/</a></p>

<p>I replace the ',' with 'tab' in 'sample-data.csv:</p>

<pre><code>Jill    Doe
Joe Doe
Justin  Doe
Jane    Doe
John    Doe
</code></pre>

<p>Then I add the new Delimiter to the reader:</p>

<pre><code>@Bean
public FlatFileItemReader&lt;Person&gt; reader() {
    return new FlatFileItemReaderBuilder&lt;Person&gt;()
        .name(""personItemReader"")
        .resource(new ClassPathResource(""sample-data.csv""))
        .delimited()
        .delimiter(DelimitedLineTokenizer.DELIMITER_TAB) // NEW DELIMITER
        .names(new String[]{""firstName"", ""lastName""})
        .fieldSetMapper(new BeanWrapperFieldSetMapper&lt;Person&gt;() {{
            setTargetType(Person.class);
        }})
        .build();
}
</code></pre>

<p>When I launch I get this error: </p>

<pre><code>Caused by: org.springframework.batch.item.file.transform.IncorrectTokenCountException: Incorrect number of tokens found in record: expected 2 actual 1
    at org.springframework.batch.item.file.transform.AbstractLineTokenizer.tokenize(AbstractLineTokenizer.java:142) ~[spring-batch-infrastructure-4.0.1.RELEASE.jar:4.0.1.RELEASE]
    at org.springframework.batch.item.file.mapping.DefaultLineMapper.mapLine(DefaultLineMapper.java:43) ~[spring-batch-infrastructure-4.0.1.RELEASE.jar:4.0.1.RELEASE]
    at org.springframework.batch.item.file.FlatFileItemReader.doRead(FlatFileItemReader.java:180) ~[spring-batch-infrastructure-4.0.1.RELEASE.jar:4.0.1.RELEASE]
    ... 50 common frames omitted
</code></pre>

<p>I have tried with  '@' delimiter -> it works.
For some reason, I can't make it work with the tab delimiter...</p>

<p>Of course in my real project, I have an input file with 'tab' separators...</p>

<p>Any solution here?</p>
",1529441,,5141749,,2018-08-08 6:23:11,2019-02-13 10:20:29,FlatFileItemReader tab delimiter not working,<java><spring><spring-batch>,2,2,,,
Spring,51736997,1,51750684,122,8/8/2018 15:41:34,15,,8/8/2018 0:11:49,,2,431,"<p>The project uses Maven, Spring Boot, Angular, Visual Studio Code editor.</p>

<p>How can I configure the project to reload the browser when angular files change?</p>

<p><a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/single"" rel=""nofollow noreferrer"">spring-boot with angular app</a></p>

<p>With this dependency in pom.xml, the browser reloads when java files change.</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
  &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
",1074660,,,,,2018-08-08 15:41:34,"How to configure project to auto reload browser in angular, spring-boot, maven project",<java><angular><maven><spring-boot><visual-studio-code>,1,4,,,
Spring,37042106,1,54575448,123,2/7/2019 14:21:40,24202,,5/5/2016 4:00:34,,3,505,"<p>I am trying to deploy a spring <code>.war</code> into jboss but am getting 404 errors. I know this has been asked before:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/27576629/springboot-application-on-jboss-eap-servlet-context-not-lodaed"">springBoot application on Jboss EAP, servlet context not lodaed</a></li>
<li><a href=""https://stackoverflow.com/questions/20666513/spring-java-config-vs-jboss-7"">Spring Java Config vs Jboss 7</a></li>
<li><a href=""https://stackoverflow.com/questions/32870599/cannot-deploy-spring-boot-on-jboss-eap-6-3-3"">Cannot deploy Spring Boot on jBoss EAP 6.3.3</a></li>
</ul>

<p>But I am very new (this week) to maven/spring/jboss, so may well have messed up. I tried what I understood from the various solutions above and none of them worked for me. Probably me messing up or missing something. So I thought I'd get the problem as simple as I can.</p>

<p>I took the code from:
<a href=""https://github.com/spring-guides/gs-rest-service.git"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-rest-service.git</a>
And then work in the <code>complete</code> folder.</p>

<pre><code>cd complete 
mvn package
java -jar .\target\gs-rest-service-0.1.0.jar
</code></pre>

<p>And that all worked as you'd expect.</p>

<p>So then I followed the instructions here (<a href=""http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file"" rel=""nofollow noreferrer"">http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file</a>) to modify my code and <code>pom.xml</code> to produce a war file.</p>

<ul>
<li>pom.xml <a href=""http://pastebin.com/BiLWDskd"" rel=""nofollow noreferrer"">http://pastebin.com/BiLWDskd</a></li>
<li>Application.java <a href=""http://pastebin.com/par7rftz"" rel=""nofollow noreferrer"">http://pastebin.com/par7rftz</a></li>
</ul>

<p>I then <code>mvn clean package</code> and load the resulting .war file into EAP using the UI (<a href=""https://i.stack.imgur.com/N7zxG.png"" rel=""nofollow noreferrer"">http://i.stack.imgur.com/N7zxG.png</a>).</p>

<p>So then in theory this should be the URL right</p>

<ul>
<li><a href=""http://localhost:8080/gs-rest-service-0.1.0/greeting"" rel=""nofollow noreferrer"">http://localhost:8080/gs-rest-service-0.1.0/greeting</a></li>
</ul>

<p>I also tried</p>

<ul>
<li><a href=""http://localhost:8080/greeting"" rel=""nofollow noreferrer"">http://localhost:8080/greeting</a></li>
</ul>

<p>But am getting the 404 error (<a href=""https://i.stack.imgur.com/T6J6z.png"" rel=""nofollow noreferrer"">http://i.stack.imgur.com/T6J6z.png</a>) as described in the other questions. Nothing appears in the jboss console log at all after the .war is loaded.</p>

<p>So am I missing something? Do I need to write a jboss @WebServelet class to wrap around the spring stuff? Changes to my pom.xml? Should I not be using springboot, and just just pring framework modules directly? I note that in the EAP screen it does not show the class in the third column like it did with the jboss sample <code>.war</code>.</p>

<p>Remember I am new to this, so please explain stuff as if I'm a complete dummy (which I am).</p>

<p>Details of my setup:</p>

<ul>
<li>OS Windows7 x64</li>
<li>java version ""1.8.0_91""</li>
<li>Apache Maven 3.3.9</li>
<li>Springboot 1.3.3</li>
<li>JBOSS EAP 6.4.0</li>
<li>No IDE, using vim and command line</li>
</ul>
",694014,,-1,,2017-05-23 12:10:28,2019-02-07 14:45:54,Springboot 1.3.3 gives 404 in Jboss EAP 6.4.0GA,<java><spring><maven><jboss><spring-boot>,1,4,,,
Spring,54750194,1,54763563,124,2/19/2019 10:06:05,18,,2/18/2019 15:09:54,,1,21,"<p>I have just cloned the example from <a href=""https://github.com/spring-guides/gs-accessing-data-neo4j"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-accessing-data-neo4j</a> and ran the complete version. It fails with the stack trace below. Is this a fault from my side or is this a problem in the latest release?</p>

<p>Stack trace:</p>

<pre class=""lang-none prettyprint-override""><code>2019-02-18 15:37:39.059  WARN 5145 --- [           main]
org.neo4j.ogm.session.Neo4jSession       : Error executing query : Invalid input '|': expected whitespace, comment, a relationship pattern, '.', node labels, '[', ""=~"", IN, STARTS, ENDS, CONTAINS, IS, '^', '*', '/', '%', '+', '-', '=', ""&lt;&gt;"", ""!="", '&lt;', '&gt;', ""&lt;="", ""&gt;="", AND, XOR, OR, ',' or ']' (line 1, column 106 (offset: 105))
""MATCH (n:`Person`) WHERE n.`name` = { `name_0` } WITH n RETURN n,[ [ (n)-[r_t1:`TEAMMATE`]-(p1:`Person`) | [ r_t1, p1 ] ] ], ID(n)""
                                                                                                          ^. Rolling back transaction.
2019-02-18 15:37:39.066  INFO 5145 --- [           main] ConditionEvaluationReportLoggingListener :

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-02-18 15:37:39.071 ERROR 5145 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to execute CommandLineRunner
        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:821) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:802) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:341) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1277) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1265) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
        at hello.Application.main(Application.java:23) [main/:na]
Caused by: org.neo4j.driver.v1.exceptions.ClientException: Invalid input '|': expected whitespace, comment, a relationship pattern, '.', node labels, '[', ""=~"", IN, STARTS, ENDS, CONTAINS, IS, '^', '*', '/', '%', '+', '-', '=', ""&lt;&gt;"", ""!="", '&lt;', '&gt;', ""&lt;="", ""&gt;="", AND, XOR, OR, ',' or ']' (line 1, column 106 (offset: 105))
""MATCH (n:`Person`) WHERE n.`name` = { `name_0` } WITH n RETURN n,[ [ (n)-[r_t1:`TEAMMATE`]-(p1:`Person`) | [ r_t1, p1 ] ] ], ID(n)""
                                                                                                          ^
        at org.neo4j.driver.internal.util.ErrorUtil.newNeo4jError(ErrorUtil.java:62) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleFailureMessage(InboundMessageDispatcher.java:137) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.messaging.PackStreamMessageFormatV1$Reader.unpackFailureMessage(PackStreamMessageFormatV1.java:432) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.messaging.PackStreamMessageFormatV1$Reader.read(PackStreamMessageFormatV1.java:396) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:83) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:35) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:40) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1336) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1127) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1162) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4    j.driver.internal.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at org.neo4j.driver.internal.shaded.io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[neo4j-java-driver-1.5.0.jar:1.5.0-0f49eb425368377c0c3905e0769af9b70c88d65f]
        at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_171] 
</code></pre>
",8288449,,1940850,,2019-02-19 4:44:11,2019-02-19 10:06:05,Find by property not working as expected in Spring Data Neo4j,<spring-data-neo4j>,1,0,,,
Spring,23511605,1,,,,,,5/7/2014 7:37:05,,1,553,"<p>I am trying to deploy an application build from <a href=""https://github.com/spring-guides/gs-convert-jar-to-war"" rel=""nofollow"">https://github.com/spring-guides/gs-convert-jar-to-war</a> to local glassfish4. And it delpoys well for the first time (if I can call some exceptions from the framework good behaviour). At least, I can open the project's index page in browser. </p>

<p>But if I try to undeploy it and re-deploy, or just overwrite .war file in autodeploy directory, deployment fails. And nothing seems to be added to glassfish log file.</p>

<p>The projects I published from eclipse using some its mechanisms deployed and re-deployed successfully.</p>

<p>Here is the log with related contents:
<a href=""http://pastebin.com/zSeMw5tC"" rel=""nofollow"">http://pastebin.com/zSeMw5tC</a></p>

<p>What can be the problem?</p>
",2708904,,,,,2014-05-07 10:15:01,Glassfish and Spring Boot: .war re-deployment failed,<spring><glassfish><spring-boot>,1,1,,,
Spring,27643278,1,,,,,,12/25/2014 0:19:02,,2,1888,"<p>I'm trying to make the example of this link: <a href=""https://github.com/spring-guides/gs-uploading-files"" rel=""nofollow"">https://github.com/spring-guides/gs-uploading-files</a> work with Apcahe <code>commons-fileupload</code>but the error: <code>Required MultipartFile parameter 'file' is not present</code> is occurring.</p>

<p>The configuration that I'm making on the example is:</p>

<p>1 - Adding the dependency of <code>commons-fileupload</code> in the <code>pom.xml</code>:</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;
  &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;
  &lt;version&gt;1.3.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>2 - Config the <code>multipartResolver()</code> in the <code>Application.java</code></p>

<pre><code>@Bean
public MultipartResolver multipartResolver() {
  return new CommonsMultipartResolver();
}
</code></pre>

<p>Without this configuration everything works fine as Spring is using <code>org.springframework.web.multipart.support.StandardServletMultipartResolver</code> for handle uploads, but I want use <code>commons-fileupload</code>.</p>

<p>There is something that I'm missing? </p>

<p>Thanks.</p>

<p>@avaz</p>
",510024,,,,,2018-02-12 15:43:52,spring-boot spring-mvc apache-commons-fileupload: Required MultipartFile parameter 'file' is not present error,<spring-mvc><spring-boot><apache-commons-fileupload>,1,2,1,,
Spring,29282870,1,,,,,,3/26/2015 15:43:57,,1,133,"<p>I was going through with <a href=""https://github.com/spring-guides/deprecate-tut-web"" rel=""nofollow"">https://github.com/spring-guides/deprecate-tut-web</a>  tutorial on Spring. I am new to Spring . I have seen a few small Spring Web MVC tutorials before . Most other tutorials i have seen uses a service layer which is invoked from the web controller. But never have i seen the use of ""events"" layer as used in this tutorial. Is the layer really necessary, and if so what benefit does it give me ?  I am also new to both DDD (Domain Driven Development) and TDD (Test Driven Development), some things just seem really redundant and over-complicated to me in this tutorial .. Can someone explain what is the purpose of this events layer and why should we use it ? Thank you in advance and sorry if it's a Noob question. :) </p>
",1563286,,,,,2015-03-26 16:02:24,purpose of adding events layer in DDD,<spring><tdd><domain-driven-design><event-sourcing>,1,1,,,
Spring,34821978,1,,,,,,1/16/2016 0:08:14,,8,16335,"<p>I am studying AngularJS and REST.  A code sample uses the word <code>callback</code> repeatedly in an authentication function.  <strong>Is callback a keyword in JavaScript or Angular?  Or is <code>callback</code> just a custom variable created in this code?  How does <code>callback</code> work in the code below?</strong>  Googling <code>callback</code> and AngularJS is not producing usable results.  <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/modular/src/main/resources/static/js/auth/auth.js"" rel=""noreferrer"">The code for the AngularJS module in question can be read at this link</a>, which also contains all the code for the sample app.  </p>

<p>Here is the module code itself:  </p>

<pre><code>angular.module('auth', []).factory( 'auth',

    function($rootScope, $http, $location) {

        enter = function() {
            if ($location.path() != auth.loginPath) {
                auth.path = $location.path();
                if (!auth.authenticated) {
                    $location.path(auth.loginPath);
                }
            }                   
        }

        var auth = {

            authenticated : false,

            loginPath : '/login',
            logoutPath : '/logout',
            homePath : '/',
            path : $location.path(),

            authenticate : function(credentials, callback) {

                var headers = credentials &amp;&amp; credentials.username ? {
                    authorization : ""Basic ""
                            + btoa(credentials.username + "":""
                                    + credentials.password)
                } : {};

                $http.get('user', {
                    headers : headers
                }).success(function(data) {
                    if (data.name) {
                        auth.authenticated = true;
                    } else {
                        auth.authenticated = false;
                    }
                    callback &amp;&amp; callback(auth.authenticated);
                    $location.path(auth.path==auth.loginPath ? auth.homePath : auth.path);
                }).error(function() {
                    auth.authenticated = false;
                    callback &amp;&amp; callback(false);
                });

            },

            clear : function() {
                $location.path(auth.loginPath);
                auth.authenticated = false;
                $http.post(auth.logoutPath, {}).success(function() {
                    console.log(""Logout succeeded"");
                }).error(function(data) {
                    console.log(""Logout failed"");
                });
            },

            init : function(homePath, loginPath, logoutPath) {

                auth.homePath = homePath;
                auth.loginPath = loginPath;
                auth.logoutPath = logoutPath;

                auth.authenticate({}, function(authenticated) {
                    if (authenticated) {
                        $location.path(auth.path);
                    }
                })

                // Guard route changes and switch to login page if unauthenticated
                $rootScope.$on('$routeChangeStart', function() {
                    enter();
                });

            }

        };

        return auth;

    });
</code></pre>

<hr>

<p><strong>ADDITIONAL INFORMATION:</strong>  </p>

<hr>

<p>Based on @okonyk's response, I am including code from a DIFFERENT MODULE that calls the auth.authenticate() function:  </p>

<pre><code>$scope.login = function() {
    auth.authenticate($scope.credentials, function(authenticated) {
        if (authenticated) {
            //do some stuff
             $scope.error = false;
         } else { 
            $scope.error = true;
        }
    })
}
</code></pre>

<p>So how does the call from <code>login()</code> to <code>auth.authenticate($scope.credentials, function(authenticated)</code> work?  Is the <code>function(authenticated)</code> parameter sending a boolean that determines functionality inside <code>auth.authenticate()</code>?  If so, can you please be explicit?  I can piece it together.  For example true might indicate to do the callback, while false might indicate note to do the callback, but it would help to have it explained.  <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/modular/src/main/resources/static/js/navigation/navigation.js"" rel=""noreferrer"">You can read the code in the sample app for the other module with the <code>login()</code> method by clicking on this link</a>.</p>
",807797,,807797,,2016-01-16 6:48:54,2016-01-16 8:18:04,How does callback work in AngularJS call to REST service?,<javascript><angularjs>,2,0,,,
Spring,36100395,1,,,,,,3/19/2016 10:11:31,,5,5450,"<p>I'm modifying the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2-vanilla"" rel=""noreferrer"">oauth2-vanilla</a> sample from <a href=""https://spring.io/guides/tutorials/spring-security-and-angular-js/"" rel=""noreferrer"">Springs excellent security tutorials</a>. The oauth2-vanilla combines the Zuul Proxy and the UI into a single application. I would like to seperate the Zuul Proxy and the UI. (The Zuul Proxy should act as an API gateway and as a reverse proxy for several UIs).</p>

<p>When accessing the UI via the zuul proxy, it should be able to do SSO based on Oauth2 between the UI and the resource backend.</p>

<p>The oauth2-vanilla looks like this</p>

<p><img src=""https://dl.dropboxusercontent.com/u/13246619/Spring/Screenshot%202016-03-19%2010.58.24.png"" alt=""""></p>

<p>Where I want to move to something like this :</p>

<p><img src=""https://dl.dropboxusercontent.com/u/13246619/Spring/Screenshot%202016-03-19%2010.58.32.png"" alt=""""></p>

<p>I've removed the UI part from the gateway, and added a zuul route for the ui</p>

<p><code>
zuul:
  routes:
    resource:
      url: http://localhost:9000
    user:
      url: http://localhost:9999/uaa/user
    ui:
      url: http://localhost:8080
</code></p>

<p>I created a new UI webapp containing the UI (Angular stuff) with an <code>@EnableOAuth2Sso</code> annotation.</p>

<p>So I'm accessing the UI via <a href=""http://localhost:8888"" rel=""noreferrer"">http://localhost:8888</a> (through the zuul proxy).
After authenticating and doing through the UI flow, I can access the /user endpoint that returns me the user. (During debugging, I see that when I access the /user endpoint that I have an HTTP Session with an OAuth2Authentication.</p>

<p>When I access the /resource endpoint however, the HttpSessionSecurityContextRepository cannot find a session and is unable to build a context with the OAuth2Authentication.</p>

<p>I've created <a href=""https://github.com/ddewaele/spring-cloud-seperate-ui-gateway"" rel=""noreferrer"">a git repository</a> with the modified sample.</p>

<p>I'm guessing there is something wrong with the gateway configuration. 
I've tried changing cookie paths, changing HttpSecurity rules in the proxy but I cannot get it to work.</p>

<p>What I don't understand is why the UI, when accessed through the proxy is able to resolve the <code>/user</code> endpoint fine (with an HTTP session and a OAuth2Authentication), but it is unable to access the <code>/resource</code> endpoint.</p>

<p>Also, as the UI is now running in the <code>/ui</code> context, it seems that I need to have the following code in the gateway for it to load up the angular css / js files.</p>

<p><code>
.antMatchers(""/ui/index.html"", ""/ui/home.html"", ""ui/css/**"", ""/ui/js/**"").permitAll().anyRequest().authenticated();
</code></p>

<p>It also doesn't seem right that I need to prefix it with the zuul ui route.</p>

<p>Any help would be appreciated.</p>
",492410,,492410,,2016-03-19 17:03:55,2018-03-09 19:50:33,Spring Security Oauth2 SSO with Zuul Proxy,<spring><spring-security><spring-cloud><spring-security-oauth2>,1,5,6,,
Spring,36705874,1,,,,,,4/18/2016 23:14:39,,7,3608,"<p>I am studying Spring Cloud and Spring OAuth2 by decomposing <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow"">the three interconnected apps in this GitHub sample</a>.  When I open up the <code>/oauth/revoke-token</code> endpoint in the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver"" rel=""nofollow""><code>authserver</code> app</a> and then call it from the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/ui"" rel=""nofollow""><code>ui</code> app</a> with a <code>http://localhost:9999/uaa/logout</code>, the debug log for the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver"" rel=""nofollow""><code>authserver</code> app</a> gives the following error message while rejecting the logout request:</p>

<pre><code>Request 'OPTIONS /logout' doesn't match 'POST /logout
</code></pre>

<p><strong>What specific changes need to be made to the code in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow"">the sample GitHub apps</a> in order to enable the global logout to succeed when the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/ui"" rel=""nofollow""><code>ui</code> app</a> calls the logout function from <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/ui/src/main/resources/static/js/hello.js"" rel=""nofollow""><code>hello.js</code></a>?</strong></p>

<hr/>

<p><strong>INITIAL EFFORTS:</strong></p>

<hr/>

<p>Changes that I made so far include:  </p>

<p>Add the following @Bean definition to <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/authserver/src/main/java/demo/AuthserverApplication.java"" rel=""nofollow"">AuthserverApplication.java</a>:  </p>

<pre><code>@Bean
public TokenStore tokenStore() {return new InMemoryTokenStore();}
</code></pre>

<p>Add the following controller class in the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver/src/main/java/demo"" rel=""nofollow""><code>demo</code> package of the <code>authserver</code> app</a>:  </p>

<pre><code>@Configuration
public class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter {

    @Autowired
    TokenStore tokenStore;

    @Override
    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {
        endpoints.tokenStore(tokenStore);
    }

    @RequestMapping(value = ""/oauth/revoke-token"", method = RequestMethod.GET)
    @ResponseStatus(HttpStatus.OK)
    public void logout(HttpServletRequest request) {
        String authHeader = request.getHeader(""Authorization"");
        if (authHeader != null) {
            String tokenValue = authHeader.replace(""Bearer"", """").trim();
            OAuth2AccessToken accessToken = tokenStore.readAccessToken(tokenValue);
            tokenStore.removeAccessToken(accessToken);
        }
    }
}
</code></pre>

<p>Change the <code>logout()</code> method of <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/blob/master/oauth2/ui/src/main/resources/static/js/hello.js"" rel=""nofollow""><code>hello.js</code> in the <code>ui</code> app</a> to become the following:  </p>

<pre><code>self.logout = function() {
    $http.post('http://localhost:9999/uaa/logout', {}).finally(function() {
        $rootScope.authenticated = false;
        $location.path(""/"");
    });
}
</code></pre>

<p>But when the user clicks on the logout button in the browser and triggers the call to <code>http://localhost:9999/uaa/logout</code>, the debug log for the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver"" rel=""nofollow""><code>authserver</code></a> app gives the following output:  </p>

<pre><code>2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/css/**']
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/css/**'
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/js/**']
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/js/**'
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/images/**']
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/images/**'
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/**/favicon.ico']
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/**/favicon.ico'
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/error']
2016-04-18 15:34:07.142 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/error'
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : No matches found
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/login']
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/login'
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/oauth/authorize']
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/oauth/authorize'
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/oauth/confirm_access']
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/oauth/confirm_access'

2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/logout']
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/logout'
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : matched

2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 1 of 12 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 2 of 12 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] w.c.HttpSessionSecurityContextRepository : No HttpSession currently exists
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] w.c.HttpSessionSecurityContextRepository : No SecurityContext was available from the HttpSession: null. A new one will be created.
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 3 of 12 in additional filter chain; firing Filter: 'HeaderWriterFilter'
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.header.writers.HstsHeaderWriter  : Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@5790c1b4
2016-04-18 15:34:07.143 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 4 of 12 in additional filter chain; firing Filter: 'CsrfFilter'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 5 of 12 in additional filter chain; firing Filter: 'LogoutFilter'

2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'OPTIONS /logout' doesn't match 'POST /logout
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 6 of 12 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'

2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'OPTIONS /logout' doesn't match 'POST /login
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 7 of 12 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 8 of 12 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 9 of 12 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@9055e4a6: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 10 of 12 in additional filter chain; firing Filter: 'SessionManagementFilter'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 11 of 12 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout at position 12 of 12 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Secure object: FilterInvocation: URL: /logout; Attributes: [authenticated]
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055e4a6: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@957e: RemoteIpAddress: 127.0.0.1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
2016-04-18 15:34:07.144 DEBUG 313 --- [io-9999-exec-10] o.s.s.access.vote.AffirmativeBased       : Voter: org.springframework.security.web.access.expression.WebExpressionVoter@539015a, returned: -1
2016-04-18 15:34:07.145 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.a.ExceptionTranslationFilter     : Access is denied (user is anonymous); redirecting to authentication entry point

org.springframework.security.access.AccessDeniedException: Access is denied
    at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:83) ~[spring-security-core-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:232) ~[spring-security-core-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:123) ~[spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114) ~[spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:122) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:48) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:205) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:120) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.5.RELEASE.jar:4.2.5.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.5.RELEASE.jar:4.2.5.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53) [spring-security-web-4.0.3.RELEASE.jar:4.0.3.RELEASE]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.5.RELEASE.jar:4.2.5.RELEASE]
    ...  
    at java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]

2016-04-18 15:34:07.146 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.util.matcher.AndRequestMatcher   : Trying to match using Ant [pattern='/**', GET]
2016-04-18 15:34:07.146 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request 'OPTIONS /logout' doesn't match 'GET /**
2016-04-18 15:34:07.146 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.util.matcher.AndRequestMatcher   : Did not match
2016-04-18 15:34:07.146 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.s.HttpSessionRequestCache        : Request not saved as configured RequestMatcher did not match
2016-04-18 15:34:07.146 DEBUG 313 --- [io-9999-exec-10] o.s.s.w.a.ExceptionTranslationFilter     : Calling Authentication entry point.
2016-04-18 15:34:07.146 DEBUG 313 --- [io-9999-exec-10] o.s.s.web.DefaultRedirectStrategy        : Redirecting to 'http://localhost:9999/uaa/login'
2016-04-18 15:34:07.147 DEBUG 313 --- [io-9999-exec-10] w.c.HttpSessionSecurityContextRepository : SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
2016-04-18 15:34:07.147 DEBUG 313 --- [io-9999-exec-10] s.s.w.c.SecurityContextPersistenceFilter : SecurityContextHolder now cleared, as request processing completed
</code></pre>

<p><strong>What other specific code changes need to be changed in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow"">the GitHub sample apps</a> to enable the <code>ui</code> app to trigger a global logout of the user from all apps?</strong>  </p>

<p>Note: Obviously, <code>/uaa/logout</code> is a different URL than <code>/oauth/revoke-token</code>.  However, the inner workings of Spring Security and OAuth in this situation are not clear without an answer to this OP.  </p>

<hr/>

<p><strong>@StuXnet's Suggestions:</strong>  </p>

<hr/>

<p>The content of the Firefox Developer Tools Network Tab for the request is:  </p>

<p>The request to <code>http : // localhost:9999/uaa/login</code> with method <code>OPTIONS</code> was rejected with a <code>403</code> error.  </p>

<p>The raw <code>request</code> headers were:  </p>

<pre><code>Host: localhost:9999
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Origin: http://localhost:8080
Access-Control-Request-Method: POST
Access-Control-Request-Headers: content-type,x-requested-with
Connection: keep-alive
Pragma: no-cache
Cache-Control: no-cache
</code></pre>

<p>The raw <code>response</code> headers were:  </p>

<pre><code>Allow: GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH
Content-Length: 20
Date: Mon, 18 Apr 2016 23:45:46 GMT
Server: Apache-Coyote/1.1
X-Application-Context: application:9999
</code></pre>

<p>Next, I changed the config(http) method of LoginConfig to read as follows:  </p>

<pre><code>@Override
protected void configure(HttpSecurity http) throws Exception {
    // @formatter:off
    http
        .formLogin().loginPage(""/login"").permitAll()
        .and()
        .requestMatchers().antMatchers(""/login"", ""/oauth/authorize"", ""/oauth/confirm_access"", ""/logout"", ""/oauth/revoke-token"")
        .and()
        .authorizeRequests()
        .antMatchers(HttpMethod.OPTIONS,""/logout"").permitAll()
        .anyRequest().authenticated();
        // @formatter:on
}
</code></pre>

<p>This resulted in the following new printout in the Spring Boot DEBUG logs:  </p>

<pre><code>2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/css/**']
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/css/**'
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/js/**']
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/js/**'
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/images/**']
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/images/**'
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/**/favicon.ico']
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/**/favicon.ico'
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/error']
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/error'
2016-04-18 19:22:06.202 DEBUG 5319 --- [io-9999-exec-10] o.s.s.web.util.matcher.OrRequestMatcher  : No matches found
2016-04-18 19:22:06.203 DEBUG 5319 --- [io-9999-exec-10] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request '/logout' matched by universal pattern '/**'
2016-04-18 19:22:06.203 DEBUG 5319 --- [io-9999-exec-10] o.s.security.web.FilterChainProxy        : /logout has an empty filter list
2016-04-18 19:22:06.204 DEBUG 5319 --- [io-9999-exec-10] .s.o.p.e.FrameworkEndpointHandlerMapping : Looking up handler method for path /logout
2016-04-18 19:22:06.205 DEBUG 5319 --- [io-9999-exec-10] .s.o.p.e.FrameworkEndpointHandlerMapping : Did not find handler method for [/logout]
</code></pre>

<p>And the following <code>request</code> header in Firefox:  </p>

<pre><code>Host: localhost:9999
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Origin: http://localhost:8080
Access-Control-Request-Method: POST
Access-Control-Request-Headers: content-type,x-requested-with
Connection: keep-alive
Pragma: no-cache
Cache-Control: no-cache
</code></pre>

<p>Along with the following <code>response</code> header in Firefox:  </p>

<pre><code>Allow: GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH
Content-Length: 20
Date: Tue, 19 Apr 2016 02:22:06 GMT
Server: Apache-Coyote/1.1
X-Application-Context: application:9999
</code></pre>

<p>I then tried changing the <code>configure(http)</code> method of <code>LoginConfig</code> to become:  </p>

<pre><code>@Override
protected void configure(HttpSecurity http) throws Exception {
    // @formatter:off
    http
        .formLogin().loginPage(""/login"").permitAll()
        .and()
        .requestMatchers().antMatchers(""/login"", ""/oauth/authorize"", ""/oauth/confirm_access"", ""/logout"", ""/oauth/revoke-token"")
        .and()
        .authorizeRequests()
        .anyRequest().authenticated()
        // @formatter:on
        .and()
        .csrf()
        .ignoringAntMatchers(""/logout"");
}
</code></pre>

<p>But the result is the following Spring Boot DEBUG log for the <code>authserver</code> app:  </p>

<pre><code>2016-04-19 10:12:13.545 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/css/**']
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/css/**'
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/js/**']
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/js/**'
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/images/**']
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/images/**'
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/**/favicon.ico']
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/**/favicon.ico'
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.web.util.matcher.OrRequestMatcher  : Trying to match using Ant [pattern='/error']
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Checking match of request : '/logout'; against '/error'
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.web.util.matcher.OrRequestMatcher  : No matches found
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.s.w.u.matcher.AntPathRequestMatcher  : Request '/logout' matched by universal pattern '/**'
2016-04-19 10:12:13.546 DEBUG 4593 --- [nio-9999-exec-2] o.s.security.web.FilterChainProxy        : /logout has an empty filter list
2016-04-19 10:12:13.547 DEBUG 4593 --- [nio-9999-exec-2] .s.o.p.e.FrameworkEndpointHandlerMapping : Looking up handler method for path /logout
2016-04-19 10:12:13.548 DEBUG 4593 --- [nio-9999-exec-2] .s.o.p.e.FrameworkEndpointHandlerMapping : Did not find handler method for [/logout]
</code></pre>

<hr>

<p><strong>REPRODUCING THE PROBLEM ON YOUR MACHINE:</strong>  </p>

<hr>

<p>To reproduce the problem on your own machine, you can either:  </p>

<p>1.) git clone the original sample app at the link at the top of the OP and then make the changes shown above, or </p>

<p>2.) Download <a href=""https://jumpshare.com/v/ELVSYNXNeUKV6Xl1Droq"" rel=""nofollow"">the zipped version of the app as it exists on my devbox including all the changes from the OP at this file sharing link</a>, and then:  </p>

<p>2.a.) Untar the app.  </p>

<p>2.b.) Navigate a terminal window to <code>oauth2/resource</code> and <code>mvn spring-boot:run</code>.  Then navigate a second terminal window to <code>oauth2/authserver</code> and type <code>mvn spring-boot:run</code>.  Then navigate a third terminal window to <code>oauth2/ui</code> and type <code>mvn spring-boot:run</code>.  </p>

<p>2.c.) Navigate the web browser to <code>http : // localhost:8080</code>, then click <code>login</code>, then enter <code>user</code> for <code>username</code> and <code>password</code> for <code>password</code>.  After you have been authenticated, click the <code>logout</code> button to reproduce the 403 error.  Use the Network tab of your browser's developer tools to examine the browser activity.  View the Spring Boot logs in the terminal that is running the <code>authserver</code> app to see Spring's activity.  </p>

<p>3.) Either import the three folders into eclipse (or another IDE) as existing maven projects, or open the code files with a text editor to edit before repeating the relaunch and retesting in step 2.  </p>

<p><strong>What else can I provide to help isolate the solution?</strong></p>
",807797,,807797,,2016-04-20 19:42:10,2016-08-25 8:37:48,Request 'OPTIONS /logout' doesn't match 'POST /logout,<spring><spring-security><spring-boot><spring-cloud><spring-oauth2>,1,6,2,,
Spring,37061697,1,,,,,,5/5/2016 23:05:27,,14,2025,"<p>Complete code for a Spring OAuth2 implementation of Multi-Factor Authentication has been uploaded to <a href=""https://jumpshare.com/v/oj7wSZaZRgJHEwqYiJ2p"" rel=""nofollow noreferrer"">a file sharing site at this link</a>.  Instructions are given below to recreate the current problem on any computer in only a few minutes.</p>

<p><hr/>
<strong>CURRENT PROBLEM:</strong></p>

<hr/>  

<p>Most of the authentication algorithm works correctly.  The program does not break until the very end of the control flow shown below.  Specifically, an <code>Invalid CSRF token found for http://localhost:9999/uaa/oauth/token</code> error is being thrown at the end of the <strong>SECOND PASS</strong> below.  The app in the link above was developed by adding a custom <code>OAuth2RequestFactory</code>, <code>TwoFactorAuthenticationFilter</code> and <code>TwoFactorAuthenticationController</code> to the <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2/authserver"" rel=""nofollow noreferrer""><code>authserver</code> app</a> of this <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow noreferrer"">Spring Boot OAuth2 GitHub sample</a>.  <strong>What specific changes need to be made to the code below in order to resolve this CSRF token error and enable 2-factor authentication?</strong>  </p>

<p>My research leads me to suspect that the <code>CustomOAuth2RequestFactory</code> (<a href=""http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/provider/OAuth2RequestFactory.html"" rel=""nofollow noreferrer"">API at this link</a>) might be the place to configure a solution because it defines ways for managing <a href=""http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/provider/AuthorizationRequest.html"" rel=""nofollow noreferrer""><code>AuthorizationRequest</code></a>s and <a href=""http://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/provider/TokenRequest.html"" rel=""nofollow noreferrer""><code>TokenRequest</code></a>s.  </p>

<p><strong><a href=""https://tools.ietf.org/html/rfc6749#section-4.1.1"" rel=""nofollow noreferrer"">This section of the official OAuth2 spec</a> indicates that the <code>state</code> parameter of the request made to the authorization endpoint is the place where the <code>csrf</code> token is added.</strong>  </p>

<p>Also, the code in the link uses <a href=""https://tools.ietf.org/html/rfc6749#section-4.1"" rel=""nofollow noreferrer"">the Authorization Code Grant Type described at this link to the official spec</a>, which would mean that Step C in the flow does not update the <code>csrf</code> code, thus triggering the error in Step D.  (You can view the entire flow including Step C and Step D in <a href=""https://tools.ietf.org/html/rfc6749#section-4.1"" rel=""nofollow noreferrer"">the official spec</a>.)</p>

<p><hr/>
<strong>CONTROL FLOW SURROUNDING THE CURRENT ERROR:</strong>  </p>

<hr/>  

<p>The current error is being thrown during the <strong>SECOND PASS</strong> through <code>TwoFactorAuthenticationFilter</code> in the flowchart below.  Everything works as intended until the control flow gets into the <strong>SECOND PASS</strong>.    </p>

<p>The following flowchart illustrates the control flow of the two factor authentication process that is employed by the code in the downloadable app.</p>

<p><img src=""https://s32.postimg.cc/5sahbqvrp/2_FA_OAuth_Flow.gif"">  </p>

<p>Specifically, the Firefox <code>HTTP</code> Headers for the sequence of <code>POST</code>s and <code>GET</code>s show that the same <code>XSRF</code> cookie is sent with every request in the sequence.  The <code>XSRF</code> token values do not cause a problem until after the <code>POST /secure/two_factor_authentication</code>, which triggers server processing at the <code>/oauth/authorize</code> and <code>/oauth/token</code> endpoints, with <code>/oauth/token</code> throwing the <code>Invalid CSRF token found for http://localhost:9999/uaa/oauth/token</code> error.  </p>

<p>To understand the relationship between the above control flow chart and the <code>/oauth/authorize</code> and <code>/oauth/token</code> endpoints, you can compare the above flowchart side by side <a href=""https://tools.ietf.org/html/rfc6749#section-4.1"" rel=""nofollow noreferrer"">with the chart for the single factor flow at the official spec</a> in a separate browser window.  The <strong>SECOND PASS</strong> above simply runs through the steps from the one-factor official spec a second time, but with greater permissions during the <strong>SECOND PASS</strong>.  </p>

<p><hr/><br>
<strong>WHAT THE LOGS SAY:</strong></p>

<hr/>  

<p>The HTTP Request and Response Headers indicate that:  </p>

<p>1.) A POST to <code>9999/login</code> with the correct <code>username</code> and <code>password</code> submitted results in a redirect to <code>9999/authorize?client_id=acme&amp;redirect_uri=/login&amp;response_type=code&amp;state=sGXQ4v</code> followed by a <code>GET 9999/secure/two_factor_authenticated</code>.  One XSRF token remains constant across these exchanges.  </p>

<p>2.) A POST to <code>9999/secure/two_factor_authentication</code> with the correct pin code sends the same <code>XSRF</code> token, and gets successfully re-directed to <code>POST 9999/oauth/authorize</code> and makes it into <code>TwoFactorAuthenticationFilter.doFilterInternal()</code> and proceeds to <code>request 9999/oauth/token</code>, but <code>9999/oauth/token</code> rejects the request because the same old XSRF token does not match a new <code>XSRF</code> token value, which was apparently created during the <strong>FIRST PASS</strong>.    </p>

<p>One obvious difference between <code>1.)</code> and <code>2.)</code> is that the second <code>request 9999/oauth/authorize</code> in <code>2.)</code> does not contain the url parameters which are included in the first request to <code>9999/authorize?client_id=acme&amp;redirect_uri=/login&amp;response_type=code&amp;state=sGXQ4v</code> in <code>1.)</code>, and also defined in <a href=""https://tools.ietf.org/html/rfc6749#section-4.1"" rel=""nofollow noreferrer"">the official spec</a>.  But it is not clear if this is causing the problem.  </p>

<p>Also, it is not clear how to access the parameters to send a fully formed request from the <code>TwoFactorAuthenticationController.POST</code>.  I did a SYSO of the <code>parameters</code> <code>Map</code> in the <code>HttpServletRequest</code> for the <code>POST 9999/secure/two_factor_authentication</code> controller method, and all it contains are the <code>pinVal</code> and <code>_csrf</code> variables.  </p>

<p>You can read all the HTTP Headers and Spring Boot logs at a file sharing site <a href=""https://jumpshare.com/v/Xy2g91GLXLB8gkWmliMF"" rel=""nofollow noreferrer"">by clicking on this link</a>.</p>

<p><hr/>
<strong>A FAILED APPROACH:</strong>  </p>

<hr/>  

<p>I tried <a href=""https://stackoverflow.com/questions/20862299/with-spring-security-3-2-0-release-how-can-i-get-the-csrf-token-in-a-page-that#20960352"">@RobWinch's approach to a similar problem in the Spring Security 3.2 environment</a>, but the approach does not seem to apply to the context of Spring OAuth2.  Specifically, when the following <code>XSRF</code> update code block is uncommented in the <code>TwoFactorAuthenticationFilter</code> code shown below, the downstream request headers do show a different/new <code>XSRF</code> token value, but the same error is thrown.  </p>

<pre><code>if(AuthenticationUtil.hasAuthority(ROLE_TWO_FACTOR_AUTHENTICATED)){
    CsrfToken token = (CsrfToken) request.getAttribute(""_csrf"");
    response.setHeader(""XSRF-TOKEN""/*""X-CSRF-TOKEN""*/, token.getToken());
}
</code></pre>

<p><strong>This indicates that the <code>XSRF</code> configuration needs to be updated in a way that <code>/oauth/authorize</code> and <code>/oauth/token</code> are able to talk with each other and with the client and resource apps to successfully manage the <code>XSRF</code> token values.</strong>  Perhaps the <code>CustomOAuth2RequestFactory</code> is what needs to be changed to accomplish this.  But how?  </p>

<p><hr/>
<strong>RELEVANT CODE:</strong></p>

<hr/>  

<p>The code for <code>CustomOAuth2RequestFactory</code> is:  </p>

<pre><code>public class CustomOAuth2RequestFactory extends DefaultOAuth2RequestFactory {

    public static final String SAVED_AUTHORIZATION_REQUEST_SESSION_ATTRIBUTE_NAME = ""savedAuthorizationRequest"";

    public CustomOAuth2RequestFactory(ClientDetailsService clientDetailsService) {
        super(clientDetailsService);
    }

    @Override
    public AuthorizationRequest createAuthorizationRequest(Map&lt;String, String&gt; authorizationParameters) {
        ServletRequestAttributes attr = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
        HttpSession session = attr.getRequest().getSession(false);
        if (session != null) {
            AuthorizationRequest authorizationRequest = (AuthorizationRequest) session.getAttribute(SAVED_AUTHORIZATION_REQUEST_SESSION_ATTRIBUTE_NAME);
            if (authorizationRequest != null) {
                session.removeAttribute(SAVED_AUTHORIZATION_REQUEST_SESSION_ATTRIBUTE_NAME);
                return authorizationRequest;
            }
        }

        return super.createAuthorizationRequest(authorizationParameters);
    }
}
</code></pre>

<p>The code for <code>TwoFactorAuthenticationFilter</code> is:  </p>

<pre><code>//This class is added per: https://stackoverflow.com/questions/30319666/two-factor-authentication-with-spring-security-oauth2
/**
 * Stores the oauth authorizationRequest in the session so that it can
 * later be picked by the {@link com.example.CustomOAuth2RequestFactory}
 * to continue with the authoriztion flow.
 */
public class TwoFactorAuthenticationFilter extends OncePerRequestFilter {

    private RedirectStrategy redirectStrategy = new DefaultRedirectStrategy();
    private OAuth2RequestFactory oAuth2RequestFactory;
    //These next two are added as a test to avoid the compilation errors that happened when they were not defined.
    public static final String ROLE_TWO_FACTOR_AUTHENTICATED = ""ROLE_TWO_FACTOR_AUTHENTICATED"";
    public static final String ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED = ""ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED"";

    @Autowired
    public void setClientDetailsService(ClientDetailsService clientDetailsService) {
        oAuth2RequestFactory = new DefaultOAuth2RequestFactory(clientDetailsService);
    }

    private boolean twoFactorAuthenticationEnabled(Collection&lt;? extends GrantedAuthority&gt; authorities) {
        System.out.println(""&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; List of authorities includes: "");
        for (GrantedAuthority authority : authorities) {
            System.out.println(""auth: ""+authority.getAuthority() );
        }
        return authorities.stream().anyMatch(
            authority -&gt; ROLE_TWO_FACTOR_AUTHENTICATION_ENABLED.equals(authority.getAuthority())
        );
    }

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {
        System.out.println(""------------------ INSIDE TwoFactorAuthenticationFilter.doFilterInternal() ------------------------"");
        // Check if the user hasn't done the two factor authentication.
        if (AuthenticationUtil.isAuthenticated() &amp;&amp; !AuthenticationUtil.hasAuthority(ROLE_TWO_FACTOR_AUTHENTICATED)) {
        System.out.println(""++++++++++++++++++++++++ AUTHENTICATED BUT NOT TWO FACTOR +++++++++++++++++++++++++"");
        AuthorizationRequest authorizationRequest = oAuth2RequestFactory.createAuthorizationRequest(paramsFromRequest(request));
            /* Check if the client's authorities (authorizationRequest.getAuthorities()) or the user's ones
               require two factor authenticatoin. */
        System.out.println(""======================== twoFactorAuthenticationEnabled(authorizationRequest.getAuthorities()) is: "" + twoFactorAuthenticationEnabled(authorizationRequest.getAuthorities()) );
        System.out.println(""======================== twoFactorAuthenticationEnabled(SecurityContextHolder.getContext().getAuthentication().getAuthorities()) is: "" + twoFactorAuthenticationEnabled(SecurityContextHolder.getContext().getAuthentication().getAuthorities()) );
        if (twoFactorAuthenticationEnabled(authorizationRequest.getAuthorities()) ||
                twoFactorAuthenticationEnabled(SecurityContextHolder.getContext().getAuthentication().getAuthorities())) {
                // Save the authorizationRequest in the session. This allows the CustomOAuth2RequestFactory
                // to return this saved request to the AuthenticationEndpoint after the user successfully
                // did the two factor authentication.
                request.getSession().setAttribute(CustomOAuth2RequestFactory.SAVED_AUTHORIZATION_REQUEST_SESSION_ATTRIBUTE_NAME, authorizationRequest);

                // redirect the the page where the user needs to enter the two factor authentiation code
                redirectStrategy.sendRedirect(request, response,
                    ServletUriComponentsBuilder.fromCurrentContextPath()
                        .path(TwoFactorAuthenticationController.PATH)
                        .toUriString());
                return;
            }
        }
        //THE NEXT ""IF"" BLOCK DOES NOT RESOLVE THE ERROR WHEN UNCOMMENTED
        //if(AuthenticationUtil.hasAuthority(ROLE_TWO_FACTOR_AUTHENTICATED)){
        //    CsrfToken token = (CsrfToken) request.getAttribute(""_csrf"");
            // this is the value of the token to be included as either a header or an HTTP parameter
        //    response.setHeader(""XSRF-TOKEN"", token.getToken());
        //}

        filterChain.doFilter(request, response);
    }

    private Map&lt;String, String&gt; paramsFromRequest(HttpServletRequest request) {
        Map&lt;String, String&gt; params = new HashMap&lt;&gt;();
        for (Entry&lt;String, String[]&gt; entry : request.getParameterMap().entrySet()) {
            params.put(entry.getKey(), entry.getValue()[0]);
        }
        return params;
    }
}
</code></pre>

<hr/>

<p><strong>RE-CREATING THE PROBLEM ON YOUR COMPUTER:</strong>  </p>

<hr/>  

<p>You can recreate the problem on any computer in only a few minutes by following these simple steps:  </p>

<p>1.) Download the <a href=""https://jumpshare.com/v/oj7wSZaZRgJHEwqYiJ2p"" rel=""nofollow noreferrer"">zipped version of the app from a file sharing site by clicking on this link</a>.  </p>

<p>2.) Unzip the app by typing: <code>tar -zxvf oauth2.tar(2).gz</code>  </p>

<p>3.) launch the <code>authserver</code> app by navigating to <code>oauth2/authserver</code> and then typing <code>mvn spring-boot:run</code>.  </p>

<p>4.) launch the <code>resource</code> app by navigating to <code>oauth2/resource</code> and then typing <code>mvn spring-boot:run</code>  </p>

<p>5.) launch the <code>ui</code> app by navigating to <code>oauth2/ui</code> and then typing <code>mvn spring-boot:run</code>  </p>

<p>6.) Open a web browser and navigate to <code>http : // localhost : 8080</code>  </p>

<p>7.) Click <code>Login</code> and then enter <code>Frodo</code> as the user and <code>MyRing</code> as the password, and click to submit.  </p>

<p>8.) Enter <code>5309</code> as the <code>Pin Code</code> and click submit.  <strong>This will trigger the error shown above.</strong>  </p>

<p>You can view the complete source code by: </p>

<p>a.) importing the maven projects into your IDE, or by  </p>

<p>b.) navigating within the unzipped directories and opening with a text editor.  </p>

<p><hr/>
You can read all the HTTP Headers and Spring Boot logs at a file sharing site <a href=""https://jumpshare.com/v/Xy2g91GLXLB8gkWmliMF"" rel=""nofollow noreferrer"">by clicking on this link</a>.</p>
",807797,,1033581,,2018-07-21 13:43:15,2018-07-21 13:43:15,Invalid XSRF token at /oauth/token,<spring><spring-mvc><spring-security><spring-boot><spring-oauth2>,2,5,3,,
Spring,37598036,1,,,,,,6/2/2016 17:05:31,,1,842,"<p>I am following this tutorial about Spring-Security-Oauth2 :</p>

<p><a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/logout"" rel=""nofollow"">https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/logout</a></p>

<p>The problem that I am facing is, when I clicked the logout button this send a post request to the /logout endpoint to kill to session, but when I clicked the LogIn button again I expect to see the login Form Again. But It seems that when /logout is called, this is in somewhere saving the information of the last logged user and always re-login again and does not display the login form.</p>

<p>I don't know how to kill the session in the SSO, I am using the  same facebook OAuth.</p>

<p>Thanks for help.</p>
",1469918,,1469918,,2016-06-02 18:06:03,2017-07-19 22:36:28,Spring Security OAuth2 doesn't kill the session and display login again,<java><spring-security><spring-boot><single-sign-on><spring-security-oauth2>,1,6,1,,
Spring,37780976,1,,,,,,6/13/2016 2:17:04,,5,2100,"<p>I follow this tutorial: <a href=""https://help.github.com/articles/signing-commits-using-gpg/"" rel=""nofollow noreferrer"">https://help.github.com/articles/signing-commits-using-gpg/</a></p>

<p>I try to sign when commit like this:
<a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/commit/824f418ab9d04114b14a90f7c19b4b8d6dda67b7"" rel=""nofollow noreferrer"">https://github.com/spring-guides/tut-spring-boot-oauth2/commit/824f418ab9d04114b14a90f7c19b4b8d6dda67b7</a></p>

<p><a href=""https://i.stack.imgur.com/aaVEi.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aaVEi.jpg"" alt=""enter image description here""></a></p>

<p>but error:</p>

<pre><code>C:\Users\Administrator\Desktop\foo\test_gpg&gt;git commit -m ""test""
gpg: skipped ""DABDD34E"": secret key not available
gpg: signing failed: secret key not available
error: gpg failed to sign the data
fatal: failed to write commit object
</code></pre>

<p><a href=""https://i.stack.imgur.com/6SiFh.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6SiFh.jpg"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/ch5Sx.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ch5Sx.jpg"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/TUsRP.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TUsRP.jpg"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/ZD99v.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZD99v.jpg"" alt=""enter image description here""></a></p>

<p>My config:</p>

<pre><code>C:\Users\Administrator\Desktop\foo\test_gpg&gt;git config --list --show-origin
file:""C:\\ProgramData/Git/config""       core.symlinks=false
file:""C:\\ProgramData/Git/config""       core.autocrlf=true
file:""C:\\ProgramData/Git/config""       core.fscache=true
file:""C:\\ProgramData/Git/config""       color.diff=auto
file:""C:\\ProgramData/Git/config""       color.status=auto
file:""C:\\ProgramData/Git/config""       color.branch=auto
file:""C:\\ProgramData/Git/config""       color.interactive=true
file:""C:\\ProgramData/Git/config""       help.format=html
file:""C:\\ProgramData/Git/config""       http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
file:""C:\\ProgramData/Git/config""       diff.astextplain.textconv=astextplain
file:""C:\\ProgramData/Git/config""       rebase.autosquash=true
file:""C:\\Program Files\\Git\\mingw64/etc/gitconfig""    credential.helper=manager
file:C:/Users/Administrator/.gitconfig  user.name=donhuvy
file:C:/Users/Administrator/.gitconfig  user.email=donhuvy@hotmail.com
file:C:/Users/Administrator/.gitconfig  user.signingkey=DABDD34E
file:C:/Users/Administrator/.gitconfig  commit.gpgsign=true
file:C:/Users/Administrator/.gitconfig  use.signingkey=DABDD34E
file:.git/config        core.repositoryformatversion=0
file:.git/config        core.filemode=false
file:.git/config        core.bare=false
file:.git/config        core.logallrefupdates=true
file:.git/config        core.symlinks=false
file:.git/config        core.ignorecase=true
file:.git/config        core.hidedotfiles=dotGitOnly
file:.git/config        remote.origin.url=https://github.com/donhuvy/test_gpg.git
file:.git/config        remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
file:.git/config        branch.master.remote=origin
file:.git/config        branch.master.merge=refs/heads/master
file:.git/config        commit.gpgsign=true
</code></pre>

<p>and</p>

<pre><code>C:\Users\Administrator\Desktop\foo\test_gpg&gt;gpg --list-key
C:/Users/Administrator/AppData/Roaming/gnupg/pubring.gpg
--------------------------------------------------------
pub   2048R/DABDD34E 2016-06-10
uid       [ultimate] donhuvy (Do Nhu Vy) &lt;v@vyhn.net&gt;
uid       [ultimate] Do Nhu Vy (Do Nhu Vy) &lt;v@vyhn.net&gt;
sub   2048R/C6B535A2 2016-06-10
</code></pre>

<p>(I register 3 emails with GitHub: <code>v@vyhn.net</code>, <code>donhuvy@hotmail.com</code> and <code>xxxxx@gmail.com</code>)
What I have been wrong? How I sign my commit?</p>
",3728901,,3728901,,2017-11-15 12:46:16,2018-05-06 0:30:34,"gpg: skipped ""XXBDXX4E"": secret key not available. gpg: signing failed: secret key not available",<git><github>,2,0,3,,
Spring,38800564,1,,,,,,8/6/2016 4:31:43,,5,2554,"<p>We are trying to implement a SSO scheme using Azure AD and Spring security.
We found a few leads:</p>

<p><a href=""https://github.com/spring-guides/tut-spring-boot-oauth2"" rel=""noreferrer"">https://github.com/spring-guides/tut-spring-boot-oauth2</a></p>

<p><a href=""https://github.com/Pytry/azure-b2c-oauth2"" rel=""noreferrer"">https://github.com/Pytry/azure-b2c-oauth2</a></p>

<p>But none of these tell the full story.
In fact we can't get passed the access token parsing, Spring has a different idea of what the JWT token should be.</p>

<p>Ideally we wouldn't want to write an SSO filter from scratch but override the Token Services to implement custom filtering for starters.</p>

<p>Has anyone successfully implemented this?
Any help would be appreciated.</p>
",6684746,,,,,2018-05-10 8:21:19,Azure AD and Spring Security with Oauth 2,<java><security><spring-mvc><oauth><azure-active-directory>,1,1,4,,
Spring,38910280,1,,,,,,8/12/2016 5:03:21,,3,601,"<p>I'm working with tutorial that describes how to write a modular Project single-page app using Spring Boot, Spring Security and AngularJS </p>

<p><a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2-vanilla"" rel=""nofollow"">https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2-vanilla</a> </p>

<p>and this Project</p>

<p><a href=""https://github.com/sharmaritesh/spring-angularjs-oauth2-sample"" rel=""nofollow"">https://github.com/sharmaritesh/spring-angularjs-oauth2-sample</a></p>

<p>I cannot logout currently logged user.
If you click on the ""logout"" link you will see that the home page changes (the greeting is no longer displayed) so the user is no longer authenticated with the UI server. Click back on ""login"" though and you actually don’t need to go back through the authentication and approval cycle in the authorization server (because you haven’t logged out of that). </p>

<p>I'm new to Spring and would like that some User could logged out et come back to a login Page again.
Please somebody could help me or give some suggestion to solve this Problem?</p>
",2657234,,7791521,,2018-01-05 21:39:49,2018-01-05 21:39:49,Spring Boot with Angularjs Logout Error,<angularjs><spring><spring-security><spring-boot><logout>,1,0,1,,
Spring,39082691,1,,,,,,8/22/2016 14:53:28,,4,2273,"<p>I have been following Dave Syer tutorial, SSO with OAuth2, Part 5  <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow"">https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2</a></p>

<p>It has UI/API gateway, resource server and Authorization server. 
When i click logout from UI/API gateway application i get the following,<a href=""http://i.stack.imgur.com/T7WO0.jpg"" rel=""nofollow"">enter image description here</a> Cors issue</p>

<p>What is currently happening from Dave Syer tutorial is that when a user click logout it changes the authentication flag to false, making it seem the user has logged out but they have only logged out from the UI/API gateway application. </p>

<p>When user click login, remember they haven’t logout from the Authentication server. Therefore, user doesn’t go through the authentication and approval cycle again. </p>

<p>What I want, when a user click logout and try to login again user must input username and password. In fact, they should start afresh, meaning system should invalidate the session and or token.</p>

<p>I've been banging my head against a wall trying to find a solution for this. Can anyone please point out how to resolve/ achieve this. </p>
",6726502,,,,,2017-07-19 17:50:43,"Spring boot Security, Oauth2 logout, invalidate session in order to go through the authentication and approval cycle in the authorization server",<java><angularjs><spring-security><spring-boot><spring-security-oauth2>,2,2,1,,
Spring,39645590,1,,,,,,9/22/2016 17:43:46,,5,7114,"<p>Here is my webConfig</p>

<pre><code>@Configuration
@EnableWebMvc
public class WebConfig extends WebMvcConfigurerAdapter {

    @Override
    public void addCorsMappings(CorsRegistry registry) {
        registry.addMapping(""/**"");
    }
}
</code></pre>

<p>I have a <code>/health</code> endpoint, which returns some health data and it works fine.</p>

<p>Here is junit test</p>

<pre><code>@Test
    public void corsTest() {
        HttpHeaders headers = new HttpHeaders();
        headers.add(HttpHeaders.ORIGIN, ""http://localhost:9000"");
        HttpEntity&lt;?&gt; requestEntity = new HttpEntity(headers);
        ResponseEntity&lt;Status&gt; entity = this.restTemplate.exchange(""/health"", HttpMethod.GET, requestEntity, Status.class);
        assertEquals(HttpStatus.OK, entity.getStatusCode());
        assertEquals(""http://localhost:9000"", entity.getHeaders().getAccessControlAllowOrigin()); //6
        Status health = entity.getBody();
        assertThat(health.getAppName()).isEqualTo(appName);
    }
</code></pre>

<p>Test fails at line 6. if comment-out that line, the test passes.
Through debugger, I found that <code>entity.getHeaders().getAccessControlAllowOrigin()</code> is null. I used this <a href=""https://github.com/spring-guides/gs-rest-service-cors/blob/master/complete/src/test/java/hello/GreetingIntegrationTests.java"" rel=""noreferrer"">sample app</a> as reference and it works fine. but for my application it fails.</p>

<p>when I use javascript to call the /health api, I can see the cors works. If I comment out, webConfig class, I get error in javascript. Debugging more at javascript shows that cors response header is not set but the request served successfully when webconfig is enabled.</p>

<p>so definitely cors works. It is the test that is failing. so I am guessing test is not seeing it for reasons I don't know.</p>
",1988876,,1988876,,2016-09-22 18:43:33,2016-09-22 20:59:32,cors not working for my spring boot application,<spring><spring-mvc><spring-boot><cors><spring-mvc-test>,3,2,2,,
Spring,40355743,1,,,,,,11/1/2016 7:26:46,,5,2709,"<p>I would like to be able to upload images to a server, handling errors and exceptions gracefully, with error messages displayed to the user in the form, and ideally only using an existing barebones Spring Boot and Thymeleaf install. </p>

<p>Using the example project <a href=""https://github.com/spring-guides/gs-uploading-files"" rel=""nofollow noreferrer"">gs-uploading-files</a> I can upload files to a server using Spring Boot and Thymeleaf. In application.properties I set <code>spring.http.multipart.max-file-size=1MB</code> and 
<code>spring.http.multipart.max-request-size=1MB</code>. 
 However several security and validation issues are unresolved when I upload files larger than 1MB.</p>

<ol>
<li><p>Any file can be uploaded. For example, an html file could be uploaded and thus hosted on the server. How can files be restricted by type? Can they be validated in the page before the request is sent? If I have multiple ways of uploading images how can I validate all MultipartFiles?</p></li>
<li><p>Users can attempt to uploade large files, beyond the default limits of Spring and the embedded Tomcat. This causes a <code>org.springframework.web.multipart.MultipartException</code> is not handled by Spring. How can the file size be validated before the upload attempt? In case this is bypassesed can any file upload exceptions caught by Spring, so that a nice error message is displayed?</p></li>
<li><p>The default Spring error page is not used as a fallback for all exceptions. The MultipartException returns a Tomcat exception page with a full stacktrace (see Log 1).</p></li>
</ol>

<hr>

<p>I've searched to try and find and implement a set of solutions.</p>

<p>A step towards fixing number 1 is by amending to <code>handleFileUpload</code> check the content type, rejecting files which fail this:  <code>!file.getContentType().toLowerCase().startsWith(""image"")</code>. Will this always be valid? Can a malicious user bypass this? And how can I check every MultipartFile, to save having to remember to add this every time?</p>

<pre><code>@PostMapping(""/"")
public String handleFileUpload(@RequestParam(""file"") MultipartFile file, RedirectAttributes redirectAttributes)
        throws MultipartException, IllegalStateException {

    if (file != null &amp;&amp; file.getContentType() != null &amp;&amp; !file.getContentType().toLowerCase().startsWith(""image""))
        throw new MultipartException(""not img"");

    storageService.store(file);
    redirectAttributes.addFlashAttribute(""message"",
            ""You successfully uploaded "" + file.getOriginalFilename() + ""!"");

    return ""redirect:/"";
}
</code></pre>

<p>Adding an <code>@ExceptionHandler</code> doesn't work, it simply never gets called.</p>

<pre><code>@ExceptionHandler({ SizeLimitExceededException.class, MultipartException.class,
        java.lang.IllegalStateException.class })
public ModelAndView handleError(HttpServletRequest req, Exception e) {
    // error(""Request: "" + req.getRequestURL() + "" raised "" + ex);

    ModelAndView mav = new ModelAndView();
    mav.addObject(""exception"", e);
    mav.addObject(""url"", req.getRequestURL());
    mav.addObject(""timestamp"", new Date());
    mav.addObject(""error"", e.getClass());
    mav.addObject(""message"", e.getMessage());
    mav.addObject(""status"", HttpStatus.INTERNAL_SERVER_ERROR);
    mav.setViewName(""error"");
    return mav;
}
</code></pre>

<p>Number 3 can be resolved by a global exception handler on all Exceptions. (explained in detail in <a href=""https://spring.io/blog/2013/11/01/exception-handling-in-spring-mvc"" rel=""nofollow noreferrer"">this post</a>). However, I'm concerned that it may overrule a Controller level handler.</p>

<pre><code>package hello;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.springframework.core.annotation.AnnotationUtils;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.servlet.ModelAndView;

@ControllerAdvice
class GlobalDefaultExceptionHandler {
    public static final String DEFAULT_ERROR_VIEW = ""error"";

    @ExceptionHandler(value = Exception.class)
    public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception {
        // If the exception is annotated with @ResponseStatus rethrow it and let
        // the framework handle it - like the OrderNotFoundException example
        // at the start of this post.
        // AnnotationUtils is a Spring Framework utility class.
        if (AnnotationUtils.findAnnotation(e.getClass(), ResponseStatus.class) != null)
            throw e;

        // Otherwise setup and send the user to a default error-view.
        ModelAndView mav = new ModelAndView();
        mav.addObject(""exception"", e);
        mav.addObject(""url"", req.getRequestURL());
        mav.addObject(""timestamp"", new Date());
        mav.addObject(""error"", e.getClass());
        mav.addObject(""message"", e.getMessage());
        mav.addObject(""status"", HttpStatus.INTERNAL_SERVER_ERROR);
        mav.setViewName(DEFAULT_ERROR_VIEW);
        return mav;
    }
}
</code></pre>

<p>I've attempted <a href=""https://stackoverflow.com/questions/29363705/handling-multipartexception-with-spring-boot-and-display-error-page"">this answer</a>, which handles the exception but returns an error page. I'd like to return to the original page and display a nice error message. </p>

<hr>

<p>Log 1:</p>

<pre><code>HTTP Status 500 - Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Could not parse multipart servlet request; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (1292555) exceeds the configured maximum (1048576)

type Exception report

message Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Could not parse multipart servlet request; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (1292555) exceeds the configured maximum (1048576)

description The server encountered an internal error that prevented it from fulfilling this request.

exception

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Could not parse multipart servlet request; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (1292555) exceeds the configured maximum (1048576)
    org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
    org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
    org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
    org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
root cause

org.springframework.web.multipart.MultipartException: Could not parse multipart servlet request; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (1292555) exceeds the configured maximum (1048576)
    org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:111)
    org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.&lt;init&gt;(StandardMultipartHttpServletRequest.java:85)
    org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:76)
    org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1099)
    org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:932)
    org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
    org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
    org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
    org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
    org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
root cause

java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (1292555) exceeds the configured maximum (1048576)
    org.apache.catalina.connector.Request.parseParts(Request.java:2871)
    org.apache.catalina.connector.Request.parseParameters(Request.java:3176)
    org.apache.catalina.connector.Request.getParameter(Request.java:1110)
    org.apache.catalina.connector.RequestFacade.getParameter(RequestFacade.java:381)
    org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:70)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
root cause

org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (1292555) exceeds the configured maximum (1048576)
    org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl.&lt;init&gt;(FileUploadBase.java:811)
    org.apache.tomcat.util.http.fileupload.FileUploadBase.getItemIterator(FileUploadBase.java:256)
    org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:280)
    org.apache.catalina.connector.Request.parseParts(Request.java:2801)
    org.apache.catalina.connector.Request.parseParameters(Request.java:3176)
    org.apache.catalina.connector.Request.getParameter(Request.java:1110)
    org.apache.catalina.connector.RequestFacade.getParameter(RequestFacade.java:381)
    org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:70)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
    org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
note The full stack trace of the root cause is available in the Apache Tomcat/8.5.5 logs.

Apache Tomcat/8.5.5
</code></pre>

<hr>
",4161471,,-1,,2017-05-23 12:10:04,2018-02-19 12:31:17,"File upload in Spring Boot: Uploading, validation, and exception handling",<java><tomcat><file-upload><spring-boot><thymeleaf>,2,0,1,,
Spring,40623809,1,,,,,,11/16/2016 3:56:18,,1,347,"<p>We manage to setup a web application with Spring Cloud OAuth2, which implements single sign-on from different identity providers like Facebook and Google, by following <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/github"" rel=""nofollow noreferrer"">this</a> sample source code.</p>

<p>Planning to have our own authentication/authorization server, we provided our own <code>UserDetails</code>, and <code>GrantedAuthority</code>, where we associated user's Facebook and Google. We also have our own set of user authorities other than <code>ROLE_USER</code>.</p>

<p>We have our business methods secured based on user's role (we used <code>@RolesAllowed</code>). When a user sign-in using their Facebook and Google accounts, only <code>ROLE_USER</code> is added as their authorithy. I would like to know how to add our own user authorities from the associated user's <code>GrantedAuthority</code> upon signing into external identity providers, though I found that this can be possibly done using <code>AuthoritiesExtractor</code>, but can't find concrete example on this.</p>
",4084107,,4084107,,2016-11-16 5:10:21,2016-11-16 5:32:08,Spring Cloud OAuth2: Adding user authorities,<spring-security><oauth-2.0><spring-cloud><spring-security-oauth2><spring-oauth2>,1,0,,,
Spring,41738864,1,,,,,,1/19/2017 10:02:00,,2,1105,"<p>I have read and implemented my own Auth server following <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/auth-server"" rel=""nofollow noreferrer"">this tutorial</a> from Spring. There are multiple SSO providers - Facebook, Github and a custom auth server. In this tutorial, the auth server contains the handling of other SSO providers.</p>

<p>I have a separate resource server that links to my auth server using the following properties:</p>

<pre><code>security.oauth2.resource.userInfoUri=http://localhost:9000/user
</code></pre>

<p>I am able to get the token from my auth server using a cUrl command:</p>

<pre><code>curl acme:acmesecret@localhost:9000/oauth/token -d grant_type=password -d username=user -d password=...
{""access_token"":""aa49e025-c4fe-4892-86af-15af2e6b72a2"",""token_type"":""bearer"",""refresh_token"":""97a9f978-7aad-4af7-9329-78ff2ce9962d"",""expires_in"":43199,""scope"":""read write""}
</code></pre>

<p>But what I fail to understand is how can I use the other SSO providers to get such token as well from the auth server? The resource server should not care how did I get the token and whether I am authenticated using Facebook or my custom auth server. It should simply ask the auth server what is the Principal (logged user) and then decide which resources to show him, right?</p>

<p>I don't have any UI and this will be backed for a mobile application so I need to udnerstand how to handle the authentication using REST reqeusts.</p>
",1262024,,,,,2017-01-27 6:36:10,Multiple SSO providers in Spring Boot Auth server,<java><spring-boot><oauth-2.0><spring-security-oauth2>,1,0,1,,
Spring,41850162,1,,,,,,1/25/2017 11:15:06,,4,903,"<p>Referring to the logout flow in <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/single-sign-out/oauth2"" rel=""nofollow noreferrer"">oauth2</a> spring-guides project, once the the user has authenticated using user/password for the first time, the credentials are not asked next time after logout.</p>

<p>How can I ensure that username/password are asked every time after a logout.</p>

<p>This is what I am trying to implement:-</p>

<ul>
<li><p>OAuth2 server issuing JWT token using ""authorization_code"" grant type
with auto approval. This has html/angularjs form to collect
username/password.</p></li>
<li><p>UI/Webfront - Uses @EnableSSO. ALL its endpoints are authenticated
i.e it does not have any unauthorized landing page/ui/link that user
clicks to go to /uaa server. So hitting <a href=""http://localhost:8080"" rel=""nofollow noreferrer"">http://localhost:8080</a>
instantly redirects you to <a href=""http://localhost:9999/uaa"" rel=""nofollow noreferrer"">http://localhost:9999/uaa</a> and presents
custom form to collect username/password.</p></li>
<li>Resource server - Uses @EnableResourceServer. Plain &amp; simple REST api.</li>
</ul>

<p>With the above approach I am not able to workout the logout flow. HTTP POST /logout to the UI application clears the session/auth in UI application but the users gets logged in again automatically ( as I have opted for auto approval for all scopes) without being asked for username password again.</p>

<p>Looking at logs and networks calls, it looks like that all the ""oauth dance"" happens all over again successfully without user being asked for username/password again and seems like the auth server remembers last auth token issued for a client ( using org.springframework.security.oauth2.provider.code.InMemoryAuthorizationCodeServices? ).</p>

<p>How can I tell auth server to ask for username/password every time it is requested for code/token - stateless.</p>

<p>Or what is the best way to implement logout in my given scenario.</p>

<p>( To recreate somewhat near to my requirements, remove <code>permitAll()</code> part from the UiApplication and configure <code>autoApproval</code> in auth server of the mentioned boot project.)</p>

<p><a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/issues/138"" rel=""nofollow noreferrer"">github issue</a></p>
",945034,,1531064,,2017-07-18 8:02:25,2017-07-24 20:53:37,Spring Security OAuth2 AngularJS | Logout Flow,<spring-security><spring-security-oauth2>,3,2,1,,
Spring,42867921,1,,,,,,3/17/2017 22:17:01,,4,931,"<p>I created a simple authorization server, but cannot configure it. </p>

<ol>
<li>Start both apps (8080 is for auth server and 9999 is for client).</li>
<li>Go to <code>localhost:9999/client</code> and get redirected to <code>localhost:8080/login</code> (as expected).</li>
<li>Fill the login form with <em>user/user</em>.</li>
<li>Get redirected to <code>localhost:9999/client</code> (as expected), but have <code>Hello, null</code> instead of <code>Hello, user</code>.</li>
</ol>

<p>However, if I go straight to <code>localhost:8080/me</code>, I have <code>{""name"":""user""}</code>. How can I retrieve <code>Hello, user</code>?</p>

<p><strong>Authorization server</strong></p>

<pre><code>@RestController
@EnableAuthorizationServer
@SpringBootApplication
public class Application extends WebSecurityConfigurerAdapter {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @GetMapping({ ""/user"", ""/me"" })
    public Map&lt;String, String&gt; user(Principal principal) {
        return Collections.singletonMap(""name"", principal == null ? ""null"" : principal.getName());
    }

    @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
        auth.inMemoryAuthentication()
                .withUser(""user"").password(""user"").authorities(AuthorityUtils.NO_AUTHORITIES);
    }

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http.formLogin();
    }
}
</code></pre>

<p><strong>Application's properties</strong></p>

<pre><code>security:
  oauth2:
    client:
      client-id: clientid
      client-secret: clientsecret
      scope: read,write
      auto-approve-scopes: '.*'
</code></pre>

<p><strong>Client</strong></p>

<pre><code>@Configuration
@EnableAutoConfiguration
@EnableOAuth2Sso
@RestController
public class Client {

    @GetMapping(""/"")
    public String home(Principal principal) {
        return ""Hello, "" + principal.getName();
    }

    public static void main(String[] args) {
        new SpringApplicationBuilder(Client.class)
                .properties(""spring.config.name=client"").run(args);
    }

}
</code></pre>

<p><strong>Client's properties</strong></p>

<pre><code>server:
  port: 9999
  context-path: /client
security:
  oauth2:
    client:
      client-id: clientid
      client-secret: clientsecret
      access-token-uri: http://localhost:8080/oauth/token
      user-authorization-uri: http://localhost:8080/oauth/authorize
    resource:
      user-info-uri: http://localhost:8080/me
</code></pre>

<p><strong>UPDATE:</strong><br>
I downloaded <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/tree/master/auth-server"" rel=""nofollow noreferrer"">a tutorial</a> when all works, but it has <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2/blob/master/auth-server/src/main/java/com/example/SocialApplication.java#L81"" rel=""nofollow noreferrer"">ssoFilter</a> that is only for OAuth2 authentication. I just want to configure it with <code>loginForm</code>.<br>
I have also shared a temporary <a href=""https://github.com/delverdev/login-server-example"" rel=""nofollow noreferrer"">example</a> on GitHub. I think it will be easier to look up the problem with it.</p>
",4725496,,4725496,,2017-03-27 3:09:46,2017-03-27 14:02:39,Spring cannot configure authorization server,<java><spring><spring-boot><spring-security><spring-security-oauth2>,4,3,3,,
Spring,43082213,1,,,,,,3/29/2017 0:27:46,,4,2543,"<p>Requesting help on a Spring Boot OAuth2 app's BadCredentialsException when , after user authentication and approval, my Oauth2 client app requests a token from the token endpoint of the OAuth2 AuthServer.</p>

<p>The Spring Boot OAuth2 applications are based off the now famous Dave Syer Spring Boot/ Oauth2 UI Client/Oauth2 AuthServer/JWT example <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow noreferrer"">https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2</a></p>

<p>This is in the Client Apps' debug:</p>

<pre><code>DEBUG org.springframework.web.client.RestTemplate - Created POST request for ""authserver/uaa/oauth/token""
DEBUG org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeAccessTokenProvider - Encoding and sending form: {grant_type=[authorization_code], code=[xxxxx], redirect_uri=[oauthclientapp/login]}
DEBUG org.springframework.web.client.RestTemplate - POST request for ""authserver/uaa/oauth/token"" resulted in 200 (null)
DEBUG org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter - Authentication request failed: org.springframework.security.authentication.BadCredentialsException: Could not obtain access token
</code></pre>

<p>This is the AuthServer's debug:</p>

<pre><code>DEBUG org.springframework.security.web.FilterChainProxy - /oauth/token at position 9 of 15 in additional filter chain; firing Filter: 'BasicAuthenticationFilter'
DEBUG org.springframework.security.web.authentication.www.BasicAuthenticationFilter - Basic Authentication Authorization header found for user 'clientID'
DEBUG org.springframework.security.authentication.ProviderManager - Authentication attempt using org.springframework.security.authentication.dao.DaoAuthenticationProvider
DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider - User 'clientID' not found
DEBUG org.springframework.security.web.authentication.www.BasicAuthenticationFilter - Authentication request for failed: org.springframework.security.authentication.BadCredentialsException: Bad credentials
</code></pre>

<p>The Oauth2 client app is just like the one in the example, no customization in the token request process, just whatever @EnableOAuth2Sso gives us. The ClientDetails config on the AuthServer is also just like the example, sample below, so nothing special.</p>

<p>Any suggestions to better troubleshoot this are much appreciated. Thanks.</p>

<pre><code>@Override
        public void configure(ClientDetailsServiceConfigurer clients) throws Exception {
            clients.inMemory()
                    .withClient(""clientID"")
                    .secret(""acmesecret"")
                    .authorizedGrantTypes(""authorization_code"", ""refresh_token"",
                            ""password"").scopes(""openid"");
        }
</code></pre>
",7746592,,,,,2017-10-01 21:29:36,Spring Boot Oauth2 token request - Bad client credentials from BasicAuthenticationFilter,<spring-boot><oauth-2.0><token><credentials>,1,0,,,
Spring,43431802,1,,,,,,4/15/2017 22:15:39,,1,125,"<p>I work with Spring but never tried Spring Boot. I wanted to try the accessing-data-jpa tutorial - <a href=""https://spring.io/guides/gs/accessing-data-jpa/"" rel=""nofollow noreferrer"">https://spring.io/guides/gs/accessing-data-jpa/</a>. I have cloned the repository from git and run it with Maven as described in the tutorial:
git clone <a href=""https://github.com/spring-guides/gs-accessing-data-jpa.git"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-accessing-data-jpa.git</a>
mvnw spring-boot:run</p>

<p>Running this, I got an error - Caused by: java.lang.ClassNotFoundException: org.springframework.data.repository.CrudRepository</p>

<p>To solve this, I have added a dependency:</p>

<pre><code>&lt;dependency&gt;
            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;
            &lt;artifactId&gt;spring-data-commons-core&lt;/artifactId&gt;
            &lt;version&gt;1.4.1.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
</code></pre>

<p>This helped, however, i got another error:</p>

<pre><code>***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of method demo in hello.Application required a bean of type 'hello.CustomerRepository' that could not be found.


Action:

Consider defining a bean of type 'hello.CustomerRepository' in your configuration.

[WARNING]

java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run(AbstractRunMojo.java:527)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'demo' defined in hello.Application: Unsatisfied dependency expressed through method 'demo' parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'hello.CustomerRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
        at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
        at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
        at hello.Application.main(Application.java:17)
        ... 6 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'hello.CustomerRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1486)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1104)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
        at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
        at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
        ... 24 more
</code></pre>

<p>I am surprised that an official tutorial from Spring does not work. Have you tried this tutorial? Do you have any suggestion why it does not work? Is it broken or is something wrong on my machine? As I know little about Spring Boot I'm not really sure what the problem may be.</p>
",7872780,,380338,,2017-04-16 6:08:36,2017-04-16 16:12:30,Spring tutorial accessing-data-jpa does not work,<spring><spring-boot><spring-data><spring-data-jpa>,1,4,,,
Spring,47202657,1,,,,,,11/9/2017 13:07:18,,1,1816,"<p>I am following the link <a href=""https://spring.io/blog/2015/02/03/sso-with-oauth2-angular-js-and-spring-security-part-v"" rel=""nofollow noreferrer"">https://spring.io/blog/2015/02/03/sso-with-oauth2-angular-js-and-spring-security-part-v</a> &amp; the github project <a href=""https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2"" rel=""nofollow noreferrer"">https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/master/oauth2</a>. I am able to login in to the OAuth provider and get the authorization code back in the client. </p>

<p>Now I make the following call from the client to get the token from the provider (provider is on port 9999)</p>

<pre><code>        HttpHeaders headers = new HttpHeaders();
        headers.add(""Accept"",MediaType.APPLICATION_JSON_VALUE);
        List&lt;String&gt; cookies = httpEntity.getHeaders().get(""Cookie"");
        headers.put(""Cookie"", cookies);
        String redirectURL= ""http://localhost:9999/oauthprovider/oauth/token"" +  ""?"" + ""response_type=token"" + ""&amp;"" + ""grant_type=authorization_code"" + ""&amp;"" + ""client_id=acme""+ ""&amp;"" + ""client_secret=acmesecret""+  ""&amp;"" + ""redirect_uri=http://localhost:8081/callback""+""&amp;"" + ""code="" + authCode + ""&amp;"" + ""state="" + stateValue;

        HttpEntity&lt;String&gt; redirectResponse = template.exchange(
                redirectURL,
                    HttpMethod.POST,
                    responseentity,
                    String.class);


        result=redirectResponse.toString()
</code></pre>

<p>The result variable value has the following.(I have disabled csrf and sending client_secret as a query parameter (for the time being), although they are not recommended)</p>

<pre><code>    &lt;302 Found,{X-Content-Type-Options=[nosniff], X-XSS-Protection=[1; mode=block], Cache-Control=[no-cache, no-store, max-age=0, must-revalidate], Pragma=[no-cache], Expires=[0], X-Frame-Options=[DENY], Location=[http://localhost:9999/oauthprovider/oauthlogin], Content-Length=[0], Date=[Thu, 09 Nov 2017 12:07:37 GMT]}&gt;
</code></pre>

<p>In the console I have these</p>

<pre><code>   Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@9055c2bc: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: 2B669DF59BCE8047849BFBCA148BEE67; Granted Authorities: ROLE_ANONYMOUS
</code></pre>

<p>Does I am redirecting back to login(I am getting it in the logs as mentioned before), since the role is ROLE_ANONYMOUS? How can I fix the issue? </p>

<p>Adding more details on the code (Did only minor changes from the sample code provided in the link). Providers's context path is /oauthprovider and with curl call I am getting the token. </p>

<pre><code>@Configuration
@EnableAuthorizationServer
protected static class OAuth2AuthorizationConfig extends
        AuthorizationServerConfigurerAdapter {

    @Autowired
    private AuthenticationManager authenticationManager;

    //................................
    //................................
    @Override
    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {
        clients.inMemory()
                .withClient(""acme"")
                .secret(""acmesecret"")
                .authorizedGrantTypes(""authorization_code"", ""refresh_token"",
                        ""password"").scopes(""openid"").autoApprove(true).redirectUris(""http://localhost:8081/callback""); 
    }

    @Override
    public void configure(AuthorizationServerEndpointsConfigurer endpoints)
            throws Exception {
        endpoints.authenticationManager(authenticationManager).accessTokenConverter(
                jwtAccessTokenConverter());
    }

    @Override
    public void configure(AuthorizationServerSecurityConfigurer oauthServer)
            throws Exception {
        oauthServer.tokenKeyAccess(""permitAll()"").checkTokenAccess(
                ""isAuthenticated()"");
    }

}
@Configuration
@Order(-20)
protected static class LoginConfig extends WebSecurityConfigurerAdapter {

    @Autowired
    private AuthenticationManager authenticationManager;

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        // @formatter:off
        http
            .formLogin().loginPage(""/oauthlogin"").loginProcessingUrl(""/login"").failureUrl(""/login?error=true"").permitAll() 
        .and()
            .requestMatchers().antMatchers(""/login"", ""/oauthlogin"", ""/oauth/authorize"", ""/oauth/token"" ,""/oauth/confirm_access"")
        .and()
            .authorizeRequests().anyRequest().authenticated();
        // @formatter:on

        http.csrf().disable();
    }

    @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
        auth.parentAuthenticationManager(authenticationManager);
    }
}
</code></pre>
",7349475,,7349475,,2017-11-09 14:17:44,2019-01-29 14:08:19,Spring Security OAuth2- POST request to oauth/token redirects to login and role displays ROLE_ANONYMOUS,<spring><spring-security><oauth><oauth-2.0><spring-security-oauth2>,3,3,,,
Spring,47239476,1,,,,,,11/11/2017 15:20:55,,2,1637,"<p>I have followed <a href=""https://spring.io/guides/gs/messaging-stomp-websocket/"" rel=""nofollow noreferrer"">this tutorial</a> to build a Spring Boot application that serves <code>websockets</code> connections but I can't connect to these websockets from other clients than the one served by Spring Boot itself.</p>

<p>The <a href=""https://github.com/spring-guides/gs-messaging-stomp-websocket/tree/master/complete"" rel=""nofollow noreferrer""><code>complete</code> directory in the GitHub repository that accompanies the tutorial</a> contains the final Spring Boot code. I took the <code>index.html</code> and the <code>app.js</code> files from this repository and created another client that runs on a Node.js server. After that, I replaced the connection strings to point to <code>localhost:8080</code> (where Spring Boot is running). Then I ran the Node.js server and tried to use the websockets, but it does not work.</p>

<p>The first problem was easily solved by adding <code>.setAllowedOrigins(""*"")</code> to the <code>StompEndpointRegistry</code> registry. With this configuration, I managed to connect to the websocket, but now I never get a message back from the socket.</p>

<p>I wonder what am I missing... Does any one know what is the problem?</p>

<p>The extracted <code>index.html</code> and <code>app.js</code> (renamed to <code>index.js</code>) files, and <a href=""https://github.com/brunokrebs/websocket-client"" rel=""nofollow noreferrer"">the Node.js server can be found here</a> for testing purposes. To run it, simply install the dependencies (<code>npm install</code>) and then issue <code>npm start</code>. The server will respond on <a href=""http://localhost:3000/"" rel=""nofollow noreferrer"">http://localhost:3000/</a>.</p>
",1232793,,,,,2018-04-07 10:52:05,CORS and Spring Websocket,<spring><spring-boot><websocket><cors><stomp>,1,0,,,
Spring,49939639,1,,,,,,4/20/2018 10:32:37,,1,302,"<p>I am trying to repeat actions described in the <a href=""https://spring.io/guides/tutorials/spring-boot-oauth2/"" rel=""nofollow noreferrer"">official tutorial(Spring Boot and OAuth2)</a></p>

<p>I stuck on the section <a href=""https://spring.io/guides/tutorials/spring-boot-oauth2/#_social_login_authserver"" rel=""nofollow noreferrer"">Hosting an Authorization Server</a></p>

<p>I tried to download all <a href=""https://github.com/spring-guides/tut-spring-boot-oauth2.git"" rel=""nofollow noreferrer"">sources from github</a> but result the same</p>

<p>I am trying to start sub project <code>social-auth-server</code>:</p>

<p>I found 2 starters there:</p>

<p><code>src\main\java\com\example\SocialApplication.java</code> - oauth2 server
<code>src\test\java\com\example\ClientApplication.java</code> - oauth2 client</p>

<p>quote from the tutorial:</p>

<blockquote>
  <p>Note that the server.context-path is set explicitly, so if you run the
  app to test it remember the home page is <a href=""http://localhost:9999/client"" rel=""nofollow noreferrer"">http://localhost:9999/client</a>.
  Clicking on that link should take you to the auth server and once you
  you have authenticated with the social provider of your choice you
  will be redirected back to the client app</p>
</blockquote>

<p>1.I've started both applications<br>
2. In browser I type <code>localhost:9999/client</code><br>
3. As a result of previous step - browser redirects me to the <code>localhost:8080</code><br>
4. I click <code>Login via Facebook</code><br>
5. As a result of previous step - browser redirects me to the Facebook to input credentials.<br>
6. I typed correct credentials<br>
7. As a result of previous step - browser redirects me to the <code>localhost:8080</code>. Even without my name on this page.</p>

<p>I expected that the browser would redirect me to the <code>localhost:9999</code> and show me message <code>Hello Nikolay!</code></p>

<p>Can you please help me with this tutorial?</p>
",2674303,,2674303,,2018-04-20 12:00:46,2018-04-20 12:00:46,Spring oauth2 sso example doesn't work,<java><spring><spring-boot><oauth-2.0><spring-security-oauth2>,1,0,,,
Spring,50141309,1,,,,,,5/2/2018 18:31:29,,1,272,"<p>I want to build the app with Spring and react, so I started learning from this tutorial: <a href=""https://github.com/spring-guides/tut-react-and-spring-data-rest/tree/master/basic"" rel=""nofollow noreferrer"">https://github.com/spring-guides/tut-react-and-spring-data-rest/tree/master/basic</a> </p>

<p>My project contains the same files - I did all step by step( just shared my project for help <a href=""https://github.com/Lewan110/rest-react"" rel=""nofollow noreferrer"">https://github.com/Lewan110/rest-react</a>). 
Spring Data rest works well, because I getting right data, but when I go to <a href=""http://localhost:8080"" rel=""nofollow noreferrer"">http://localhost:8080</a> I got no data and an error with bundle.js </p>

<p>It's weird for me because bundle.js is generated in: \src\main\resources\static\built\bundle.js
also <em>webpack.config.js</em> looks good:</p>

<pre><code>var path = require('path');

module.exports = {
    entry: './src/main/js/app.js',
    devtool: 'sourcemaps',
    cache: true,
    debug: true,
    output: {
        path: __dirname,
        filename: './src/main/resources/static/built/bundle.js'
    },
    module: {
        loaders: [
            {
                test: path.join(__dirname, '.'),
                exclude: /(node_modules)/,
                loader: 'babel',
                query: {
                    cacheDirectory: true,
                    presets: ['es2015', 'react']
                }
            }
        ]
    }
};
</code></pre>

<p><a href=""https://i.stack.imgur.com/sOuCO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sOuCO.png"" alt=""""></a></p>

<p>I'm completely new in React(and JS) and I don't know where cause can be.</p>
",7920494,,4460737,,2018-05-02 18:49:33,2018-05-30 16:33:53,Error 404 bundle.js not found - Spring Data Rest and React.js,<javascript><spring><reactjs><spring-boot>,1,0,1,,
Spring,51348352,1,,,,,,7/15/2018 12:24:40,,1,1662,"<p>To run Actuator on a separate port we write <code>management.server.port: 9001</code> in the application.properties file. 
But there is a confusing line in <a href=""https://spring.io/guides/gs/actuator-service/"" rel=""nofollow noreferrer"">Actuator Guide</a> code:</p>

<pre><code>@TestPropertySource(properties = {""management.port=0""})
</code></pre>

<p>And then 
...</p>

<pre><code>@Value(""${local.management.port}"")
private int mgt;
</code></pre>

<p>Here is the source class <a href=""https://github.com/spring-guides/gs-actuator-service/blob/master/complete/src/test/java/hello/HelloWorldApplicationTests.java"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-actuator-service/blob/master/complete/src/test/java/hello/HelloWorldApplicationTests.java</a></p>

<p>What's the difference between
 <code>management.server.port</code>, 
<code>management.port</code> and
 <code>local.management.port</code>?</p>
",9152953,,,,,2018-10-02 11:43:36,What's the difference between management.server.port and management.port properties?,<spring-boot-actuator>,1,0,,,
Spring,53816713,1,,,,,,12/17/2018 13:56:12,,1,81,"<p>I've installed it and I've set the path (C:\Program Files\Git\bin\git.exe). i've also tried this tutorial <a href=""https://docs.microsoft.com/sl-si/azure/jenkins/install-jenkins-solution-template"" rel=""nofollow noreferrer"">https://docs.microsoft.com/sl-si/azure/jenkins/install-jenkins-solution-template</a> but it also gives me this console output.</p>

<p>I've installed it, I've set the git path, I still get this. I've been stuck here for a couple days, every build I make gives me a similar error message.
i use a windows 10 computer, and i have a linux VM on azure. </p>

<p>The Free Swap Space on my on the azure node in jenkins says its on 0B, but there is 26,99GB of Free Temp Space. Is maybie that the problem? </p>

<p>Anyway this is my console output for the tutorial i've completed: </p>

<pre><code>Started by user admin
Building remotely on testadminjenkinsazure115f10 (ubuntu) in workspace /home/Jenkinsadmin/workspace/mySampleApp
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] Done
Cloning the remote Git repository
Cloning repository https://github.com/spring-guides/gs-spring-boot.git
 &gt; C:\Program Files\Git\bin\git.exe init /home/Jenkinsadmin/workspace/mySampleApp # timeout=10
ERROR: Error cloning remote repo 'origin'
hudson.plugins.git.GitException: Could not init /home/Jenkinsadmin/workspace/mySampleApp
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$5.execute(CliGitAPIImpl.java:787)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$2.execute(CliGitAPIImpl.java:579)
    at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler$1.call(RemoteGitImpl.java:153)
    at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler$1.call(RemoteGitImpl.java:146)
    at hudson.remoting.UserRequest.perform(UserRequest.java:212)
    at hudson.remoting.UserRequest.perform(UserRequest.java:54)
    at hudson.remoting.Request$2.run(Request.java:369)
    at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    at java.lang.Thread.run(Thread.java:748)
    Suppressed: hudson.remoting.Channel$CallSiteStackTrace: Remote call to testadminjenkinsazure115f10
        at hudson.remoting.Channel.attachCallSiteStackTrace(Channel.java:1741)
        at hudson.remoting.UserRequest$ExceptionResponse.retrieve(UserRequest.java:357)
        at hudson.remoting.Channel.call(Channel.java:955)
        at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler.execute(RemoteGitImpl.java:146)
        at sun.reflect.GeneratedMethodAccessor870.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.jenkinsci.plugins.gitclient.RemoteGitImpl$CommandInvocationHandler.invoke(RemoteGitImpl.java:132)
        at com.sun.proxy.$Proxy222.execute(Unknown Source)
        at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1146)
        at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1186)
        at hudson.scm.SCM.checkout(SCM.java:504)
        at hudson.model.AbstractProject.checkout(AbstractProject.java:1208)
        at hudson.model.AbstractBuild$AbstractBuildExecution.defaultCheckout(AbstractBuild.java:574)
        at jenkins.scm.SCMCheckoutStrategy.checkout(SCMCheckoutStrategy.java:86)
        at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:499)
        at hudson.model.Run.execute(Run.java:1810)
        at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
        at hudson.model.ResourceController.execute(ResourceController.java:97)
        at hudson.model.Executor.run(Executor.java:429)
Caused by: hudson.plugins.git.GitException: Error performing command: C:\Program Files\Git\bin\git.exe init /home/Jenkinsadmin/workspace/mySampleApp
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2023)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1984)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1980)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommand(CliGitAPIImpl.java:1612)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$5.execute(CliGitAPIImpl.java:785)
    ... 11 more
Caused by: java.io.IOException: Cannot run program ""C:\Program Files\Git\bin\git.exe"" (in directory ""/home/Jenkinsadmin/workspace/mySampleApp""): error=2, No such file or directory
    at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
    at hudson.Proc$LocalProc.&lt;init&gt;(Proc.java:249)
    at hudson.Proc$LocalProc.&lt;init&gt;(Proc.java:218)
    at hudson.Launcher$LocalLauncher.launch(Launcher.java:936)
    at hudson.Launcher$ProcStarter.start(Launcher.java:455)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2012)
    ... 15 more
Caused by: java.io.IOException: error=2, No such file or directory
    at java.lang.UNIXProcess.forkAndExec(Native Method)
    at java.lang.UNIXProcess.&lt;init&gt;(UNIXProcess.java:247)
    at java.lang.ProcessImpl.start(ProcessImpl.java:134)
    at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
    ... 20 more
ERROR: Error cloning remote repo 'origin'
Finished: FAILURE
</code></pre>
",10712728,,3957754,,2018-12-21 3:31:03,2018-12-22 13:37:46,How deploy source code as an application in a linux virtual machine on Azure using Jenkins?,<git><azure><jenkins><virtual-machine><jenkins-plugins>,2,5,,,
Spring,55564608,1,,,,,,4/7/2019 23:40:05,,1,230,"<p>I'm trying to learn how to connect my Java Spring app to my MongoDB database. I'm following this guide:</p>

<p><a href=""https://spring.io/guides/gs/accessing-data-mongodb/"" rel=""nofollow noreferrer"">https://spring.io/guides/gs/accessing-data-mongodb/</a></p>

<p>I'm trying to learn the ""Create simple queries"" section. </p>

<pre><code>package hello;

import java.util.List;

import org.springframework.data.mongodb.repository.MongoRepository;

public interface CustomerRepository extends MongoRepository&lt;Customer, String&gt; {

    public Customer findByFirstName(String firstName);
    public List&lt;Customer&gt; findByLastName(String lastName);

}
</code></pre>

<p>They show extending the MongoRepository interface and defining certain methods. However these methods are not overrides and are not methods inherited from the interface. It doesn't appear as if they implement these methods anywhere for the actual implementation, so I'm incredibly confused how this works.</p>

<blockquote>
  <p>""You can define other queries as needed by simply declaring their
  method signature. In this case, you add findByFirstName, which
  essentially seeks documents of type Customer and finds the one that
  matches on firstName.""</p>
</blockquote>

<p>Here's the repository for the full code for the tutorial: <a href=""https://github.com/spring-guides/gs-accessing-data-mongodb"" rel=""nofollow noreferrer"">https://github.com/spring-guides/gs-accessing-data-mongodb</a></p>

<p>I'm incredibly confused how definding a new method in the interface without implementing that method myself magically allows me to construct queries...anyone can shed some light?</p>
",8887398,,,,,2019-04-08 0:01:42,How does Java Spring query MongoDB?,<java><spring><mongodb>,1,0,,,